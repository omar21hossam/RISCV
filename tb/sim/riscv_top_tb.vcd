$date
	Sat May 10 16:39:49 2025
$end
$version
	QuestaSim Version 2024.1
$end
$timescale
	1ps
$end

$scope module riscv_top_tb $end
$var reg 1 ! clk $end

$scope module DUT $end
$var parameter 32 " COREV_PULP $end
$var parameter 32 # COREV_CLUSTER $end
$var parameter 32 $ FPU $end
$var parameter 32 % FPU_ADDMUL_LAT $end
$var parameter 32 & FPU_OTHERS_LAT $end
$var parameter 32 ' ZFINX $end
$var parameter 32 ( NUM_MHPMCOUNTERS $end
$var wire 1 ) clk_i $end
$var wire 1 * rst_ni $end
$var wire 1 + pulp_clock_en_i $end
$var wire 1 , scan_cg_en_i $end
$var wire 1 - boot_addr_i [31] $end
$var wire 1 . boot_addr_i [30] $end
$var wire 1 / boot_addr_i [29] $end
$var wire 1 0 boot_addr_i [28] $end
$var wire 1 1 boot_addr_i [27] $end
$var wire 1 2 boot_addr_i [26] $end
$var wire 1 3 boot_addr_i [25] $end
$var wire 1 4 boot_addr_i [24] $end
$var wire 1 5 boot_addr_i [23] $end
$var wire 1 6 boot_addr_i [22] $end
$var wire 1 7 boot_addr_i [21] $end
$var wire 1 8 boot_addr_i [20] $end
$var wire 1 9 boot_addr_i [19] $end
$var wire 1 : boot_addr_i [18] $end
$var wire 1 ; boot_addr_i [17] $end
$var wire 1 < boot_addr_i [16] $end
$var wire 1 = boot_addr_i [15] $end
$var wire 1 > boot_addr_i [14] $end
$var wire 1 ? boot_addr_i [13] $end
$var wire 1 @ boot_addr_i [12] $end
$var wire 1 A boot_addr_i [11] $end
$var wire 1 B boot_addr_i [10] $end
$var wire 1 C boot_addr_i [9] $end
$var wire 1 D boot_addr_i [8] $end
$var wire 1 E boot_addr_i [7] $end
$var wire 1 F boot_addr_i [6] $end
$var wire 1 G boot_addr_i [5] $end
$var wire 1 H boot_addr_i [4] $end
$var wire 1 I boot_addr_i [3] $end
$var wire 1 J boot_addr_i [2] $end
$var wire 1 K boot_addr_i [1] $end
$var wire 1 L boot_addr_i [0] $end
$var wire 1 M mtvec_addr_i [31] $end
$var wire 1 N mtvec_addr_i [30] $end
$var wire 1 O mtvec_addr_i [29] $end
$var wire 1 P mtvec_addr_i [28] $end
$var wire 1 Q mtvec_addr_i [27] $end
$var wire 1 R mtvec_addr_i [26] $end
$var wire 1 S mtvec_addr_i [25] $end
$var wire 1 T mtvec_addr_i [24] $end
$var wire 1 U mtvec_addr_i [23] $end
$var wire 1 V mtvec_addr_i [22] $end
$var wire 1 W mtvec_addr_i [21] $end
$var wire 1 X mtvec_addr_i [20] $end
$var wire 1 Y mtvec_addr_i [19] $end
$var wire 1 Z mtvec_addr_i [18] $end
$var wire 1 [ mtvec_addr_i [17] $end
$var wire 1 \ mtvec_addr_i [16] $end
$var wire 1 ] mtvec_addr_i [15] $end
$var wire 1 ^ mtvec_addr_i [14] $end
$var wire 1 _ mtvec_addr_i [13] $end
$var wire 1 ` mtvec_addr_i [12] $end
$var wire 1 a mtvec_addr_i [11] $end
$var wire 1 b mtvec_addr_i [10] $end
$var wire 1 c mtvec_addr_i [9] $end
$var wire 1 d mtvec_addr_i [8] $end
$var wire 1 e mtvec_addr_i [7] $end
$var wire 1 f mtvec_addr_i [6] $end
$var wire 1 g mtvec_addr_i [5] $end
$var wire 1 h mtvec_addr_i [4] $end
$var wire 1 i mtvec_addr_i [3] $end
$var wire 1 j mtvec_addr_i [2] $end
$var wire 1 k mtvec_addr_i [1] $end
$var wire 1 l mtvec_addr_i [0] $end
$var wire 1 m dm_halt_addr_i [31] $end
$var wire 1 n dm_halt_addr_i [30] $end
$var wire 1 o dm_halt_addr_i [29] $end
$var wire 1 p dm_halt_addr_i [28] $end
$var wire 1 q dm_halt_addr_i [27] $end
$var wire 1 r dm_halt_addr_i [26] $end
$var wire 1 s dm_halt_addr_i [25] $end
$var wire 1 t dm_halt_addr_i [24] $end
$var wire 1 u dm_halt_addr_i [23] $end
$var wire 1 v dm_halt_addr_i [22] $end
$var wire 1 w dm_halt_addr_i [21] $end
$var wire 1 x dm_halt_addr_i [20] $end
$var wire 1 y dm_halt_addr_i [19] $end
$var wire 1 z dm_halt_addr_i [18] $end
$var wire 1 { dm_halt_addr_i [17] $end
$var wire 1 | dm_halt_addr_i [16] $end
$var wire 1 } dm_halt_addr_i [15] $end
$var wire 1 ~ dm_halt_addr_i [14] $end
$var wire 1 !! dm_halt_addr_i [13] $end
$var wire 1 "! dm_halt_addr_i [12] $end
$var wire 1 #! dm_halt_addr_i [11] $end
$var wire 1 $! dm_halt_addr_i [10] $end
$var wire 1 %! dm_halt_addr_i [9] $end
$var wire 1 &! dm_halt_addr_i [8] $end
$var wire 1 '! dm_halt_addr_i [7] $end
$var wire 1 (! dm_halt_addr_i [6] $end
$var wire 1 )! dm_halt_addr_i [5] $end
$var wire 1 *! dm_halt_addr_i [4] $end
$var wire 1 +! dm_halt_addr_i [3] $end
$var wire 1 ,! dm_halt_addr_i [2] $end
$var wire 1 -! dm_halt_addr_i [1] $end
$var wire 1 .! dm_halt_addr_i [0] $end
$var wire 1 /! hart_id_i [31] $end
$var wire 1 0! hart_id_i [30] $end
$var wire 1 1! hart_id_i [29] $end
$var wire 1 2! hart_id_i [28] $end
$var wire 1 3! hart_id_i [27] $end
$var wire 1 4! hart_id_i [26] $end
$var wire 1 5! hart_id_i [25] $end
$var wire 1 6! hart_id_i [24] $end
$var wire 1 7! hart_id_i [23] $end
$var wire 1 8! hart_id_i [22] $end
$var wire 1 9! hart_id_i [21] $end
$var wire 1 :! hart_id_i [20] $end
$var wire 1 ;! hart_id_i [19] $end
$var wire 1 <! hart_id_i [18] $end
$var wire 1 =! hart_id_i [17] $end
$var wire 1 >! hart_id_i [16] $end
$var wire 1 ?! hart_id_i [15] $end
$var wire 1 @! hart_id_i [14] $end
$var wire 1 A! hart_id_i [13] $end
$var wire 1 B! hart_id_i [12] $end
$var wire 1 C! hart_id_i [11] $end
$var wire 1 D! hart_id_i [10] $end
$var wire 1 E! hart_id_i [9] $end
$var wire 1 F! hart_id_i [8] $end
$var wire 1 G! hart_id_i [7] $end
$var wire 1 H! hart_id_i [6] $end
$var wire 1 I! hart_id_i [5] $end
$var wire 1 J! hart_id_i [4] $end
$var wire 1 K! hart_id_i [3] $end
$var wire 1 L! hart_id_i [2] $end
$var wire 1 M! hart_id_i [1] $end
$var wire 1 N! hart_id_i [0] $end
$var wire 1 O! dm_exception_addr_i [31] $end
$var wire 1 P! dm_exception_addr_i [30] $end
$var wire 1 Q! dm_exception_addr_i [29] $end
$var wire 1 R! dm_exception_addr_i [28] $end
$var wire 1 S! dm_exception_addr_i [27] $end
$var wire 1 T! dm_exception_addr_i [26] $end
$var wire 1 U! dm_exception_addr_i [25] $end
$var wire 1 V! dm_exception_addr_i [24] $end
$var wire 1 W! dm_exception_addr_i [23] $end
$var wire 1 X! dm_exception_addr_i [22] $end
$var wire 1 Y! dm_exception_addr_i [21] $end
$var wire 1 Z! dm_exception_addr_i [20] $end
$var wire 1 [! dm_exception_addr_i [19] $end
$var wire 1 \! dm_exception_addr_i [18] $end
$var wire 1 ]! dm_exception_addr_i [17] $end
$var wire 1 ^! dm_exception_addr_i [16] $end
$var wire 1 _! dm_exception_addr_i [15] $end
$var wire 1 `! dm_exception_addr_i [14] $end
$var wire 1 a! dm_exception_addr_i [13] $end
$var wire 1 b! dm_exception_addr_i [12] $end
$var wire 1 c! dm_exception_addr_i [11] $end
$var wire 1 d! dm_exception_addr_i [10] $end
$var wire 1 e! dm_exception_addr_i [9] $end
$var wire 1 f! dm_exception_addr_i [8] $end
$var wire 1 g! dm_exception_addr_i [7] $end
$var wire 1 h! dm_exception_addr_i [6] $end
$var wire 1 i! dm_exception_addr_i [5] $end
$var wire 1 j! dm_exception_addr_i [4] $end
$var wire 1 k! dm_exception_addr_i [3] $end
$var wire 1 l! dm_exception_addr_i [2] $end
$var wire 1 m! dm_exception_addr_i [1] $end
$var wire 1 n! dm_exception_addr_i [0] $end
$var reg 1 o! instr_req_o $end
$var wire 1 p! instr_gnt_i $end
$var wire 1 q! instr_rvalid_i $end
$var reg 32 r! instr_addr_o [31:0] $end
$var wire 1 s! instr_rdata_i [31] $end
$var wire 1 t! instr_rdata_i [30] $end
$var wire 1 u! instr_rdata_i [29] $end
$var wire 1 v! instr_rdata_i [28] $end
$var wire 1 w! instr_rdata_i [27] $end
$var wire 1 x! instr_rdata_i [26] $end
$var wire 1 y! instr_rdata_i [25] $end
$var wire 1 z! instr_rdata_i [24] $end
$var wire 1 {! instr_rdata_i [23] $end
$var wire 1 |! instr_rdata_i [22] $end
$var wire 1 }! instr_rdata_i [21] $end
$var wire 1 ~! instr_rdata_i [20] $end
$var wire 1 !" instr_rdata_i [19] $end
$var wire 1 "" instr_rdata_i [18] $end
$var wire 1 #" instr_rdata_i [17] $end
$var wire 1 $" instr_rdata_i [16] $end
$var wire 1 %" instr_rdata_i [15] $end
$var wire 1 &" instr_rdata_i [14] $end
$var wire 1 '" instr_rdata_i [13] $end
$var wire 1 (" instr_rdata_i [12] $end
$var wire 1 )" instr_rdata_i [11] $end
$var wire 1 *" instr_rdata_i [10] $end
$var wire 1 +" instr_rdata_i [9] $end
$var wire 1 ," instr_rdata_i [8] $end
$var wire 1 -" instr_rdata_i [7] $end
$var wire 1 ." instr_rdata_i [6] $end
$var wire 1 /" instr_rdata_i [5] $end
$var wire 1 0" instr_rdata_i [4] $end
$var wire 1 1" instr_rdata_i [3] $end
$var wire 1 2" instr_rdata_i [2] $end
$var wire 1 3" instr_rdata_i [1] $end
$var wire 1 4" instr_rdata_i [0] $end
$var reg 1 5" data_req_o $end
$var wire 1 6" data_gnt_i $end
$var wire 1 7" data_rvalid_i $end
$var reg 1 8" data_we_o $end
$var reg 4 9" data_be_o [3:0] $end
$var reg 32 :" data_addr_o [31:0] $end
$var reg 32 ;" data_wdata_o [31:0] $end
$var wire 1 <" data_rdata_i [31] $end
$var wire 1 =" data_rdata_i [30] $end
$var wire 1 >" data_rdata_i [29] $end
$var wire 1 ?" data_rdata_i [28] $end
$var wire 1 @" data_rdata_i [27] $end
$var wire 1 A" data_rdata_i [26] $end
$var wire 1 B" data_rdata_i [25] $end
$var wire 1 C" data_rdata_i [24] $end
$var wire 1 D" data_rdata_i [23] $end
$var wire 1 E" data_rdata_i [22] $end
$var wire 1 F" data_rdata_i [21] $end
$var wire 1 G" data_rdata_i [20] $end
$var wire 1 H" data_rdata_i [19] $end
$var wire 1 I" data_rdata_i [18] $end
$var wire 1 J" data_rdata_i [17] $end
$var wire 1 K" data_rdata_i [16] $end
$var wire 1 L" data_rdata_i [15] $end
$var wire 1 M" data_rdata_i [14] $end
$var wire 1 N" data_rdata_i [13] $end
$var wire 1 O" data_rdata_i [12] $end
$var wire 1 P" data_rdata_i [11] $end
$var wire 1 Q" data_rdata_i [10] $end
$var wire 1 R" data_rdata_i [9] $end
$var wire 1 S" data_rdata_i [8] $end
$var wire 1 T" data_rdata_i [7] $end
$var wire 1 U" data_rdata_i [6] $end
$var wire 1 V" data_rdata_i [5] $end
$var wire 1 W" data_rdata_i [4] $end
$var wire 1 X" data_rdata_i [3] $end
$var wire 1 Y" data_rdata_i [2] $end
$var wire 1 Z" data_rdata_i [1] $end
$var wire 1 [" data_rdata_i [0] $end
$var wire 1 \" irq_i [31] $end
$var wire 1 ]" irq_i [30] $end
$var wire 1 ^" irq_i [29] $end
$var wire 1 _" irq_i [28] $end
$var wire 1 `" irq_i [27] $end
$var wire 1 a" irq_i [26] $end
$var wire 1 b" irq_i [25] $end
$var wire 1 c" irq_i [24] $end
$var wire 1 d" irq_i [23] $end
$var wire 1 e" irq_i [22] $end
$var wire 1 f" irq_i [21] $end
$var wire 1 g" irq_i [20] $end
$var wire 1 h" irq_i [19] $end
$var wire 1 i" irq_i [18] $end
$var wire 1 j" irq_i [17] $end
$var wire 1 k" irq_i [16] $end
$var wire 1 l" irq_i [15] $end
$var wire 1 m" irq_i [14] $end
$var wire 1 n" irq_i [13] $end
$var wire 1 o" irq_i [12] $end
$var wire 1 p" irq_i [11] $end
$var wire 1 q" irq_i [10] $end
$var wire 1 r" irq_i [9] $end
$var wire 1 s" irq_i [8] $end
$var wire 1 t" irq_i [7] $end
$var wire 1 u" irq_i [6] $end
$var wire 1 v" irq_i [5] $end
$var wire 1 w" irq_i [4] $end
$var wire 1 x" irq_i [3] $end
$var wire 1 y" irq_i [2] $end
$var wire 1 z" irq_i [1] $end
$var wire 1 {" irq_i [0] $end
$var reg 1 |" irq_ack_o $end
$var reg 5 }" irq_id_o [4:0] $end
$var wire 1 ~" debug_req_i $end
$var reg 1 !# debug_havereset_o $end
$var reg 1 "# debug_running_o $end
$var reg 1 ## debug_halted_o $end
$var wire 1 $# fetch_enable_i $end
$var reg 1 %# core_sleep_o $end
$var reg 1 &# clk $end
$var reg 1 '# apu_req $end
$var reg 96 (# apu_operands [95:0] $end
$var reg 6 )# apu_op [5:0] $end
$var reg 15 *# apu_flags [14:0] $end
$var reg 1 +# apu_gnt $end
$var reg 1 ,# apu_rvalid $end
$var reg 32 -# apu_rdata [31:0] $end
$var reg 5 .# apu_rflags [4:0] $end

$scope module core_i $end
$var parameter 32 /# COREV_PULP $end
$var parameter 32 0# COREV_CLUSTER $end
$var parameter 32 1# FPU $end
$var parameter 32 2# FPU_ADDMUL_LAT $end
$var parameter 32 3# FPU_OTHERS_LAT $end
$var parameter 32 4# ZFINX $end
$var parameter 32 5# NUM_MHPMCOUNTERS $end
$var parameter 32 6# PULP_SECURE $end
$var parameter 32 7# N_PMP_ENTRIES $end
$var parameter 32 8# USE_PMP $end
$var parameter 32 9# A_EXTENSION $end
$var parameter 32 :# DEBUG_TRIGGER_EN $end
$var parameter 32 ;# PULP_OBI $end
$var parameter 32 <# N_HWLP $end
$var parameter 32 =# APU $end
$var wire 1 ) clk_i $end
$var wire 1 * rst_ni $end
$var wire 1 + pulp_clock_en_i $end
$var wire 1 , scan_cg_en_i $end
$var wire 1 - boot_addr_i [31] $end
$var wire 1 . boot_addr_i [30] $end
$var wire 1 / boot_addr_i [29] $end
$var wire 1 0 boot_addr_i [28] $end
$var wire 1 1 boot_addr_i [27] $end
$var wire 1 2 boot_addr_i [26] $end
$var wire 1 3 boot_addr_i [25] $end
$var wire 1 4 boot_addr_i [24] $end
$var wire 1 5 boot_addr_i [23] $end
$var wire 1 6 boot_addr_i [22] $end
$var wire 1 7 boot_addr_i [21] $end
$var wire 1 8 boot_addr_i [20] $end
$var wire 1 9 boot_addr_i [19] $end
$var wire 1 : boot_addr_i [18] $end
$var wire 1 ; boot_addr_i [17] $end
$var wire 1 < boot_addr_i [16] $end
$var wire 1 = boot_addr_i [15] $end
$var wire 1 > boot_addr_i [14] $end
$var wire 1 ? boot_addr_i [13] $end
$var wire 1 @ boot_addr_i [12] $end
$var wire 1 A boot_addr_i [11] $end
$var wire 1 B boot_addr_i [10] $end
$var wire 1 C boot_addr_i [9] $end
$var wire 1 D boot_addr_i [8] $end
$var wire 1 E boot_addr_i [7] $end
$var wire 1 F boot_addr_i [6] $end
$var wire 1 G boot_addr_i [5] $end
$var wire 1 H boot_addr_i [4] $end
$var wire 1 I boot_addr_i [3] $end
$var wire 1 J boot_addr_i [2] $end
$var wire 1 K boot_addr_i [1] $end
$var wire 1 L boot_addr_i [0] $end
$var wire 1 M mtvec_addr_i [31] $end
$var wire 1 N mtvec_addr_i [30] $end
$var wire 1 O mtvec_addr_i [29] $end
$var wire 1 P mtvec_addr_i [28] $end
$var wire 1 Q mtvec_addr_i [27] $end
$var wire 1 R mtvec_addr_i [26] $end
$var wire 1 S mtvec_addr_i [25] $end
$var wire 1 T mtvec_addr_i [24] $end
$var wire 1 U mtvec_addr_i [23] $end
$var wire 1 V mtvec_addr_i [22] $end
$var wire 1 W mtvec_addr_i [21] $end
$var wire 1 X mtvec_addr_i [20] $end
$var wire 1 Y mtvec_addr_i [19] $end
$var wire 1 Z mtvec_addr_i [18] $end
$var wire 1 [ mtvec_addr_i [17] $end
$var wire 1 \ mtvec_addr_i [16] $end
$var wire 1 ] mtvec_addr_i [15] $end
$var wire 1 ^ mtvec_addr_i [14] $end
$var wire 1 _ mtvec_addr_i [13] $end
$var wire 1 ` mtvec_addr_i [12] $end
$var wire 1 a mtvec_addr_i [11] $end
$var wire 1 b mtvec_addr_i [10] $end
$var wire 1 c mtvec_addr_i [9] $end
$var wire 1 d mtvec_addr_i [8] $end
$var wire 1 e mtvec_addr_i [7] $end
$var wire 1 f mtvec_addr_i [6] $end
$var wire 1 g mtvec_addr_i [5] $end
$var wire 1 h mtvec_addr_i [4] $end
$var wire 1 i mtvec_addr_i [3] $end
$var wire 1 j mtvec_addr_i [2] $end
$var wire 1 k mtvec_addr_i [1] $end
$var wire 1 l mtvec_addr_i [0] $end
$var wire 1 m dm_halt_addr_i [31] $end
$var wire 1 n dm_halt_addr_i [30] $end
$var wire 1 o dm_halt_addr_i [29] $end
$var wire 1 p dm_halt_addr_i [28] $end
$var wire 1 q dm_halt_addr_i [27] $end
$var wire 1 r dm_halt_addr_i [26] $end
$var wire 1 s dm_halt_addr_i [25] $end
$var wire 1 t dm_halt_addr_i [24] $end
$var wire 1 u dm_halt_addr_i [23] $end
$var wire 1 v dm_halt_addr_i [22] $end
$var wire 1 w dm_halt_addr_i [21] $end
$var wire 1 x dm_halt_addr_i [20] $end
$var wire 1 y dm_halt_addr_i [19] $end
$var wire 1 z dm_halt_addr_i [18] $end
$var wire 1 { dm_halt_addr_i [17] $end
$var wire 1 | dm_halt_addr_i [16] $end
$var wire 1 } dm_halt_addr_i [15] $end
$var wire 1 ~ dm_halt_addr_i [14] $end
$var wire 1 !! dm_halt_addr_i [13] $end
$var wire 1 "! dm_halt_addr_i [12] $end
$var wire 1 #! dm_halt_addr_i [11] $end
$var wire 1 $! dm_halt_addr_i [10] $end
$var wire 1 %! dm_halt_addr_i [9] $end
$var wire 1 &! dm_halt_addr_i [8] $end
$var wire 1 '! dm_halt_addr_i [7] $end
$var wire 1 (! dm_halt_addr_i [6] $end
$var wire 1 )! dm_halt_addr_i [5] $end
$var wire 1 *! dm_halt_addr_i [4] $end
$var wire 1 +! dm_halt_addr_i [3] $end
$var wire 1 ,! dm_halt_addr_i [2] $end
$var wire 1 -! dm_halt_addr_i [1] $end
$var wire 1 .! dm_halt_addr_i [0] $end
$var wire 1 /! hart_id_i [31] $end
$var wire 1 0! hart_id_i [30] $end
$var wire 1 1! hart_id_i [29] $end
$var wire 1 2! hart_id_i [28] $end
$var wire 1 3! hart_id_i [27] $end
$var wire 1 4! hart_id_i [26] $end
$var wire 1 5! hart_id_i [25] $end
$var wire 1 6! hart_id_i [24] $end
$var wire 1 7! hart_id_i [23] $end
$var wire 1 8! hart_id_i [22] $end
$var wire 1 9! hart_id_i [21] $end
$var wire 1 :! hart_id_i [20] $end
$var wire 1 ;! hart_id_i [19] $end
$var wire 1 <! hart_id_i [18] $end
$var wire 1 =! hart_id_i [17] $end
$var wire 1 >! hart_id_i [16] $end
$var wire 1 ?! hart_id_i [15] $end
$var wire 1 @! hart_id_i [14] $end
$var wire 1 A! hart_id_i [13] $end
$var wire 1 B! hart_id_i [12] $end
$var wire 1 C! hart_id_i [11] $end
$var wire 1 D! hart_id_i [10] $end
$var wire 1 E! hart_id_i [9] $end
$var wire 1 F! hart_id_i [8] $end
$var wire 1 G! hart_id_i [7] $end
$var wire 1 H! hart_id_i [6] $end
$var wire 1 I! hart_id_i [5] $end
$var wire 1 J! hart_id_i [4] $end
$var wire 1 K! hart_id_i [3] $end
$var wire 1 L! hart_id_i [2] $end
$var wire 1 M! hart_id_i [1] $end
$var wire 1 N! hart_id_i [0] $end
$var wire 1 O! dm_exception_addr_i [31] $end
$var wire 1 P! dm_exception_addr_i [30] $end
$var wire 1 Q! dm_exception_addr_i [29] $end
$var wire 1 R! dm_exception_addr_i [28] $end
$var wire 1 S! dm_exception_addr_i [27] $end
$var wire 1 T! dm_exception_addr_i [26] $end
$var wire 1 U! dm_exception_addr_i [25] $end
$var wire 1 V! dm_exception_addr_i [24] $end
$var wire 1 W! dm_exception_addr_i [23] $end
$var wire 1 X! dm_exception_addr_i [22] $end
$var wire 1 Y! dm_exception_addr_i [21] $end
$var wire 1 Z! dm_exception_addr_i [20] $end
$var wire 1 [! dm_exception_addr_i [19] $end
$var wire 1 \! dm_exception_addr_i [18] $end
$var wire 1 ]! dm_exception_addr_i [17] $end
$var wire 1 ^! dm_exception_addr_i [16] $end
$var wire 1 _! dm_exception_addr_i [15] $end
$var wire 1 `! dm_exception_addr_i [14] $end
$var wire 1 a! dm_exception_addr_i [13] $end
$var wire 1 b! dm_exception_addr_i [12] $end
$var wire 1 c! dm_exception_addr_i [11] $end
$var wire 1 d! dm_exception_addr_i [10] $end
$var wire 1 e! dm_exception_addr_i [9] $end
$var wire 1 f! dm_exception_addr_i [8] $end
$var wire 1 g! dm_exception_addr_i [7] $end
$var wire 1 h! dm_exception_addr_i [6] $end
$var wire 1 i! dm_exception_addr_i [5] $end
$var wire 1 j! dm_exception_addr_i [4] $end
$var wire 1 k! dm_exception_addr_i [3] $end
$var wire 1 l! dm_exception_addr_i [2] $end
$var wire 1 m! dm_exception_addr_i [1] $end
$var wire 1 n! dm_exception_addr_i [0] $end
$var reg 1 ># instr_req_o $end
$var wire 1 p! instr_gnt_i $end
$var wire 1 q! instr_rvalid_i $end
$var reg 32 ?# instr_addr_o [31:0] $end
$var wire 1 s! instr_rdata_i [31] $end
$var wire 1 t! instr_rdata_i [30] $end
$var wire 1 u! instr_rdata_i [29] $end
$var wire 1 v! instr_rdata_i [28] $end
$var wire 1 w! instr_rdata_i [27] $end
$var wire 1 x! instr_rdata_i [26] $end
$var wire 1 y! instr_rdata_i [25] $end
$var wire 1 z! instr_rdata_i [24] $end
$var wire 1 {! instr_rdata_i [23] $end
$var wire 1 |! instr_rdata_i [22] $end
$var wire 1 }! instr_rdata_i [21] $end
$var wire 1 ~! instr_rdata_i [20] $end
$var wire 1 !" instr_rdata_i [19] $end
$var wire 1 "" instr_rdata_i [18] $end
$var wire 1 #" instr_rdata_i [17] $end
$var wire 1 $" instr_rdata_i [16] $end
$var wire 1 %" instr_rdata_i [15] $end
$var wire 1 &" instr_rdata_i [14] $end
$var wire 1 '" instr_rdata_i [13] $end
$var wire 1 (" instr_rdata_i [12] $end
$var wire 1 )" instr_rdata_i [11] $end
$var wire 1 *" instr_rdata_i [10] $end
$var wire 1 +" instr_rdata_i [9] $end
$var wire 1 ," instr_rdata_i [8] $end
$var wire 1 -" instr_rdata_i [7] $end
$var wire 1 ." instr_rdata_i [6] $end
$var wire 1 /" instr_rdata_i [5] $end
$var wire 1 0" instr_rdata_i [4] $end
$var wire 1 1" instr_rdata_i [3] $end
$var wire 1 2" instr_rdata_i [2] $end
$var wire 1 3" instr_rdata_i [1] $end
$var wire 1 4" instr_rdata_i [0] $end
$var reg 1 @# data_req_o $end
$var wire 1 6" data_gnt_i $end
$var wire 1 7" data_rvalid_i $end
$var reg 1 A# data_we_o $end
$var reg 4 B# data_be_o [3:0] $end
$var reg 32 C# data_addr_o [31:0] $end
$var reg 32 D# data_wdata_o [31:0] $end
$var wire 1 <" data_rdata_i [31] $end
$var wire 1 =" data_rdata_i [30] $end
$var wire 1 >" data_rdata_i [29] $end
$var wire 1 ?" data_rdata_i [28] $end
$var wire 1 @" data_rdata_i [27] $end
$var wire 1 A" data_rdata_i [26] $end
$var wire 1 B" data_rdata_i [25] $end
$var wire 1 C" data_rdata_i [24] $end
$var wire 1 D" data_rdata_i [23] $end
$var wire 1 E" data_rdata_i [22] $end
$var wire 1 F" data_rdata_i [21] $end
$var wire 1 G" data_rdata_i [20] $end
$var wire 1 H" data_rdata_i [19] $end
$var wire 1 I" data_rdata_i [18] $end
$var wire 1 J" data_rdata_i [17] $end
$var wire 1 K" data_rdata_i [16] $end
$var wire 1 L" data_rdata_i [15] $end
$var wire 1 M" data_rdata_i [14] $end
$var wire 1 N" data_rdata_i [13] $end
$var wire 1 O" data_rdata_i [12] $end
$var wire 1 P" data_rdata_i [11] $end
$var wire 1 Q" data_rdata_i [10] $end
$var wire 1 R" data_rdata_i [9] $end
$var wire 1 S" data_rdata_i [8] $end
$var wire 1 T" data_rdata_i [7] $end
$var wire 1 U" data_rdata_i [6] $end
$var wire 1 V" data_rdata_i [5] $end
$var wire 1 W" data_rdata_i [4] $end
$var wire 1 X" data_rdata_i [3] $end
$var wire 1 Y" data_rdata_i [2] $end
$var wire 1 Z" data_rdata_i [1] $end
$var wire 1 [" data_rdata_i [0] $end
$var reg 1 E# apu_req_o $end
$var wire 1 F# apu_gnt_i $end
$var reg 96 G# apu_operands_o [95:0] $end
$var reg 6 H# apu_op_o [5:0] $end
$var reg 15 I# apu_flags_o [14:0] $end
$var wire 1 J# apu_rvalid_i $end
$var wire 1 K# apu_result_i [31] $end
$var wire 1 L# apu_result_i [30] $end
$var wire 1 M# apu_result_i [29] $end
$var wire 1 N# apu_result_i [28] $end
$var wire 1 O# apu_result_i [27] $end
$var wire 1 P# apu_result_i [26] $end
$var wire 1 Q# apu_result_i [25] $end
$var wire 1 R# apu_result_i [24] $end
$var wire 1 S# apu_result_i [23] $end
$var wire 1 T# apu_result_i [22] $end
$var wire 1 U# apu_result_i [21] $end
$var wire 1 V# apu_result_i [20] $end
$var wire 1 W# apu_result_i [19] $end
$var wire 1 X# apu_result_i [18] $end
$var wire 1 Y# apu_result_i [17] $end
$var wire 1 Z# apu_result_i [16] $end
$var wire 1 [# apu_result_i [15] $end
$var wire 1 \# apu_result_i [14] $end
$var wire 1 ]# apu_result_i [13] $end
$var wire 1 ^# apu_result_i [12] $end
$var wire 1 _# apu_result_i [11] $end
$var wire 1 `# apu_result_i [10] $end
$var wire 1 a# apu_result_i [9] $end
$var wire 1 b# apu_result_i [8] $end
$var wire 1 c# apu_result_i [7] $end
$var wire 1 d# apu_result_i [6] $end
$var wire 1 e# apu_result_i [5] $end
$var wire 1 f# apu_result_i [4] $end
$var wire 1 g# apu_result_i [3] $end
$var wire 1 h# apu_result_i [2] $end
$var wire 1 i# apu_result_i [1] $end
$var wire 1 j# apu_result_i [0] $end
$var wire 1 k# apu_flags_i [4] $end
$var wire 1 l# apu_flags_i [3] $end
$var wire 1 m# apu_flags_i [2] $end
$var wire 1 n# apu_flags_i [1] $end
$var wire 1 o# apu_flags_i [0] $end
$var wire 1 \" irq_i [31] $end
$var wire 1 ]" irq_i [30] $end
$var wire 1 ^" irq_i [29] $end
$var wire 1 _" irq_i [28] $end
$var wire 1 `" irq_i [27] $end
$var wire 1 a" irq_i [26] $end
$var wire 1 b" irq_i [25] $end
$var wire 1 c" irq_i [24] $end
$var wire 1 d" irq_i [23] $end
$var wire 1 e" irq_i [22] $end
$var wire 1 f" irq_i [21] $end
$var wire 1 g" irq_i [20] $end
$var wire 1 h" irq_i [19] $end
$var wire 1 i" irq_i [18] $end
$var wire 1 j" irq_i [17] $end
$var wire 1 k" irq_i [16] $end
$var wire 1 l" irq_i [15] $end
$var wire 1 m" irq_i [14] $end
$var wire 1 n" irq_i [13] $end
$var wire 1 o" irq_i [12] $end
$var wire 1 p" irq_i [11] $end
$var wire 1 q" irq_i [10] $end
$var wire 1 r" irq_i [9] $end
$var wire 1 s" irq_i [8] $end
$var wire 1 t" irq_i [7] $end
$var wire 1 u" irq_i [6] $end
$var wire 1 v" irq_i [5] $end
$var wire 1 w" irq_i [4] $end
$var wire 1 x" irq_i [3] $end
$var wire 1 y" irq_i [2] $end
$var wire 1 z" irq_i [1] $end
$var wire 1 {" irq_i [0] $end
$var reg 1 p# irq_ack_o $end
$var reg 5 q# irq_id_o [4:0] $end
$var wire 1 ~" debug_req_i $end
$var reg 1 r# debug_havereset_o $end
$var reg 1 s# debug_running_o $end
$var reg 1 t# debug_halted_o $end
$var wire 1 $# fetch_enable_i $end
$var reg 1 u# core_sleep_o $end
$var reg 6 v# data_atop_o [5:0] $end
$var reg 1 w# irq_sec_i $end
$var reg 1 x# sec_lvl_o $end
$var reg 1 y# instr_valid_id $end
$var reg 32 z# instr_rdata_id [31:0] $end
$var reg 1 {# is_compressed_id $end
$var reg 1 |# illegal_c_insn_id $end
$var reg 1 }# is_fetch_failed_id $end
$var reg 1 ~# clear_instr_valid $end
$var reg 1 !$ pc_set $end
$var reg 4 "$ pc_mux_id [3:0] $end
$var reg 3 #$ exc_pc_mux_id [2:0] $end
$var reg 5 $$ m_exc_vec_pc_mux_id [4:0] $end
$var reg 5 %$ u_exc_vec_pc_mux_id [4:0] $end
$var reg 5 &$ exc_cause [4:0] $end
$var reg 2 '$ trap_addr_mux [1:0] $end
$var reg 32 ($ pc_if [31:0] $end
$var reg 32 )$ pc_id [31:0] $end
$var reg 1 *$ is_decoding $end
$var reg 1 +$ useincr_addr_ex $end
$var reg 1 ,$ data_misaligned $end
$var reg 1 -$ mult_multicycle $end
$var reg 32 .$ jump_target_id [31:0] $end
$var reg 32 /$ jump_target_ex [31:0] $end
$var reg 1 0$ branch_in_ex $end
$var reg 1 1$ branch_decision $end
$var reg 2 2$ ctrl_transfer_insn_in_dec [1:0] $end
$var reg 1 3$ ctrl_busy $end
$var reg 1 4$ if_busy $end
$var reg 1 5$ lsu_busy $end
$var reg 1 6$ apu_busy $end
$var reg 32 7$ pc_ex [31:0] $end
$var reg 1 8$ alu_en_ex $end
$var reg 7 9$ alu_operator_ex [6:0] $end
$var reg 32 :$ alu_operand_a_ex [31:0] $end
$var reg 32 ;$ alu_operand_b_ex [31:0] $end
$var reg 32 <$ alu_operand_c_ex [31:0] $end
$var reg 5 =$ bmask_a_ex [4:0] $end
$var reg 5 >$ bmask_b_ex [4:0] $end
$var reg 2 ?$ imm_vec_ext_ex [1:0] $end
$var reg 2 @$ alu_vec_mode_ex [1:0] $end
$var reg 1 A$ alu_is_clpx_ex $end
$var reg 1 B$ alu_is_subrot_ex $end
$var reg 2 C$ alu_clpx_shift_ex [1:0] $end
$var reg 3 D$ mult_operator_ex [2:0] $end
$var reg 32 E$ mult_operand_a_ex [31:0] $end
$var reg 32 F$ mult_operand_b_ex [31:0] $end
$var reg 32 G$ mult_operand_c_ex [31:0] $end
$var reg 1 H$ mult_en_ex $end
$var reg 1 I$ mult_sel_subword_ex $end
$var reg 2 J$ mult_signed_mode_ex [1:0] $end
$var reg 5 K$ mult_imm_ex [4:0] $end
$var reg 32 L$ mult_dot_op_a_ex [31:0] $end
$var reg 32 M$ mult_dot_op_b_ex [31:0] $end
$var reg 32 N$ mult_dot_op_c_ex [31:0] $end
$var reg 2 O$ mult_dot_signed_ex [1:0] $end
$var reg 1 P$ mult_is_clpx_ex $end
$var reg 2 Q$ mult_clpx_shift_ex [1:0] $end
$var reg 1 R$ mult_clpx_img_ex $end
$var reg 1 S$ fs_off $end
$var reg 3 T$ frm_csr [2:0] $end
$var reg 5 U$ fflags_csr [4:0] $end
$var reg 1 V$ fflags_we $end
$var reg 1 W$ fregs_we $end
$var reg 1 X$ apu_en_ex $end
$var reg 15 Y$ apu_flags_ex [14:0] $end
$var reg 6 Z$ apu_op_ex [5:0] $end
$var reg 2 [$ apu_lat_ex [1:0] $end
$var reg 96 \$ apu_operands_ex [95:0] $end
$var reg 6 ]$ apu_waddr_ex [5:0] $end
$var reg 18 ^$ apu_read_regs [17:0] $end
$var reg 3 _$ apu_read_regs_valid [2:0] $end
$var reg 1 `$ apu_read_dep $end
$var reg 1 a$ apu_read_dep_for_jalr $end
$var reg 12 b$ apu_write_regs [11:0] $end
$var reg 2 c$ apu_write_regs_valid [1:0] $end
$var reg 1 d$ apu_write_dep $end
$var reg 1 e$ perf_apu_type $end
$var reg 1 f$ perf_apu_cont $end
$var reg 1 g$ perf_apu_dep $end
$var reg 1 h$ perf_apu_wb $end
$var reg 6 i$ regfile_waddr_ex [5:0] $end
$var reg 1 j$ regfile_we_ex $end
$var reg 6 k$ regfile_waddr_fw_wb_o [5:0] $end
$var reg 1 l$ regfile_we_wb $end
$var reg 1 m$ regfile_we_wb_power $end
$var reg 32 n$ regfile_wdata [31:0] $end
$var reg 6 o$ regfile_alu_waddr_ex [5:0] $end
$var reg 1 p$ regfile_alu_we_ex $end
$var reg 6 q$ regfile_alu_waddr_fw [5:0] $end
$var reg 1 r$ regfile_alu_we_fw $end
$var reg 1 s$ regfile_alu_we_fw_power $end
$var reg 32 t$ regfile_alu_wdata_fw [31:0] $end
$var reg 1 u$ csr_access_ex $end
$var reg 2 v$ csr_op_ex [1:0] $end
$var reg 24 w$ mtvec [23:0] $end
$var reg 24 x$ utvec [23:0] $end
$var reg 2 y$ mtvec_mode [1:0] $end
$var reg 2 z$ utvec_mode [1:0] $end
$var reg 2 {$ csr_op [1:0] $end
$var reg 12 |$ csr_addr [11:0] $end
$var reg 12 }$ csr_addr_int [11:0] $end
$var reg 32 ~$ csr_rdata [31:0] $end
$var reg 32 !% csr_wdata [31:0] $end
$var reg 2 "% current_priv_lvl [1:0] $end
$var reg 1 #% data_we_ex $end
$var reg 6 $% data_atop_ex [5:0] $end
$var reg 2 %% data_type_ex [1:0] $end
$var reg 2 &% data_sign_ext_ex [1:0] $end
$var reg 2 '% data_reg_offset_ex [1:0] $end
$var reg 1 (% data_req_ex $end
$var reg 1 )% data_load_event_ex $end
$var reg 1 *% data_misaligned_ex $end
$var reg 1 +% p_elw_start $end
$var reg 1 ,% p_elw_finish $end
$var reg 32 -% lsu_rdata [31:0] $end
$var reg 1 .% halt_if $end
$var reg 1 /% id_ready $end
$var reg 1 0% ex_ready $end
$var reg 1 1% id_valid $end
$var reg 1 2% ex_valid $end
$var reg 1 3% wb_valid $end
$var reg 1 4% lsu_ready_ex $end
$var reg 1 5% lsu_ready_wb $end
$var reg 1 6% apu_ready_wb $end
$var reg 1 7% instr_req_int $end
$var reg 1 8% m_irq_enable $end
$var reg 1 9% u_irq_enable $end
$var reg 1 :% csr_irq_sec $end
$var reg 32 ;% mepc [31:0] $end
$var reg 32 <% uepc [31:0] $end
$var reg 32 =% depc [31:0] $end
$var reg 32 >% mie_bypass [31:0] $end
$var reg 32 ?% mip [31:0] $end
$var reg 1 @% csr_save_cause $end
$var reg 1 A% csr_save_if $end
$var reg 1 B% csr_save_id $end
$var reg 1 C% csr_save_ex $end
$var reg 6 D% csr_cause [5:0] $end
$var reg 1 E% csr_restore_mret_id $end
$var reg 1 F% csr_restore_uret_id $end
$var reg 1 G% csr_restore_dret_id $end
$var reg 1 H% csr_mtvec_init $end
$var reg 32 I% mcounteren [31:0] $end
$var reg 1 J% debug_mode $end
$var reg 3 K% debug_cause [2:0] $end
$var reg 1 L% debug_csr_save $end
$var reg 1 M% debug_single_step $end
$var reg 1 N% debug_ebreakm $end
$var reg 1 O% debug_ebreaku $end
$var reg 1 P% trigger_match $end
$var reg 1 Q% debug_p_elw_no_sleep $end
$var reg 64 R% hwlp_start [63:0] $end
$var reg 64 S% hwlp_end [63:0] $end
$var reg 64 T% hwlp_cnt [63:0] $end
$var reg 32 U% hwlp_target [31:0] $end
$var reg 1 V% hwlp_jump $end
$var reg 1 W% mhpmevent_minstret $end
$var reg 1 X% mhpmevent_load $end
$var reg 1 Y% mhpmevent_store $end
$var reg 1 Z% mhpmevent_jump $end
$var reg 1 [% mhpmevent_branch $end
$var reg 1 \% mhpmevent_branch_taken $end
$var reg 1 ]% mhpmevent_compressed $end
$var reg 1 ^% mhpmevent_jr_stall $end
$var reg 1 _% mhpmevent_imiss $end
$var reg 1 `% mhpmevent_ld_stall $end
$var reg 1 a% mhpmevent_pipe_stall $end
$var reg 1 b% perf_imiss $end
$var reg 1 c% wake_from_sleep $end
$var reg 512 d% pmp_addr [511:0] $end
$var reg 128 e% pmp_cfg [127:0] $end
$var reg 1 f% data_req_pmp $end
$var reg 32 g% data_addr_pmp [31:0] $end
$var reg 1 h% data_gnt_pmp $end
$var reg 1 i% data_err_pmp $end
$var reg 1 j% data_err_ack $end
$var reg 1 k% instr_req_pmp $end
$var reg 1 l% instr_gnt_pmp $end
$var reg 32 m% instr_addr_pmp [31:0] $end
$var reg 1 n% instr_err_pmp $end
$var reg 1 o% clk $end
$var reg 1 p% fetch_enable $end

$scope module sleep_unit_i $end
$var parameter 32 q% COREV_CLUSTER $end
$var wire 1 ) clk_ungated_i $end
$var wire 1 * rst_n $end
$var reg 1 r% clk_gated_o $end
$var wire 1 , scan_cg_en_i $end
$var reg 1 s% core_sleep_o $end
$var wire 1 $# fetch_enable_i $end
$var reg 1 t% fetch_enable_o $end
$var wire 1 u% if_busy_i $end
$var wire 1 v% ctrl_busy_i $end
$var wire 1 w% lsu_busy_i $end
$var wire 1 x% apu_busy_i $end
$var wire 1 + pulp_clock_en_i $end
$var wire 1 y% p_elw_start_i $end
$var wire 1 z% p_elw_finish_i $end
$var wire 1 {% debug_p_elw_no_sleep_i $end
$var wire 1 |% wake_from_sleep_i $end
$var reg 1 }% fetch_enable_q $end
$var reg 1 ~% fetch_enable_d $end
$var reg 1 !& core_busy_q $end
$var reg 1 "& core_busy_d $end
$var reg 1 #& p_elw_busy_q $end
$var reg 1 $& p_elw_busy_d $end
$var reg 1 %& clock_en $end

$scope begin g_no_pulp_sleep $end
$upscope $end

$scope module core_clock_gate_i $end
$var wire 1 ) clk_i $end
$var wire 1 && en_i $end
$var wire 1 , scan_cg_en_i $end
$var reg 1 '& clk_o $end
$var reg 1 (& clk_en $end
$upscope $end
$upscope $end

$scope module if_stage_i $end
$var parameter 32 )& COREV_PULP $end
$var parameter 32 *& PULP_OBI $end
$var parameter 32 +& PULP_SECURE $end
$var parameter 32 ,& FPU $end
$var parameter 32 -& ZFINX $end
$var wire 1 .& clk $end
$var wire 1 * rst_n $end
$var wire 1 /& m_trap_base_addr_i [23] $end
$var wire 1 0& m_trap_base_addr_i [22] $end
$var wire 1 1& m_trap_base_addr_i [21] $end
$var wire 1 2& m_trap_base_addr_i [20] $end
$var wire 1 3& m_trap_base_addr_i [19] $end
$var wire 1 4& m_trap_base_addr_i [18] $end
$var wire 1 5& m_trap_base_addr_i [17] $end
$var wire 1 6& m_trap_base_addr_i [16] $end
$var wire 1 7& m_trap_base_addr_i [15] $end
$var wire 1 8& m_trap_base_addr_i [14] $end
$var wire 1 9& m_trap_base_addr_i [13] $end
$var wire 1 :& m_trap_base_addr_i [12] $end
$var wire 1 ;& m_trap_base_addr_i [11] $end
$var wire 1 <& m_trap_base_addr_i [10] $end
$var wire 1 =& m_trap_base_addr_i [9] $end
$var wire 1 >& m_trap_base_addr_i [8] $end
$var wire 1 ?& m_trap_base_addr_i [7] $end
$var wire 1 @& m_trap_base_addr_i [6] $end
$var wire 1 A& m_trap_base_addr_i [5] $end
$var wire 1 B& m_trap_base_addr_i [4] $end
$var wire 1 C& m_trap_base_addr_i [3] $end
$var wire 1 D& m_trap_base_addr_i [2] $end
$var wire 1 E& m_trap_base_addr_i [1] $end
$var wire 1 F& m_trap_base_addr_i [0] $end
$var wire 1 G& u_trap_base_addr_i [23] $end
$var wire 1 H& u_trap_base_addr_i [22] $end
$var wire 1 I& u_trap_base_addr_i [21] $end
$var wire 1 J& u_trap_base_addr_i [20] $end
$var wire 1 K& u_trap_base_addr_i [19] $end
$var wire 1 L& u_trap_base_addr_i [18] $end
$var wire 1 M& u_trap_base_addr_i [17] $end
$var wire 1 N& u_trap_base_addr_i [16] $end
$var wire 1 O& u_trap_base_addr_i [15] $end
$var wire 1 P& u_trap_base_addr_i [14] $end
$var wire 1 Q& u_trap_base_addr_i [13] $end
$var wire 1 R& u_trap_base_addr_i [12] $end
$var wire 1 S& u_trap_base_addr_i [11] $end
$var wire 1 T& u_trap_base_addr_i [10] $end
$var wire 1 U& u_trap_base_addr_i [9] $end
$var wire 1 V& u_trap_base_addr_i [8] $end
$var wire 1 W& u_trap_base_addr_i [7] $end
$var wire 1 X& u_trap_base_addr_i [6] $end
$var wire 1 Y& u_trap_base_addr_i [5] $end
$var wire 1 Z& u_trap_base_addr_i [4] $end
$var wire 1 [& u_trap_base_addr_i [3] $end
$var wire 1 \& u_trap_base_addr_i [2] $end
$var wire 1 ]& u_trap_base_addr_i [1] $end
$var wire 1 ^& u_trap_base_addr_i [0] $end
$var wire 1 _& trap_addr_mux_i [1] $end
$var wire 1 `& trap_addr_mux_i [0] $end
$var wire 1 - boot_addr_i [31] $end
$var wire 1 . boot_addr_i [30] $end
$var wire 1 / boot_addr_i [29] $end
$var wire 1 0 boot_addr_i [28] $end
$var wire 1 1 boot_addr_i [27] $end
$var wire 1 2 boot_addr_i [26] $end
$var wire 1 3 boot_addr_i [25] $end
$var wire 1 4 boot_addr_i [24] $end
$var wire 1 5 boot_addr_i [23] $end
$var wire 1 6 boot_addr_i [22] $end
$var wire 1 7 boot_addr_i [21] $end
$var wire 1 8 boot_addr_i [20] $end
$var wire 1 9 boot_addr_i [19] $end
$var wire 1 : boot_addr_i [18] $end
$var wire 1 ; boot_addr_i [17] $end
$var wire 1 < boot_addr_i [16] $end
$var wire 1 = boot_addr_i [15] $end
$var wire 1 > boot_addr_i [14] $end
$var wire 1 ? boot_addr_i [13] $end
$var wire 1 @ boot_addr_i [12] $end
$var wire 1 A boot_addr_i [11] $end
$var wire 1 B boot_addr_i [10] $end
$var wire 1 C boot_addr_i [9] $end
$var wire 1 D boot_addr_i [8] $end
$var wire 1 E boot_addr_i [7] $end
$var wire 1 F boot_addr_i [6] $end
$var wire 1 G boot_addr_i [5] $end
$var wire 1 H boot_addr_i [4] $end
$var wire 1 I boot_addr_i [3] $end
$var wire 1 J boot_addr_i [2] $end
$var wire 1 K boot_addr_i [1] $end
$var wire 1 L boot_addr_i [0] $end
$var wire 1 O! dm_exception_addr_i [31] $end
$var wire 1 P! dm_exception_addr_i [30] $end
$var wire 1 Q! dm_exception_addr_i [29] $end
$var wire 1 R! dm_exception_addr_i [28] $end
$var wire 1 S! dm_exception_addr_i [27] $end
$var wire 1 T! dm_exception_addr_i [26] $end
$var wire 1 U! dm_exception_addr_i [25] $end
$var wire 1 V! dm_exception_addr_i [24] $end
$var wire 1 W! dm_exception_addr_i [23] $end
$var wire 1 X! dm_exception_addr_i [22] $end
$var wire 1 Y! dm_exception_addr_i [21] $end
$var wire 1 Z! dm_exception_addr_i [20] $end
$var wire 1 [! dm_exception_addr_i [19] $end
$var wire 1 \! dm_exception_addr_i [18] $end
$var wire 1 ]! dm_exception_addr_i [17] $end
$var wire 1 ^! dm_exception_addr_i [16] $end
$var wire 1 _! dm_exception_addr_i [15] $end
$var wire 1 `! dm_exception_addr_i [14] $end
$var wire 1 a! dm_exception_addr_i [13] $end
$var wire 1 b! dm_exception_addr_i [12] $end
$var wire 1 c! dm_exception_addr_i [11] $end
$var wire 1 d! dm_exception_addr_i [10] $end
$var wire 1 e! dm_exception_addr_i [9] $end
$var wire 1 f! dm_exception_addr_i [8] $end
$var wire 1 g! dm_exception_addr_i [7] $end
$var wire 1 h! dm_exception_addr_i [6] $end
$var wire 1 i! dm_exception_addr_i [5] $end
$var wire 1 j! dm_exception_addr_i [4] $end
$var wire 1 k! dm_exception_addr_i [3] $end
$var wire 1 l! dm_exception_addr_i [2] $end
$var wire 1 m! dm_exception_addr_i [1] $end
$var wire 1 n! dm_exception_addr_i [0] $end
$var wire 1 m dm_halt_addr_i [31] $end
$var wire 1 n dm_halt_addr_i [30] $end
$var wire 1 o dm_halt_addr_i [29] $end
$var wire 1 p dm_halt_addr_i [28] $end
$var wire 1 q dm_halt_addr_i [27] $end
$var wire 1 r dm_halt_addr_i [26] $end
$var wire 1 s dm_halt_addr_i [25] $end
$var wire 1 t dm_halt_addr_i [24] $end
$var wire 1 u dm_halt_addr_i [23] $end
$var wire 1 v dm_halt_addr_i [22] $end
$var wire 1 w dm_halt_addr_i [21] $end
$var wire 1 x dm_halt_addr_i [20] $end
$var wire 1 y dm_halt_addr_i [19] $end
$var wire 1 z dm_halt_addr_i [18] $end
$var wire 1 { dm_halt_addr_i [17] $end
$var wire 1 | dm_halt_addr_i [16] $end
$var wire 1 } dm_halt_addr_i [15] $end
$var wire 1 ~ dm_halt_addr_i [14] $end
$var wire 1 !! dm_halt_addr_i [13] $end
$var wire 1 "! dm_halt_addr_i [12] $end
$var wire 1 #! dm_halt_addr_i [11] $end
$var wire 1 $! dm_halt_addr_i [10] $end
$var wire 1 %! dm_halt_addr_i [9] $end
$var wire 1 &! dm_halt_addr_i [8] $end
$var wire 1 '! dm_halt_addr_i [7] $end
$var wire 1 (! dm_halt_addr_i [6] $end
$var wire 1 )! dm_halt_addr_i [5] $end
$var wire 1 *! dm_halt_addr_i [4] $end
$var wire 1 +! dm_halt_addr_i [3] $end
$var wire 1 ,! dm_halt_addr_i [2] $end
$var wire 1 -! dm_halt_addr_i [1] $end
$var wire 1 .! dm_halt_addr_i [0] $end
$var wire 1 a& req_i $end
$var reg 1 b& instr_req_o $end
$var reg 32 c& instr_addr_o [31:0] $end
$var wire 1 d& instr_gnt_i $end
$var wire 1 q! instr_rvalid_i $end
$var wire 1 s! instr_rdata_i [31] $end
$var wire 1 t! instr_rdata_i [30] $end
$var wire 1 u! instr_rdata_i [29] $end
$var wire 1 v! instr_rdata_i [28] $end
$var wire 1 w! instr_rdata_i [27] $end
$var wire 1 x! instr_rdata_i [26] $end
$var wire 1 y! instr_rdata_i [25] $end
$var wire 1 z! instr_rdata_i [24] $end
$var wire 1 {! instr_rdata_i [23] $end
$var wire 1 |! instr_rdata_i [22] $end
$var wire 1 }! instr_rdata_i [21] $end
$var wire 1 ~! instr_rdata_i [20] $end
$var wire 1 !" instr_rdata_i [19] $end
$var wire 1 "" instr_rdata_i [18] $end
$var wire 1 #" instr_rdata_i [17] $end
$var wire 1 $" instr_rdata_i [16] $end
$var wire 1 %" instr_rdata_i [15] $end
$var wire 1 &" instr_rdata_i [14] $end
$var wire 1 '" instr_rdata_i [13] $end
$var wire 1 (" instr_rdata_i [12] $end
$var wire 1 )" instr_rdata_i [11] $end
$var wire 1 *" instr_rdata_i [10] $end
$var wire 1 +" instr_rdata_i [9] $end
$var wire 1 ," instr_rdata_i [8] $end
$var wire 1 -" instr_rdata_i [7] $end
$var wire 1 ." instr_rdata_i [6] $end
$var wire 1 /" instr_rdata_i [5] $end
$var wire 1 0" instr_rdata_i [4] $end
$var wire 1 1" instr_rdata_i [3] $end
$var wire 1 2" instr_rdata_i [2] $end
$var wire 1 3" instr_rdata_i [1] $end
$var wire 1 4" instr_rdata_i [0] $end
$var wire 1 e& instr_err_i $end
$var wire 1 f& instr_err_pmp_i $end
$var reg 1 g& instr_valid_id_o $end
$var reg 32 h& instr_rdata_id_o [31:0] $end
$var reg 1 i& is_compressed_id_o $end
$var reg 1 j& illegal_c_insn_id_o $end
$var reg 32 k& pc_if_o [31:0] $end
$var reg 32 l& pc_id_o [31:0] $end
$var reg 1 m& is_fetch_failed_o $end
$var wire 1 n& clear_instr_valid_i $end
$var wire 1 o& pc_set_i $end
$var wire 1 p& mepc_i [31] $end
$var wire 1 q& mepc_i [30] $end
$var wire 1 r& mepc_i [29] $end
$var wire 1 s& mepc_i [28] $end
$var wire 1 t& mepc_i [27] $end
$var wire 1 u& mepc_i [26] $end
$var wire 1 v& mepc_i [25] $end
$var wire 1 w& mepc_i [24] $end
$var wire 1 x& mepc_i [23] $end
$var wire 1 y& mepc_i [22] $end
$var wire 1 z& mepc_i [21] $end
$var wire 1 {& mepc_i [20] $end
$var wire 1 |& mepc_i [19] $end
$var wire 1 }& mepc_i [18] $end
$var wire 1 ~& mepc_i [17] $end
$var wire 1 !' mepc_i [16] $end
$var wire 1 "' mepc_i [15] $end
$var wire 1 #' mepc_i [14] $end
$var wire 1 $' mepc_i [13] $end
$var wire 1 %' mepc_i [12] $end
$var wire 1 &' mepc_i [11] $end
$var wire 1 '' mepc_i [10] $end
$var wire 1 (' mepc_i [9] $end
$var wire 1 )' mepc_i [8] $end
$var wire 1 *' mepc_i [7] $end
$var wire 1 +' mepc_i [6] $end
$var wire 1 ,' mepc_i [5] $end
$var wire 1 -' mepc_i [4] $end
$var wire 1 .' mepc_i [3] $end
$var wire 1 /' mepc_i [2] $end
$var wire 1 0' mepc_i [1] $end
$var wire 1 1' mepc_i [0] $end
$var wire 1 2' uepc_i [31] $end
$var wire 1 3' uepc_i [30] $end
$var wire 1 4' uepc_i [29] $end
$var wire 1 5' uepc_i [28] $end
$var wire 1 6' uepc_i [27] $end
$var wire 1 7' uepc_i [26] $end
$var wire 1 8' uepc_i [25] $end
$var wire 1 9' uepc_i [24] $end
$var wire 1 :' uepc_i [23] $end
$var wire 1 ;' uepc_i [22] $end
$var wire 1 <' uepc_i [21] $end
$var wire 1 =' uepc_i [20] $end
$var wire 1 >' uepc_i [19] $end
$var wire 1 ?' uepc_i [18] $end
$var wire 1 @' uepc_i [17] $end
$var wire 1 A' uepc_i [16] $end
$var wire 1 B' uepc_i [15] $end
$var wire 1 C' uepc_i [14] $end
$var wire 1 D' uepc_i [13] $end
$var wire 1 E' uepc_i [12] $end
$var wire 1 F' uepc_i [11] $end
$var wire 1 G' uepc_i [10] $end
$var wire 1 H' uepc_i [9] $end
$var wire 1 I' uepc_i [8] $end
$var wire 1 J' uepc_i [7] $end
$var wire 1 K' uepc_i [6] $end
$var wire 1 L' uepc_i [5] $end
$var wire 1 M' uepc_i [4] $end
$var wire 1 N' uepc_i [3] $end
$var wire 1 O' uepc_i [2] $end
$var wire 1 P' uepc_i [1] $end
$var wire 1 Q' uepc_i [0] $end
$var wire 1 R' depc_i [31] $end
$var wire 1 S' depc_i [30] $end
$var wire 1 T' depc_i [29] $end
$var wire 1 U' depc_i [28] $end
$var wire 1 V' depc_i [27] $end
$var wire 1 W' depc_i [26] $end
$var wire 1 X' depc_i [25] $end
$var wire 1 Y' depc_i [24] $end
$var wire 1 Z' depc_i [23] $end
$var wire 1 [' depc_i [22] $end
$var wire 1 \' depc_i [21] $end
$var wire 1 ]' depc_i [20] $end
$var wire 1 ^' depc_i [19] $end
$var wire 1 _' depc_i [18] $end
$var wire 1 `' depc_i [17] $end
$var wire 1 a' depc_i [16] $end
$var wire 1 b' depc_i [15] $end
$var wire 1 c' depc_i [14] $end
$var wire 1 d' depc_i [13] $end
$var wire 1 e' depc_i [12] $end
$var wire 1 f' depc_i [11] $end
$var wire 1 g' depc_i [10] $end
$var wire 1 h' depc_i [9] $end
$var wire 1 i' depc_i [8] $end
$var wire 1 j' depc_i [7] $end
$var wire 1 k' depc_i [6] $end
$var wire 1 l' depc_i [5] $end
$var wire 1 m' depc_i [4] $end
$var wire 1 n' depc_i [3] $end
$var wire 1 o' depc_i [2] $end
$var wire 1 p' depc_i [1] $end
$var wire 1 q' depc_i [0] $end
$var wire 1 r' pc_mux_i [3] $end
$var wire 1 s' pc_mux_i [2] $end
$var wire 1 t' pc_mux_i [1] $end
$var wire 1 u' pc_mux_i [0] $end
$var wire 1 v' exc_pc_mux_i [2] $end
$var wire 1 w' exc_pc_mux_i [1] $end
$var wire 1 x' exc_pc_mux_i [0] $end
$var wire 1 y' m_exc_vec_pc_mux_i [4] $end
$var wire 1 z' m_exc_vec_pc_mux_i [3] $end
$var wire 1 {' m_exc_vec_pc_mux_i [2] $end
$var wire 1 |' m_exc_vec_pc_mux_i [1] $end
$var wire 1 }' m_exc_vec_pc_mux_i [0] $end
$var wire 1 ~' u_exc_vec_pc_mux_i [4] $end
$var wire 1 !( u_exc_vec_pc_mux_i [3] $end
$var wire 1 "( u_exc_vec_pc_mux_i [2] $end
$var wire 1 #( u_exc_vec_pc_mux_i [1] $end
$var wire 1 $( u_exc_vec_pc_mux_i [0] $end
$var reg 1 %( csr_mtvec_init_o $end
$var wire 1 &( jump_target_id_i [31] $end
$var wire 1 '( jump_target_id_i [30] $end
$var wire 1 (( jump_target_id_i [29] $end
$var wire 1 )( jump_target_id_i [28] $end
$var wire 1 *( jump_target_id_i [27] $end
$var wire 1 +( jump_target_id_i [26] $end
$var wire 1 ,( jump_target_id_i [25] $end
$var wire 1 -( jump_target_id_i [24] $end
$var wire 1 .( jump_target_id_i [23] $end
$var wire 1 /( jump_target_id_i [22] $end
$var wire 1 0( jump_target_id_i [21] $end
$var wire 1 1( jump_target_id_i [20] $end
$var wire 1 2( jump_target_id_i [19] $end
$var wire 1 3( jump_target_id_i [18] $end
$var wire 1 4( jump_target_id_i [17] $end
$var wire 1 5( jump_target_id_i [16] $end
$var wire 1 6( jump_target_id_i [15] $end
$var wire 1 7( jump_target_id_i [14] $end
$var wire 1 8( jump_target_id_i [13] $end
$var wire 1 9( jump_target_id_i [12] $end
$var wire 1 :( jump_target_id_i [11] $end
$var wire 1 ;( jump_target_id_i [10] $end
$var wire 1 <( jump_target_id_i [9] $end
$var wire 1 =( jump_target_id_i [8] $end
$var wire 1 >( jump_target_id_i [7] $end
$var wire 1 ?( jump_target_id_i [6] $end
$var wire 1 @( jump_target_id_i [5] $end
$var wire 1 A( jump_target_id_i [4] $end
$var wire 1 B( jump_target_id_i [3] $end
$var wire 1 C( jump_target_id_i [2] $end
$var wire 1 D( jump_target_id_i [1] $end
$var wire 1 E( jump_target_id_i [0] $end
$var wire 1 F( jump_target_ex_i [31] $end
$var wire 1 G( jump_target_ex_i [30] $end
$var wire 1 H( jump_target_ex_i [29] $end
$var wire 1 I( jump_target_ex_i [28] $end
$var wire 1 J( jump_target_ex_i [27] $end
$var wire 1 K( jump_target_ex_i [26] $end
$var wire 1 L( jump_target_ex_i [25] $end
$var wire 1 M( jump_target_ex_i [24] $end
$var wire 1 N( jump_target_ex_i [23] $end
$var wire 1 O( jump_target_ex_i [22] $end
$var wire 1 P( jump_target_ex_i [21] $end
$var wire 1 Q( jump_target_ex_i [20] $end
$var wire 1 R( jump_target_ex_i [19] $end
$var wire 1 S( jump_target_ex_i [18] $end
$var wire 1 T( jump_target_ex_i [17] $end
$var wire 1 U( jump_target_ex_i [16] $end
$var wire 1 V( jump_target_ex_i [15] $end
$var wire 1 W( jump_target_ex_i [14] $end
$var wire 1 X( jump_target_ex_i [13] $end
$var wire 1 Y( jump_target_ex_i [12] $end
$var wire 1 Z( jump_target_ex_i [11] $end
$var wire 1 [( jump_target_ex_i [10] $end
$var wire 1 \( jump_target_ex_i [9] $end
$var wire 1 ]( jump_target_ex_i [8] $end
$var wire 1 ^( jump_target_ex_i [7] $end
$var wire 1 _( jump_target_ex_i [6] $end
$var wire 1 `( jump_target_ex_i [5] $end
$var wire 1 a( jump_target_ex_i [4] $end
$var wire 1 b( jump_target_ex_i [3] $end
$var wire 1 c( jump_target_ex_i [2] $end
$var wire 1 d( jump_target_ex_i [1] $end
$var wire 1 e( jump_target_ex_i [0] $end
$var wire 1 f( hwlp_jump_i $end
$var wire 1 g( hwlp_target_i [31] $end
$var wire 1 h( hwlp_target_i [30] $end
$var wire 1 i( hwlp_target_i [29] $end
$var wire 1 j( hwlp_target_i [28] $end
$var wire 1 k( hwlp_target_i [27] $end
$var wire 1 l( hwlp_target_i [26] $end
$var wire 1 m( hwlp_target_i [25] $end
$var wire 1 n( hwlp_target_i [24] $end
$var wire 1 o( hwlp_target_i [23] $end
$var wire 1 p( hwlp_target_i [22] $end
$var wire 1 q( hwlp_target_i [21] $end
$var wire 1 r( hwlp_target_i [20] $end
$var wire 1 s( hwlp_target_i [19] $end
$var wire 1 t( hwlp_target_i [18] $end
$var wire 1 u( hwlp_target_i [17] $end
$var wire 1 v( hwlp_target_i [16] $end
$var wire 1 w( hwlp_target_i [15] $end
$var wire 1 x( hwlp_target_i [14] $end
$var wire 1 y( hwlp_target_i [13] $end
$var wire 1 z( hwlp_target_i [12] $end
$var wire 1 {( hwlp_target_i [11] $end
$var wire 1 |( hwlp_target_i [10] $end
$var wire 1 }( hwlp_target_i [9] $end
$var wire 1 ~( hwlp_target_i [8] $end
$var wire 1 !) hwlp_target_i [7] $end
$var wire 1 ") hwlp_target_i [6] $end
$var wire 1 #) hwlp_target_i [5] $end
$var wire 1 $) hwlp_target_i [4] $end
$var wire 1 %) hwlp_target_i [3] $end
$var wire 1 &) hwlp_target_i [2] $end
$var wire 1 ') hwlp_target_i [1] $end
$var wire 1 () hwlp_target_i [0] $end
$var wire 1 )) halt_if_i $end
$var wire 1 *) id_ready_i $end
$var reg 1 +) if_busy_o $end
$var reg 1 ,) perf_imiss_o $end
$var reg 1 -) if_valid $end
$var reg 1 .) if_ready $end
$var reg 1 /) prefetch_busy $end
$var reg 1 0) branch_req $end
$var reg 32 1) branch_addr_n [31:0] $end
$var reg 1 2) fetch_valid $end
$var reg 1 3) fetch_ready $end
$var reg 32 4) fetch_rdata [31:0] $end
$var reg 32 5) exc_pc [31:0] $end
$var reg 24 6) trap_base_addr [23:0] $end
$var reg 5 7) exc_vec_pc_mux [4:0] $end
$var reg 1 8) fetch_failed $end
$var reg 1 9) aligner_ready $end
$var reg 1 :) instr_valid $end
$var reg 1 ;) illegal_c_insn $end
$var reg 32 <) instr_aligned [31:0] $end
$var reg 32 =) instr_decompressed [31:0] $end
$var reg 1 >) instr_compressed_int $end

$scope begin EXC_PC_MUX $end
$upscope $end

$scope begin IF_ID_PIPE_REGISTERS $end
$upscope $end

$scope module prefetch_buffer_i $end
$var parameter 32 ?) PULP_OBI $end
$var parameter 32 @) COREV_PULP $end
$var parameter 32 A) FIFO_DEPTH $end
$var parameter 32 B) FIFO_ADDR_DEPTH $end
$var wire 1 .& clk $end
$var wire 1 * rst_n $end
$var wire 1 a& req_i $end
$var wire 1 C) branch_i $end
$var wire 1 D) branch_addr_i [31] $end
$var wire 1 E) branch_addr_i [30] $end
$var wire 1 F) branch_addr_i [29] $end
$var wire 1 G) branch_addr_i [28] $end
$var wire 1 H) branch_addr_i [27] $end
$var wire 1 I) branch_addr_i [26] $end
$var wire 1 J) branch_addr_i [25] $end
$var wire 1 K) branch_addr_i [24] $end
$var wire 1 L) branch_addr_i [23] $end
$var wire 1 M) branch_addr_i [22] $end
$var wire 1 N) branch_addr_i [21] $end
$var wire 1 O) branch_addr_i [20] $end
$var wire 1 P) branch_addr_i [19] $end
$var wire 1 Q) branch_addr_i [18] $end
$var wire 1 R) branch_addr_i [17] $end
$var wire 1 S) branch_addr_i [16] $end
$var wire 1 T) branch_addr_i [15] $end
$var wire 1 U) branch_addr_i [14] $end
$var wire 1 V) branch_addr_i [13] $end
$var wire 1 W) branch_addr_i [12] $end
$var wire 1 X) branch_addr_i [11] $end
$var wire 1 Y) branch_addr_i [10] $end
$var wire 1 Z) branch_addr_i [9] $end
$var wire 1 [) branch_addr_i [8] $end
$var wire 1 \) branch_addr_i [7] $end
$var wire 1 ]) branch_addr_i [6] $end
$var wire 1 ^) branch_addr_i [5] $end
$var wire 1 _) branch_addr_i [4] $end
$var wire 1 `) branch_addr_i [3] $end
$var wire 1 a) branch_addr_i [2] $end
$var wire 1 b) branch_addr_i [1] $end
$var wire 1 c) branch_addr_i [0] $end
$var wire 1 f( hwlp_jump_i $end
$var wire 1 g( hwlp_target_i [31] $end
$var wire 1 h( hwlp_target_i [30] $end
$var wire 1 i( hwlp_target_i [29] $end
$var wire 1 j( hwlp_target_i [28] $end
$var wire 1 k( hwlp_target_i [27] $end
$var wire 1 l( hwlp_target_i [26] $end
$var wire 1 m( hwlp_target_i [25] $end
$var wire 1 n( hwlp_target_i [24] $end
$var wire 1 o( hwlp_target_i [23] $end
$var wire 1 p( hwlp_target_i [22] $end
$var wire 1 q( hwlp_target_i [21] $end
$var wire 1 r( hwlp_target_i [20] $end
$var wire 1 s( hwlp_target_i [19] $end
$var wire 1 t( hwlp_target_i [18] $end
$var wire 1 u( hwlp_target_i [17] $end
$var wire 1 v( hwlp_target_i [16] $end
$var wire 1 w( hwlp_target_i [15] $end
$var wire 1 x( hwlp_target_i [14] $end
$var wire 1 y( hwlp_target_i [13] $end
$var wire 1 z( hwlp_target_i [12] $end
$var wire 1 {( hwlp_target_i [11] $end
$var wire 1 |( hwlp_target_i [10] $end
$var wire 1 }( hwlp_target_i [9] $end
$var wire 1 ~( hwlp_target_i [8] $end
$var wire 1 !) hwlp_target_i [7] $end
$var wire 1 ") hwlp_target_i [6] $end
$var wire 1 #) hwlp_target_i [5] $end
$var wire 1 $) hwlp_target_i [4] $end
$var wire 1 %) hwlp_target_i [3] $end
$var wire 1 &) hwlp_target_i [2] $end
$var wire 1 ') hwlp_target_i [1] $end
$var wire 1 () hwlp_target_i [0] $end
$var wire 1 d) fetch_ready_i $end
$var reg 1 e) fetch_valid_o $end
$var reg 32 f) fetch_rdata_o [31:0] $end
$var reg 1 g) instr_req_o $end
$var wire 1 d& instr_gnt_i $end
$var reg 32 h) instr_addr_o [31:0] $end
$var wire 1 s! instr_rdata_i [31] $end
$var wire 1 t! instr_rdata_i [30] $end
$var wire 1 u! instr_rdata_i [29] $end
$var wire 1 v! instr_rdata_i [28] $end
$var wire 1 w! instr_rdata_i [27] $end
$var wire 1 x! instr_rdata_i [26] $end
$var wire 1 y! instr_rdata_i [25] $end
$var wire 1 z! instr_rdata_i [24] $end
$var wire 1 {! instr_rdata_i [23] $end
$var wire 1 |! instr_rdata_i [22] $end
$var wire 1 }! instr_rdata_i [21] $end
$var wire 1 ~! instr_rdata_i [20] $end
$var wire 1 !" instr_rdata_i [19] $end
$var wire 1 "" instr_rdata_i [18] $end
$var wire 1 #" instr_rdata_i [17] $end
$var wire 1 $" instr_rdata_i [16] $end
$var wire 1 %" instr_rdata_i [15] $end
$var wire 1 &" instr_rdata_i [14] $end
$var wire 1 '" instr_rdata_i [13] $end
$var wire 1 (" instr_rdata_i [12] $end
$var wire 1 )" instr_rdata_i [11] $end
$var wire 1 *" instr_rdata_i [10] $end
$var wire 1 +" instr_rdata_i [9] $end
$var wire 1 ," instr_rdata_i [8] $end
$var wire 1 -" instr_rdata_i [7] $end
$var wire 1 ." instr_rdata_i [6] $end
$var wire 1 /" instr_rdata_i [5] $end
$var wire 1 0" instr_rdata_i [4] $end
$var wire 1 1" instr_rdata_i [3] $end
$var wire 1 2" instr_rdata_i [2] $end
$var wire 1 3" instr_rdata_i [1] $end
$var wire 1 4" instr_rdata_i [0] $end
$var wire 1 q! instr_rvalid_i $end
$var wire 1 e& instr_err_i $end
$var wire 1 f& instr_err_pmp_i $end
$var reg 1 i) busy_o $end
$var reg 1 j) trans_valid $end
$var reg 1 k) trans_ready $end
$var reg 32 l) trans_addr [31:0] $end
$var reg 1 m) fifo_flush $end
$var reg 1 n) fifo_flush_but_first $end
$var reg 2 o) fifo_cnt [1:0] $end
$var reg 32 p) fifo_rdata [31:0] $end
$var reg 1 q) fifo_push $end
$var reg 1 r) fifo_pop $end
$var reg 1 s) fifo_empty $end
$var reg 1 t) resp_valid $end
$var reg 32 u) resp_rdata [31:0] $end
$var reg 1 v) resp_err $end

$scope module prefetch_controller_i $end
$var parameter 32 w) PULP_OBI $end
$var parameter 32 x) COREV_PULP $end
$var parameter 32 y) DEPTH $end
$var parameter 32 z) FIFO_ADDR_DEPTH $end
$var wire 1 .& clk $end
$var wire 1 * rst_n $end
$var wire 1 a& req_i $end
$var wire 1 C) branch_i $end
$var wire 1 D) branch_addr_i [31] $end
$var wire 1 E) branch_addr_i [30] $end
$var wire 1 F) branch_addr_i [29] $end
$var wire 1 G) branch_addr_i [28] $end
$var wire 1 H) branch_addr_i [27] $end
$var wire 1 I) branch_addr_i [26] $end
$var wire 1 J) branch_addr_i [25] $end
$var wire 1 K) branch_addr_i [24] $end
$var wire 1 L) branch_addr_i [23] $end
$var wire 1 M) branch_addr_i [22] $end
$var wire 1 N) branch_addr_i [21] $end
$var wire 1 O) branch_addr_i [20] $end
$var wire 1 P) branch_addr_i [19] $end
$var wire 1 Q) branch_addr_i [18] $end
$var wire 1 R) branch_addr_i [17] $end
$var wire 1 S) branch_addr_i [16] $end
$var wire 1 T) branch_addr_i [15] $end
$var wire 1 U) branch_addr_i [14] $end
$var wire 1 V) branch_addr_i [13] $end
$var wire 1 W) branch_addr_i [12] $end
$var wire 1 X) branch_addr_i [11] $end
$var wire 1 Y) branch_addr_i [10] $end
$var wire 1 Z) branch_addr_i [9] $end
$var wire 1 [) branch_addr_i [8] $end
$var wire 1 \) branch_addr_i [7] $end
$var wire 1 ]) branch_addr_i [6] $end
$var wire 1 ^) branch_addr_i [5] $end
$var wire 1 _) branch_addr_i [4] $end
$var wire 1 `) branch_addr_i [3] $end
$var wire 1 a) branch_addr_i [2] $end
$var wire 1 b) branch_addr_i [1] $end
$var wire 1 c) branch_addr_i [0] $end
$var reg 1 {) busy_o $end
$var wire 1 f( hwlp_jump_i $end
$var wire 1 g( hwlp_target_i [31] $end
$var wire 1 h( hwlp_target_i [30] $end
$var wire 1 i( hwlp_target_i [29] $end
$var wire 1 j( hwlp_target_i [28] $end
$var wire 1 k( hwlp_target_i [27] $end
$var wire 1 l( hwlp_target_i [26] $end
$var wire 1 m( hwlp_target_i [25] $end
$var wire 1 n( hwlp_target_i [24] $end
$var wire 1 o( hwlp_target_i [23] $end
$var wire 1 p( hwlp_target_i [22] $end
$var wire 1 q( hwlp_target_i [21] $end
$var wire 1 r( hwlp_target_i [20] $end
$var wire 1 s( hwlp_target_i [19] $end
$var wire 1 t( hwlp_target_i [18] $end
$var wire 1 u( hwlp_target_i [17] $end
$var wire 1 v( hwlp_target_i [16] $end
$var wire 1 w( hwlp_target_i [15] $end
$var wire 1 x( hwlp_target_i [14] $end
$var wire 1 y( hwlp_target_i [13] $end
$var wire 1 z( hwlp_target_i [12] $end
$var wire 1 {( hwlp_target_i [11] $end
$var wire 1 |( hwlp_target_i [10] $end
$var wire 1 }( hwlp_target_i [9] $end
$var wire 1 ~( hwlp_target_i [8] $end
$var wire 1 !) hwlp_target_i [7] $end
$var wire 1 ") hwlp_target_i [6] $end
$var wire 1 #) hwlp_target_i [5] $end
$var wire 1 $) hwlp_target_i [4] $end
$var wire 1 %) hwlp_target_i [3] $end
$var wire 1 &) hwlp_target_i [2] $end
$var wire 1 ') hwlp_target_i [1] $end
$var wire 1 () hwlp_target_i [0] $end
$var reg 1 |) trans_valid_o $end
$var wire 1 }) trans_ready_i $end
$var reg 32 ~) trans_addr_o [31:0] $end
$var wire 1 !* resp_valid_i $end
$var wire 1 d) fetch_ready_i $end
$var reg 1 "* fetch_valid_o $end
$var reg 1 #* fifo_push_o $end
$var reg 1 $* fifo_pop_o $end
$var reg 1 %* fifo_flush_o $end
$var reg 1 &* fifo_flush_but_first_o $end
$var wire 1 '* fifo_cnt_i [1] $end
$var wire 1 (* fifo_cnt_i [0] $end
$var wire 1 )* fifo_empty_i $end
$var reg 1 ** state_q $end
$var reg 1 +* next_state $end
$var reg 2 ,* cnt_q [1:0] $end
$var reg 2 -* next_cnt [1:0] $end
$var reg 1 .* count_up $end
$var reg 1 /* count_down $end
$var reg 2 0* flush_cnt_q [1:0] $end
$var reg 2 1* next_flush_cnt [1:0] $end
$var reg 32 2* trans_addr_q [31:0] $end
$var reg 32 3* trans_addr_incr [31:0] $end
$var reg 32 4* aligned_branch_addr [31:0] $end
$var reg 1 5* fifo_valid $end
$var reg 2 6* fifo_cnt_masked [1:0] $end
$var reg 1 7* hwlp_wait_resp_flush $end
$var reg 1 8* hwlp_flush_after_resp $end
$var reg 2 9* hwlp_flush_cnt_delayed_q [1:0] $end
$var reg 1 :* hwlp_flush_resp_delayed $end
$var reg 1 ;* hwlp_flush_resp $end

$scope begin gen_no_pulp_obi $end
$upscope $end

$scope begin gen_no_hwlp $end
$upscope $end
$upscope $end

$scope module fifo_i $end
$var parameter 1 <* FALL_THROUGH $end
$var parameter 32 =* DATA_WIDTH $end
$var parameter 32 >* DEPTH $end
$var parameter 32 ?* ADDR_DEPTH $end
$var parameter 32 @* FIFO_DEPTH $end
$var wire 1 .& clk_i $end
$var wire 1 * rst_ni $end
$var wire 1 A* flush_i $end
$var wire 1 B* flush_but_first_i $end
$var wire 1 C* testmode_i $end
$var reg 1 D* full_o $end
$var reg 1 E* empty_o $end
$var reg 2 F* cnt_o [1:0] $end
$var wire 1 G* data_i [31] $end
$var wire 1 H* data_i [30] $end
$var wire 1 I* data_i [29] $end
$var wire 1 J* data_i [28] $end
$var wire 1 K* data_i [27] $end
$var wire 1 L* data_i [26] $end
$var wire 1 M* data_i [25] $end
$var wire 1 N* data_i [24] $end
$var wire 1 O* data_i [23] $end
$var wire 1 P* data_i [22] $end
$var wire 1 Q* data_i [21] $end
$var wire 1 R* data_i [20] $end
$var wire 1 S* data_i [19] $end
$var wire 1 T* data_i [18] $end
$var wire 1 U* data_i [17] $end
$var wire 1 V* data_i [16] $end
$var wire 1 W* data_i [15] $end
$var wire 1 X* data_i [14] $end
$var wire 1 Y* data_i [13] $end
$var wire 1 Z* data_i [12] $end
$var wire 1 [* data_i [11] $end
$var wire 1 \* data_i [10] $end
$var wire 1 ]* data_i [9] $end
$var wire 1 ^* data_i [8] $end
$var wire 1 _* data_i [7] $end
$var wire 1 `* data_i [6] $end
$var wire 1 a* data_i [5] $end
$var wire 1 b* data_i [4] $end
$var wire 1 c* data_i [3] $end
$var wire 1 d* data_i [2] $end
$var wire 1 e* data_i [1] $end
$var wire 1 f* data_i [0] $end
$var wire 1 g* push_i $end
$var reg 32 h* data_o [31:0] $end
$var wire 1 i* pop_i $end
$var reg 1 j* gate_clock $end
$var reg 1 k* read_pointer_n [0:0] $end
$var reg 1 l* read_pointer_q [0:0] $end
$var reg 1 m* write_pointer_n [0:0] $end
$var reg 1 n* write_pointer_q [0:0] $end
$var reg 2 o* status_cnt_n [1:0] $end
$var reg 2 p* status_cnt_q [1:0] $end
$var reg 64 q* mem_n [63:0] $end
$var reg 64 r* mem_q [63:0] $end

$scope begin read_write_comb $end
$upscope $end

$scope begin gen_non_zero_depth $end
$upscope $end
$upscope $end

$scope module instruction_obi_i $end
$var parameter 32 s* TRANS_STABLE $end
$var wire 1 .& clk $end
$var wire 1 * rst_n $end
$var wire 1 t* trans_valid_i $end
$var reg 1 u* trans_ready_o $end
$var wire 1 v* trans_addr_i [31] $end
$var wire 1 w* trans_addr_i [30] $end
$var wire 1 x* trans_addr_i [29] $end
$var wire 1 y* trans_addr_i [28] $end
$var wire 1 z* trans_addr_i [27] $end
$var wire 1 {* trans_addr_i [26] $end
$var wire 1 |* trans_addr_i [25] $end
$var wire 1 }* trans_addr_i [24] $end
$var wire 1 ~* trans_addr_i [23] $end
$var wire 1 !+ trans_addr_i [22] $end
$var wire 1 "+ trans_addr_i [21] $end
$var wire 1 #+ trans_addr_i [20] $end
$var wire 1 $+ trans_addr_i [19] $end
$var wire 1 %+ trans_addr_i [18] $end
$var wire 1 &+ trans_addr_i [17] $end
$var wire 1 '+ trans_addr_i [16] $end
$var wire 1 (+ trans_addr_i [15] $end
$var wire 1 )+ trans_addr_i [14] $end
$var wire 1 *+ trans_addr_i [13] $end
$var wire 1 ++ trans_addr_i [12] $end
$var wire 1 ,+ trans_addr_i [11] $end
$var wire 1 -+ trans_addr_i [10] $end
$var wire 1 .+ trans_addr_i [9] $end
$var wire 1 /+ trans_addr_i [8] $end
$var wire 1 0+ trans_addr_i [7] $end
$var wire 1 1+ trans_addr_i [6] $end
$var wire 1 2+ trans_addr_i [5] $end
$var wire 1 3+ trans_addr_i [4] $end
$var wire 1 4+ trans_addr_i [3] $end
$var wire 1 5+ trans_addr_i [2] $end
$var wire 1 6+ trans_addr_i [1] $end
$var wire 1 7+ trans_addr_i [0] $end
$var wire 1 8+ trans_we_i $end
$var wire 1 9+ trans_be_i [3] $end
$var wire 1 :+ trans_be_i [2] $end
$var wire 1 ;+ trans_be_i [1] $end
$var wire 1 <+ trans_be_i [0] $end
$var wire 1 =+ trans_wdata_i [31] $end
$var wire 1 >+ trans_wdata_i [30] $end
$var wire 1 ?+ trans_wdata_i [29] $end
$var wire 1 @+ trans_wdata_i [28] $end
$var wire 1 A+ trans_wdata_i [27] $end
$var wire 1 B+ trans_wdata_i [26] $end
$var wire 1 C+ trans_wdata_i [25] $end
$var wire 1 D+ trans_wdata_i [24] $end
$var wire 1 E+ trans_wdata_i [23] $end
$var wire 1 F+ trans_wdata_i [22] $end
$var wire 1 G+ trans_wdata_i [21] $end
$var wire 1 H+ trans_wdata_i [20] $end
$var wire 1 I+ trans_wdata_i [19] $end
$var wire 1 J+ trans_wdata_i [18] $end
$var wire 1 K+ trans_wdata_i [17] $end
$var wire 1 L+ trans_wdata_i [16] $end
$var wire 1 M+ trans_wdata_i [15] $end
$var wire 1 N+ trans_wdata_i [14] $end
$var wire 1 O+ trans_wdata_i [13] $end
$var wire 1 P+ trans_wdata_i [12] $end
$var wire 1 Q+ trans_wdata_i [11] $end
$var wire 1 R+ trans_wdata_i [10] $end
$var wire 1 S+ trans_wdata_i [9] $end
$var wire 1 T+ trans_wdata_i [8] $end
$var wire 1 U+ trans_wdata_i [7] $end
$var wire 1 V+ trans_wdata_i [6] $end
$var wire 1 W+ trans_wdata_i [5] $end
$var wire 1 X+ trans_wdata_i [4] $end
$var wire 1 Y+ trans_wdata_i [3] $end
$var wire 1 Z+ trans_wdata_i [2] $end
$var wire 1 [+ trans_wdata_i [1] $end
$var wire 1 \+ trans_wdata_i [0] $end
$var wire 1 ]+ trans_atop_i [5] $end
$var wire 1 ^+ trans_atop_i [4] $end
$var wire 1 _+ trans_atop_i [3] $end
$var wire 1 `+ trans_atop_i [2] $end
$var wire 1 a+ trans_atop_i [1] $end
$var wire 1 b+ trans_atop_i [0] $end
$var reg 1 c+ resp_valid_o $end
$var reg 32 d+ resp_rdata_o [31:0] $end
$var reg 1 e+ resp_err_o $end
$var reg 1 f+ obi_req_o $end
$var wire 1 d& obi_gnt_i $end
$var reg 32 g+ obi_addr_o [31:0] $end
$var reg 1 h+ obi_we_o $end
$var reg 4 i+ obi_be_o [3:0] $end
$var reg 32 j+ obi_wdata_o [31:0] $end
$var reg 6 k+ obi_atop_o [5:0] $end
$var wire 1 s! obi_rdata_i [31] $end
$var wire 1 t! obi_rdata_i [30] $end
$var wire 1 u! obi_rdata_i [29] $end
$var wire 1 v! obi_rdata_i [28] $end
$var wire 1 w! obi_rdata_i [27] $end
$var wire 1 x! obi_rdata_i [26] $end
$var wire 1 y! obi_rdata_i [25] $end
$var wire 1 z! obi_rdata_i [24] $end
$var wire 1 {! obi_rdata_i [23] $end
$var wire 1 |! obi_rdata_i [22] $end
$var wire 1 }! obi_rdata_i [21] $end
$var wire 1 ~! obi_rdata_i [20] $end
$var wire 1 !" obi_rdata_i [19] $end
$var wire 1 "" obi_rdata_i [18] $end
$var wire 1 #" obi_rdata_i [17] $end
$var wire 1 $" obi_rdata_i [16] $end
$var wire 1 %" obi_rdata_i [15] $end
$var wire 1 &" obi_rdata_i [14] $end
$var wire 1 '" obi_rdata_i [13] $end
$var wire 1 (" obi_rdata_i [12] $end
$var wire 1 )" obi_rdata_i [11] $end
$var wire 1 *" obi_rdata_i [10] $end
$var wire 1 +" obi_rdata_i [9] $end
$var wire 1 ," obi_rdata_i [8] $end
$var wire 1 -" obi_rdata_i [7] $end
$var wire 1 ." obi_rdata_i [6] $end
$var wire 1 /" obi_rdata_i [5] $end
$var wire 1 0" obi_rdata_i [4] $end
$var wire 1 1" obi_rdata_i [3] $end
$var wire 1 2" obi_rdata_i [2] $end
$var wire 1 3" obi_rdata_i [1] $end
$var wire 1 4" obi_rdata_i [0] $end
$var wire 1 q! obi_rvalid_i $end
$var wire 1 e& obi_err_i $end
$var reg 1 l+ state_q $end
$var reg 1 m+ next_state $end

$scope begin gen_no_trans_stable $end
$var reg 32 n+ obi_addr_q [31:0] $end
$var reg 1 o+ obi_we_q $end
$var reg 4 p+ obi_be_q [3:0] $end
$var reg 32 q+ obi_wdata_q [31:0] $end
$var reg 6 r+ obi_atop_q [5:0] $end
$upscope $end
$upscope $end
$upscope $end

$scope module aligner_i $end
$var wire 1 .& clk $end
$var wire 1 * rst_n $end
$var wire 1 s+ fetch_valid_i $end
$var reg 1 t+ aligner_ready_o $end
$var wire 1 u+ if_valid_i $end
$var wire 1 v+ fetch_rdata_i [31] $end
$var wire 1 w+ fetch_rdata_i [30] $end
$var wire 1 x+ fetch_rdata_i [29] $end
$var wire 1 y+ fetch_rdata_i [28] $end
$var wire 1 z+ fetch_rdata_i [27] $end
$var wire 1 {+ fetch_rdata_i [26] $end
$var wire 1 |+ fetch_rdata_i [25] $end
$var wire 1 }+ fetch_rdata_i [24] $end
$var wire 1 ~+ fetch_rdata_i [23] $end
$var wire 1 !, fetch_rdata_i [22] $end
$var wire 1 ", fetch_rdata_i [21] $end
$var wire 1 #, fetch_rdata_i [20] $end
$var wire 1 $, fetch_rdata_i [19] $end
$var wire 1 %, fetch_rdata_i [18] $end
$var wire 1 &, fetch_rdata_i [17] $end
$var wire 1 ', fetch_rdata_i [16] $end
$var wire 1 (, fetch_rdata_i [15] $end
$var wire 1 ), fetch_rdata_i [14] $end
$var wire 1 *, fetch_rdata_i [13] $end
$var wire 1 +, fetch_rdata_i [12] $end
$var wire 1 ,, fetch_rdata_i [11] $end
$var wire 1 -, fetch_rdata_i [10] $end
$var wire 1 ., fetch_rdata_i [9] $end
$var wire 1 /, fetch_rdata_i [8] $end
$var wire 1 0, fetch_rdata_i [7] $end
$var wire 1 1, fetch_rdata_i [6] $end
$var wire 1 2, fetch_rdata_i [5] $end
$var wire 1 3, fetch_rdata_i [4] $end
$var wire 1 4, fetch_rdata_i [3] $end
$var wire 1 5, fetch_rdata_i [2] $end
$var wire 1 6, fetch_rdata_i [1] $end
$var wire 1 7, fetch_rdata_i [0] $end
$var reg 32 8, instr_aligned_o [31:0] $end
$var reg 1 9, instr_valid_o $end
$var wire 1 :, branch_addr_i [31] $end
$var wire 1 ;, branch_addr_i [30] $end
$var wire 1 <, branch_addr_i [29] $end
$var wire 1 =, branch_addr_i [28] $end
$var wire 1 >, branch_addr_i [27] $end
$var wire 1 ?, branch_addr_i [26] $end
$var wire 1 @, branch_addr_i [25] $end
$var wire 1 A, branch_addr_i [24] $end
$var wire 1 B, branch_addr_i [23] $end
$var wire 1 C, branch_addr_i [22] $end
$var wire 1 D, branch_addr_i [21] $end
$var wire 1 E, branch_addr_i [20] $end
$var wire 1 F, branch_addr_i [19] $end
$var wire 1 G, branch_addr_i [18] $end
$var wire 1 H, branch_addr_i [17] $end
$var wire 1 I, branch_addr_i [16] $end
$var wire 1 J, branch_addr_i [15] $end
$var wire 1 K, branch_addr_i [14] $end
$var wire 1 L, branch_addr_i [13] $end
$var wire 1 M, branch_addr_i [12] $end
$var wire 1 N, branch_addr_i [11] $end
$var wire 1 O, branch_addr_i [10] $end
$var wire 1 P, branch_addr_i [9] $end
$var wire 1 Q, branch_addr_i [8] $end
$var wire 1 R, branch_addr_i [7] $end
$var wire 1 S, branch_addr_i [6] $end
$var wire 1 T, branch_addr_i [5] $end
$var wire 1 U, branch_addr_i [4] $end
$var wire 1 V, branch_addr_i [3] $end
$var wire 1 W, branch_addr_i [2] $end
$var wire 1 X, branch_addr_i [1] $end
$var wire 1 Y, branch_addr_i [0] $end
$var wire 1 Z, branch_i $end
$var wire 1 g( hwlp_addr_i [31] $end
$var wire 1 h( hwlp_addr_i [30] $end
$var wire 1 i( hwlp_addr_i [29] $end
$var wire 1 j( hwlp_addr_i [28] $end
$var wire 1 k( hwlp_addr_i [27] $end
$var wire 1 l( hwlp_addr_i [26] $end
$var wire 1 m( hwlp_addr_i [25] $end
$var wire 1 n( hwlp_addr_i [24] $end
$var wire 1 o( hwlp_addr_i [23] $end
$var wire 1 p( hwlp_addr_i [22] $end
$var wire 1 q( hwlp_addr_i [21] $end
$var wire 1 r( hwlp_addr_i [20] $end
$var wire 1 s( hwlp_addr_i [19] $end
$var wire 1 t( hwlp_addr_i [18] $end
$var wire 1 u( hwlp_addr_i [17] $end
$var wire 1 v( hwlp_addr_i [16] $end
$var wire 1 w( hwlp_addr_i [15] $end
$var wire 1 x( hwlp_addr_i [14] $end
$var wire 1 y( hwlp_addr_i [13] $end
$var wire 1 z( hwlp_addr_i [12] $end
$var wire 1 {( hwlp_addr_i [11] $end
$var wire 1 |( hwlp_addr_i [10] $end
$var wire 1 }( hwlp_addr_i [9] $end
$var wire 1 ~( hwlp_addr_i [8] $end
$var wire 1 !) hwlp_addr_i [7] $end
$var wire 1 ") hwlp_addr_i [6] $end
$var wire 1 #) hwlp_addr_i [5] $end
$var wire 1 $) hwlp_addr_i [4] $end
$var wire 1 %) hwlp_addr_i [3] $end
$var wire 1 &) hwlp_addr_i [2] $end
$var wire 1 ') hwlp_addr_i [1] $end
$var wire 1 () hwlp_addr_i [0] $end
$var wire 1 f( hwlp_update_pc_i $end
$var reg 32 [, pc_o [31:0] $end
$var reg 3 \, state [2:0] $end
$var reg 3 ], next_state [2:0] $end
$var reg 16 ^, r_instr_h [15:0] $end
$var reg 32 _, hwlp_addr_q [31:0] $end
$var reg 32 `, pc_q [31:0] $end
$var reg 32 a, pc_n [31:0] $end
$var reg 1 b, update_state $end
$var reg 32 c, pc_plus4 [31:0] $end
$var reg 32 d, pc_plus2 [31:0] $end
$var reg 1 e, aligner_ready_q $end
$var reg 1 f, hwlp_update_pc_q $end

$scope begin proc_SEQ_FSM $end
$upscope $end
$upscope $end

$scope module compressed_decoder_i $end
$var parameter 32 g, FPU $end
$var parameter 32 h, ZFINX $end
$var wire 1 i, instr_i [31] $end
$var wire 1 j, instr_i [30] $end
$var wire 1 k, instr_i [29] $end
$var wire 1 l, instr_i [28] $end
$var wire 1 m, instr_i [27] $end
$var wire 1 n, instr_i [26] $end
$var wire 1 o, instr_i [25] $end
$var wire 1 p, instr_i [24] $end
$var wire 1 q, instr_i [23] $end
$var wire 1 r, instr_i [22] $end
$var wire 1 s, instr_i [21] $end
$var wire 1 t, instr_i [20] $end
$var wire 1 u, instr_i [19] $end
$var wire 1 v, instr_i [18] $end
$var wire 1 w, instr_i [17] $end
$var wire 1 x, instr_i [16] $end
$var wire 1 y, instr_i [15] $end
$var wire 1 z, instr_i [14] $end
$var wire 1 {, instr_i [13] $end
$var wire 1 |, instr_i [12] $end
$var wire 1 }, instr_i [11] $end
$var wire 1 ~, instr_i [10] $end
$var wire 1 !- instr_i [9] $end
$var wire 1 "- instr_i [8] $end
$var wire 1 #- instr_i [7] $end
$var wire 1 $- instr_i [6] $end
$var wire 1 %- instr_i [5] $end
$var wire 1 &- instr_i [4] $end
$var wire 1 '- instr_i [3] $end
$var wire 1 (- instr_i [2] $end
$var wire 1 )- instr_i [1] $end
$var wire 1 *- instr_i [0] $end
$var reg 32 +- instr_o [31:0] $end
$var reg 1 ,- is_compressed_o $end
$var reg 1 -- illegal_instr_o $end
$upscope $end
$upscope $end

$scope module id_stage_i $end
$var parameter 32 .- COREV_PULP $end
$var parameter 32 /- COREV_CLUSTER $end
$var parameter 32 0- N_HWLP $end
$var parameter 32 1- N_HWLP_BITS $end
$var parameter 32 2- PULP_SECURE $end
$var parameter 32 3- USE_PMP $end
$var parameter 32 4- A_EXTENSION $end
$var parameter 32 5- APU $end
$var parameter 32 6- FPU $end
$var parameter 32 7- FPU_ADDMUL_LAT $end
$var parameter 32 8- FPU_OTHERS_LAT $end
$var parameter 32 9- ZFINX $end
$var parameter 32 :- APU_NARGS_CPU $end
$var parameter 32 ;- APU_WOP_CPU $end
$var parameter 32 <- APU_NDSFLAGS_CPU $end
$var parameter 32 =- APU_NUSFLAGS_CPU $end
$var parameter 32 >- DEBUG_TRIGGER_EN $end
$var parameter 32 ?- REG_S1_MSB $end
$var parameter 32 @- REG_S1_LSB $end
$var parameter 32 A- REG_S2_MSB $end
$var parameter 32 B- REG_S2_LSB $end
$var parameter 32 C- REG_S4_MSB $end
$var parameter 32 D- REG_S4_LSB $end
$var parameter 32 E- REG_D_MSB $end
$var parameter 32 F- REG_D_LSB $end
$var wire 1 G- clk $end
$var wire 1 ) clk_ungated_i $end
$var wire 1 * rst_n $end
$var wire 1 , scan_cg_en_i $end
$var wire 1 H- fetch_enable_i $end
$var reg 1 I- ctrl_busy_o $end
$var reg 1 J- is_decoding_o $end
$var wire 1 K- instr_valid_i $end
$var wire 1 L- instr_rdata_i [31] $end
$var wire 1 M- instr_rdata_i [30] $end
$var wire 1 N- instr_rdata_i [29] $end
$var wire 1 O- instr_rdata_i [28] $end
$var wire 1 P- instr_rdata_i [27] $end
$var wire 1 Q- instr_rdata_i [26] $end
$var wire 1 R- instr_rdata_i [25] $end
$var wire 1 S- instr_rdata_i [24] $end
$var wire 1 T- instr_rdata_i [23] $end
$var wire 1 U- instr_rdata_i [22] $end
$var wire 1 V- instr_rdata_i [21] $end
$var wire 1 W- instr_rdata_i [20] $end
$var wire 1 X- instr_rdata_i [19] $end
$var wire 1 Y- instr_rdata_i [18] $end
$var wire 1 Z- instr_rdata_i [17] $end
$var wire 1 [- instr_rdata_i [16] $end
$var wire 1 \- instr_rdata_i [15] $end
$var wire 1 ]- instr_rdata_i [14] $end
$var wire 1 ^- instr_rdata_i [13] $end
$var wire 1 _- instr_rdata_i [12] $end
$var wire 1 `- instr_rdata_i [11] $end
$var wire 1 a- instr_rdata_i [10] $end
$var wire 1 b- instr_rdata_i [9] $end
$var wire 1 c- instr_rdata_i [8] $end
$var wire 1 d- instr_rdata_i [7] $end
$var wire 1 e- instr_rdata_i [6] $end
$var wire 1 f- instr_rdata_i [5] $end
$var wire 1 g- instr_rdata_i [4] $end
$var wire 1 h- instr_rdata_i [3] $end
$var wire 1 i- instr_rdata_i [2] $end
$var wire 1 j- instr_rdata_i [1] $end
$var wire 1 k- instr_rdata_i [0] $end
$var reg 1 l- instr_req_o $end
$var wire 1 m- is_compressed_i $end
$var wire 1 n- illegal_c_insn_i $end
$var reg 1 o- branch_in_ex_o $end
$var wire 1 p- branch_decision_i $end
$var reg 32 q- jump_target_o [31:0] $end
$var reg 2 r- ctrl_transfer_insn_in_dec_o [1:0] $end
$var reg 1 s- clear_instr_valid_o $end
$var reg 1 t- pc_set_o $end
$var reg 4 u- pc_mux_o [3:0] $end
$var reg 3 v- exc_pc_mux_o [2:0] $end
$var reg 2 w- trap_addr_mux_o [1:0] $end
$var wire 1 x- is_fetch_failed_i $end
$var wire 1 y- pc_id_i [31] $end
$var wire 1 z- pc_id_i [30] $end
$var wire 1 {- pc_id_i [29] $end
$var wire 1 |- pc_id_i [28] $end
$var wire 1 }- pc_id_i [27] $end
$var wire 1 ~- pc_id_i [26] $end
$var wire 1 !. pc_id_i [25] $end
$var wire 1 ". pc_id_i [24] $end
$var wire 1 #. pc_id_i [23] $end
$var wire 1 $. pc_id_i [22] $end
$var wire 1 %. pc_id_i [21] $end
$var wire 1 &. pc_id_i [20] $end
$var wire 1 '. pc_id_i [19] $end
$var wire 1 (. pc_id_i [18] $end
$var wire 1 ). pc_id_i [17] $end
$var wire 1 *. pc_id_i [16] $end
$var wire 1 +. pc_id_i [15] $end
$var wire 1 ,. pc_id_i [14] $end
$var wire 1 -. pc_id_i [13] $end
$var wire 1 .. pc_id_i [12] $end
$var wire 1 /. pc_id_i [11] $end
$var wire 1 0. pc_id_i [10] $end
$var wire 1 1. pc_id_i [9] $end
$var wire 1 2. pc_id_i [8] $end
$var wire 1 3. pc_id_i [7] $end
$var wire 1 4. pc_id_i [6] $end
$var wire 1 5. pc_id_i [5] $end
$var wire 1 6. pc_id_i [4] $end
$var wire 1 7. pc_id_i [3] $end
$var wire 1 8. pc_id_i [2] $end
$var wire 1 9. pc_id_i [1] $end
$var wire 1 :. pc_id_i [0] $end
$var reg 1 ;. halt_if_o $end
$var reg 1 <. id_ready_o $end
$var wire 1 =. ex_ready_i $end
$var wire 1 >. wb_ready_i $end
$var reg 1 ?. id_valid_o $end
$var wire 1 @. ex_valid_i $end
$var reg 32 A. pc_ex_o [31:0] $end
$var reg 32 B. alu_operand_a_ex_o [31:0] $end
$var reg 32 C. alu_operand_b_ex_o [31:0] $end
$var reg 32 D. alu_operand_c_ex_o [31:0] $end
$var reg 5 E. bmask_a_ex_o [4:0] $end
$var reg 5 F. bmask_b_ex_o [4:0] $end
$var reg 2 G. imm_vec_ext_ex_o [1:0] $end
$var reg 2 H. alu_vec_mode_ex_o [1:0] $end
$var reg 6 I. regfile_waddr_ex_o [5:0] $end
$var reg 1 J. regfile_we_ex_o $end
$var reg 6 K. regfile_alu_waddr_ex_o [5:0] $end
$var reg 1 L. regfile_alu_we_ex_o $end
$var reg 1 M. alu_en_ex_o $end
$var reg 7 N. alu_operator_ex_o [6:0] $end
$var reg 1 O. alu_is_clpx_ex_o $end
$var reg 1 P. alu_is_subrot_ex_o $end
$var reg 2 Q. alu_clpx_shift_ex_o [1:0] $end
$var reg 3 R. mult_operator_ex_o [2:0] $end
$var reg 32 S. mult_operand_a_ex_o [31:0] $end
$var reg 32 T. mult_operand_b_ex_o [31:0] $end
$var reg 32 U. mult_operand_c_ex_o [31:0] $end
$var reg 1 V. mult_en_ex_o $end
$var reg 1 W. mult_sel_subword_ex_o $end
$var reg 2 X. mult_signed_mode_ex_o [1:0] $end
$var reg 5 Y. mult_imm_ex_o [4:0] $end
$var reg 32 Z. mult_dot_op_a_ex_o [31:0] $end
$var reg 32 [. mult_dot_op_b_ex_o [31:0] $end
$var reg 32 \. mult_dot_op_c_ex_o [31:0] $end
$var reg 2 ]. mult_dot_signed_ex_o [1:0] $end
$var reg 1 ^. mult_is_clpx_ex_o $end
$var reg 2 _. mult_clpx_shift_ex_o [1:0] $end
$var reg 1 `. mult_clpx_img_ex_o $end
$var reg 1 a. apu_en_ex_o $end
$var reg 6 b. apu_op_ex_o [5:0] $end
$var reg 2 c. apu_lat_ex_o [1:0] $end
$var reg 96 d. apu_operands_ex_o [95:0] $end
$var reg 15 e. apu_flags_ex_o [14:0] $end
$var reg 6 f. apu_waddr_ex_o [5:0] $end
$var reg 18 g. apu_read_regs_o [17:0] $end
$var reg 3 h. apu_read_regs_valid_o [2:0] $end
$var wire 1 i. apu_read_dep_i $end
$var wire 1 j. apu_read_dep_for_jalr_i $end
$var reg 12 k. apu_write_regs_o [11:0] $end
$var reg 2 l. apu_write_regs_valid_o [1:0] $end
$var wire 1 m. apu_write_dep_i $end
$var reg 1 n. apu_perf_dep_o $end
$var wire 1 o. apu_busy_i $end
$var wire 1 p. fs_off_i $end
$var wire 1 q. frm_i [2] $end
$var wire 1 r. frm_i [1] $end
$var wire 1 s. frm_i [0] $end
$var reg 1 t. csr_access_ex_o $end
$var reg 2 u. csr_op_ex_o [1:0] $end
$var wire 1 v. current_priv_lvl_i [1] $end
$var wire 1 w. current_priv_lvl_i [0] $end
$var reg 1 x. csr_irq_sec_o $end
$var reg 6 y. csr_cause_o [5:0] $end
$var reg 1 z. csr_save_if_o $end
$var reg 1 {. csr_save_id_o $end
$var reg 1 |. csr_save_ex_o $end
$var reg 1 }. csr_restore_mret_id_o $end
$var reg 1 ~. csr_restore_uret_id_o $end
$var reg 1 !/ csr_restore_dret_id_o $end
$var reg 1 "/ csr_save_cause_o $end
$var reg 64 #/ hwlp_start_o [63:0] $end
$var reg 64 $/ hwlp_end_o [63:0] $end
$var reg 64 %/ hwlp_cnt_o [63:0] $end
$var reg 1 &/ hwlp_jump_o $end
$var reg 32 '/ hwlp_target_o [31:0] $end
$var reg 1 (/ data_req_ex_o $end
$var reg 1 )/ data_we_ex_o $end
$var reg 2 */ data_type_ex_o [1:0] $end
$var reg 2 +/ data_sign_ext_ex_o [1:0] $end
$var reg 2 ,/ data_reg_offset_ex_o [1:0] $end
$var reg 1 -/ data_load_event_ex_o $end
$var reg 1 ./ data_misaligned_ex_o $end
$var reg 1 // prepost_useincr_ex_o $end
$var wire 1 0/ data_misaligned_i $end
$var wire 1 1/ data_err_i $end
$var reg 1 2/ data_err_ack_o $end
$var reg 6 3/ atop_ex_o [5:0] $end
$var wire 1 \" irq_i [31] $end
$var wire 1 ]" irq_i [30] $end
$var wire 1 ^" irq_i [29] $end
$var wire 1 _" irq_i [28] $end
$var wire 1 `" irq_i [27] $end
$var wire 1 a" irq_i [26] $end
$var wire 1 b" irq_i [25] $end
$var wire 1 c" irq_i [24] $end
$var wire 1 d" irq_i [23] $end
$var wire 1 e" irq_i [22] $end
$var wire 1 f" irq_i [21] $end
$var wire 1 g" irq_i [20] $end
$var wire 1 h" irq_i [19] $end
$var wire 1 i" irq_i [18] $end
$var wire 1 j" irq_i [17] $end
$var wire 1 k" irq_i [16] $end
$var wire 1 l" irq_i [15] $end
$var wire 1 m" irq_i [14] $end
$var wire 1 n" irq_i [13] $end
$var wire 1 o" irq_i [12] $end
$var wire 1 p" irq_i [11] $end
$var wire 1 q" irq_i [10] $end
$var wire 1 r" irq_i [9] $end
$var wire 1 s" irq_i [8] $end
$var wire 1 t" irq_i [7] $end
$var wire 1 u" irq_i [6] $end
$var wire 1 v" irq_i [5] $end
$var wire 1 w" irq_i [4] $end
$var wire 1 x" irq_i [3] $end
$var wire 1 y" irq_i [2] $end
$var wire 1 z" irq_i [1] $end
$var wire 1 {" irq_i [0] $end
$var wire 1 4/ irq_sec_i $end
$var wire 1 5/ mie_bypass_i [31] $end
$var wire 1 6/ mie_bypass_i [30] $end
$var wire 1 7/ mie_bypass_i [29] $end
$var wire 1 8/ mie_bypass_i [28] $end
$var wire 1 9/ mie_bypass_i [27] $end
$var wire 1 :/ mie_bypass_i [26] $end
$var wire 1 ;/ mie_bypass_i [25] $end
$var wire 1 </ mie_bypass_i [24] $end
$var wire 1 =/ mie_bypass_i [23] $end
$var wire 1 >/ mie_bypass_i [22] $end
$var wire 1 ?/ mie_bypass_i [21] $end
$var wire 1 @/ mie_bypass_i [20] $end
$var wire 1 A/ mie_bypass_i [19] $end
$var wire 1 B/ mie_bypass_i [18] $end
$var wire 1 C/ mie_bypass_i [17] $end
$var wire 1 D/ mie_bypass_i [16] $end
$var wire 1 E/ mie_bypass_i [15] $end
$var wire 1 F/ mie_bypass_i [14] $end
$var wire 1 G/ mie_bypass_i [13] $end
$var wire 1 H/ mie_bypass_i [12] $end
$var wire 1 I/ mie_bypass_i [11] $end
$var wire 1 J/ mie_bypass_i [10] $end
$var wire 1 K/ mie_bypass_i [9] $end
$var wire 1 L/ mie_bypass_i [8] $end
$var wire 1 M/ mie_bypass_i [7] $end
$var wire 1 N/ mie_bypass_i [6] $end
$var wire 1 O/ mie_bypass_i [5] $end
$var wire 1 P/ mie_bypass_i [4] $end
$var wire 1 Q/ mie_bypass_i [3] $end
$var wire 1 R/ mie_bypass_i [2] $end
$var wire 1 S/ mie_bypass_i [1] $end
$var wire 1 T/ mie_bypass_i [0] $end
$var reg 32 U/ mip_o [31:0] $end
$var wire 1 V/ m_irq_enable_i $end
$var wire 1 W/ u_irq_enable_i $end
$var reg 1 X/ irq_ack_o $end
$var reg 5 Y/ irq_id_o [4:0] $end
$var reg 5 Z/ exc_cause_o [4:0] $end
$var reg 1 [/ debug_mode_o $end
$var reg 3 \/ debug_cause_o [2:0] $end
$var reg 1 ]/ debug_csr_save_o $end
$var wire 1 ~" debug_req_i $end
$var wire 1 ^/ debug_single_step_i $end
$var wire 1 _/ debug_ebreakm_i $end
$var wire 1 `/ debug_ebreaku_i $end
$var wire 1 a/ trigger_match_i $end
$var reg 1 b/ debug_p_elw_no_sleep_o $end
$var reg 1 c/ debug_havereset_o $end
$var reg 1 d/ debug_running_o $end
$var reg 1 e/ debug_halted_o $end
$var reg 1 f/ wake_from_sleep_o $end
$var wire 1 g/ regfile_waddr_wb_i [5] $end
$var wire 1 h/ regfile_waddr_wb_i [4] $end
$var wire 1 i/ regfile_waddr_wb_i [3] $end
$var wire 1 j/ regfile_waddr_wb_i [2] $end
$var wire 1 k/ regfile_waddr_wb_i [1] $end
$var wire 1 l/ regfile_waddr_wb_i [0] $end
$var wire 1 m/ regfile_we_wb_i $end
$var wire 1 n/ regfile_we_wb_power_i $end
$var wire 1 o/ regfile_wdata_wb_i [31] $end
$var wire 1 p/ regfile_wdata_wb_i [30] $end
$var wire 1 q/ regfile_wdata_wb_i [29] $end
$var wire 1 r/ regfile_wdata_wb_i [28] $end
$var wire 1 s/ regfile_wdata_wb_i [27] $end
$var wire 1 t/ regfile_wdata_wb_i [26] $end
$var wire 1 u/ regfile_wdata_wb_i [25] $end
$var wire 1 v/ regfile_wdata_wb_i [24] $end
$var wire 1 w/ regfile_wdata_wb_i [23] $end
$var wire 1 x/ regfile_wdata_wb_i [22] $end
$var wire 1 y/ regfile_wdata_wb_i [21] $end
$var wire 1 z/ regfile_wdata_wb_i [20] $end
$var wire 1 {/ regfile_wdata_wb_i [19] $end
$var wire 1 |/ regfile_wdata_wb_i [18] $end
$var wire 1 }/ regfile_wdata_wb_i [17] $end
$var wire 1 ~/ regfile_wdata_wb_i [16] $end
$var wire 1 !0 regfile_wdata_wb_i [15] $end
$var wire 1 "0 regfile_wdata_wb_i [14] $end
$var wire 1 #0 regfile_wdata_wb_i [13] $end
$var wire 1 $0 regfile_wdata_wb_i [12] $end
$var wire 1 %0 regfile_wdata_wb_i [11] $end
$var wire 1 &0 regfile_wdata_wb_i [10] $end
$var wire 1 '0 regfile_wdata_wb_i [9] $end
$var wire 1 (0 regfile_wdata_wb_i [8] $end
$var wire 1 )0 regfile_wdata_wb_i [7] $end
$var wire 1 *0 regfile_wdata_wb_i [6] $end
$var wire 1 +0 regfile_wdata_wb_i [5] $end
$var wire 1 ,0 regfile_wdata_wb_i [4] $end
$var wire 1 -0 regfile_wdata_wb_i [3] $end
$var wire 1 .0 regfile_wdata_wb_i [2] $end
$var wire 1 /0 regfile_wdata_wb_i [1] $end
$var wire 1 00 regfile_wdata_wb_i [0] $end
$var wire 1 10 regfile_alu_waddr_fw_i [5] $end
$var wire 1 20 regfile_alu_waddr_fw_i [4] $end
$var wire 1 30 regfile_alu_waddr_fw_i [3] $end
$var wire 1 40 regfile_alu_waddr_fw_i [2] $end
$var wire 1 50 regfile_alu_waddr_fw_i [1] $end
$var wire 1 60 regfile_alu_waddr_fw_i [0] $end
$var wire 1 70 regfile_alu_we_fw_i $end
$var wire 1 80 regfile_alu_we_fw_power_i $end
$var wire 1 90 regfile_alu_wdata_fw_i [31] $end
$var wire 1 :0 regfile_alu_wdata_fw_i [30] $end
$var wire 1 ;0 regfile_alu_wdata_fw_i [29] $end
$var wire 1 <0 regfile_alu_wdata_fw_i [28] $end
$var wire 1 =0 regfile_alu_wdata_fw_i [27] $end
$var wire 1 >0 regfile_alu_wdata_fw_i [26] $end
$var wire 1 ?0 regfile_alu_wdata_fw_i [25] $end
$var wire 1 @0 regfile_alu_wdata_fw_i [24] $end
$var wire 1 A0 regfile_alu_wdata_fw_i [23] $end
$var wire 1 B0 regfile_alu_wdata_fw_i [22] $end
$var wire 1 C0 regfile_alu_wdata_fw_i [21] $end
$var wire 1 D0 regfile_alu_wdata_fw_i [20] $end
$var wire 1 E0 regfile_alu_wdata_fw_i [19] $end
$var wire 1 F0 regfile_alu_wdata_fw_i [18] $end
$var wire 1 G0 regfile_alu_wdata_fw_i [17] $end
$var wire 1 H0 regfile_alu_wdata_fw_i [16] $end
$var wire 1 I0 regfile_alu_wdata_fw_i [15] $end
$var wire 1 J0 regfile_alu_wdata_fw_i [14] $end
$var wire 1 K0 regfile_alu_wdata_fw_i [13] $end
$var wire 1 L0 regfile_alu_wdata_fw_i [12] $end
$var wire 1 M0 regfile_alu_wdata_fw_i [11] $end
$var wire 1 N0 regfile_alu_wdata_fw_i [10] $end
$var wire 1 O0 regfile_alu_wdata_fw_i [9] $end
$var wire 1 P0 regfile_alu_wdata_fw_i [8] $end
$var wire 1 Q0 regfile_alu_wdata_fw_i [7] $end
$var wire 1 R0 regfile_alu_wdata_fw_i [6] $end
$var wire 1 S0 regfile_alu_wdata_fw_i [5] $end
$var wire 1 T0 regfile_alu_wdata_fw_i [4] $end
$var wire 1 U0 regfile_alu_wdata_fw_i [3] $end
$var wire 1 V0 regfile_alu_wdata_fw_i [2] $end
$var wire 1 W0 regfile_alu_wdata_fw_i [1] $end
$var wire 1 X0 regfile_alu_wdata_fw_i [0] $end
$var wire 1 Y0 mult_multicycle_i $end
$var reg 1 Z0 mhpmevent_minstret_o $end
$var reg 1 [0 mhpmevent_load_o $end
$var reg 1 \0 mhpmevent_store_o $end
$var reg 1 ]0 mhpmevent_jump_o $end
$var reg 1 ^0 mhpmevent_branch_o $end
$var reg 1 _0 mhpmevent_branch_taken_o $end
$var reg 1 `0 mhpmevent_compressed_o $end
$var reg 1 a0 mhpmevent_jr_stall_o $end
$var reg 1 b0 mhpmevent_imiss_o $end
$var reg 1 c0 mhpmevent_ld_stall_o $end
$var reg 1 d0 mhpmevent_pipe_stall_o $end
$var wire 1 e0 perf_imiss_i $end
$var wire 1 f0 mcounteren_i [31] $end
$var wire 1 g0 mcounteren_i [30] $end
$var wire 1 h0 mcounteren_i [29] $end
$var wire 1 i0 mcounteren_i [28] $end
$var wire 1 j0 mcounteren_i [27] $end
$var wire 1 k0 mcounteren_i [26] $end
$var wire 1 l0 mcounteren_i [25] $end
$var wire 1 m0 mcounteren_i [24] $end
$var wire 1 n0 mcounteren_i [23] $end
$var wire 1 o0 mcounteren_i [22] $end
$var wire 1 p0 mcounteren_i [21] $end
$var wire 1 q0 mcounteren_i [20] $end
$var wire 1 r0 mcounteren_i [19] $end
$var wire 1 s0 mcounteren_i [18] $end
$var wire 1 t0 mcounteren_i [17] $end
$var wire 1 u0 mcounteren_i [16] $end
$var wire 1 v0 mcounteren_i [15] $end
$var wire 1 w0 mcounteren_i [14] $end
$var wire 1 x0 mcounteren_i [13] $end
$var wire 1 y0 mcounteren_i [12] $end
$var wire 1 z0 mcounteren_i [11] $end
$var wire 1 {0 mcounteren_i [10] $end
$var wire 1 |0 mcounteren_i [9] $end
$var wire 1 }0 mcounteren_i [8] $end
$var wire 1 ~0 mcounteren_i [7] $end
$var wire 1 !1 mcounteren_i [6] $end
$var wire 1 "1 mcounteren_i [5] $end
$var wire 1 #1 mcounteren_i [4] $end
$var wire 1 $1 mcounteren_i [3] $end
$var wire 1 %1 mcounteren_i [2] $end
$var wire 1 &1 mcounteren_i [1] $end
$var wire 1 '1 mcounteren_i [0] $end
$var reg 32 (1 instr [31:0] $end
$var reg 1 )1 deassert_we $end
$var reg 1 *1 illegal_insn_dec $end
$var reg 1 +1 ebrk_insn_dec $end
$var reg 1 ,1 mret_insn_dec $end
$var reg 1 -1 uret_insn_dec $end
$var reg 1 .1 dret_insn_dec $end
$var reg 1 /1 ecall_insn_dec $end
$var reg 1 01 wfi_insn_dec $end
$var reg 1 11 fencei_insn_dec $end
$var reg 1 21 rega_used_dec $end
$var reg 1 31 regb_used_dec $end
$var reg 1 41 regc_used_dec $end
$var reg 1 51 branch_taken_ex $end
$var reg 2 61 ctrl_transfer_insn_in_id [1:0] $end
$var reg 2 71 ctrl_transfer_insn_in_dec [1:0] $end
$var reg 1 81 misaligned_stall $end
$var reg 1 91 jr_stall $end
$var reg 1 :1 load_stall $end
$var reg 1 ;1 csr_apu_stall $end
$var reg 1 <1 hwlp_mask $end
$var reg 1 =1 halt_id $end
$var reg 1 >1 halt_if $end
$var reg 1 ?1 debug_wfi_no_sleep $end
$var reg 32 @1 imm_i_type [31:0] $end
$var reg 32 A1 imm_iz_type [31:0] $end
$var reg 32 B1 imm_s_type [31:0] $end
$var reg 32 C1 imm_sb_type [31:0] $end
$var reg 32 D1 imm_u_type [31:0] $end
$var reg 32 E1 imm_uj_type [31:0] $end
$var reg 32 F1 imm_z_type [31:0] $end
$var reg 32 G1 imm_s2_type [31:0] $end
$var reg 32 H1 imm_bi_type [31:0] $end
$var reg 32 I1 imm_s3_type [31:0] $end
$var reg 32 J1 imm_vs_type [31:0] $end
$var reg 32 K1 imm_vu_type [31:0] $end
$var reg 32 L1 imm_shuffleb_type [31:0] $end
$var reg 32 M1 imm_shuffleh_type [31:0] $end
$var reg 32 N1 imm_shuffle_type [31:0] $end
$var reg 32 O1 imm_clip_type [31:0] $end
$var reg 32 P1 imm_a [31:0] $end
$var reg 32 Q1 imm_b [31:0] $end
$var reg 32 R1 jump_target [31:0] $end
$var reg 1 S1 irq_req_ctrl $end
$var reg 1 T1 irq_sec_ctrl $end
$var reg 1 U1 irq_wu_ctrl $end
$var reg 5 V1 irq_id_ctrl [4:0] $end
$var reg 6 W1 regfile_addr_ra_id [5:0] $end
$var reg 6 X1 regfile_addr_rb_id [5:0] $end
$var reg 6 Y1 regfile_addr_rc_id [5:0] $end
$var reg 1 Z1 regfile_fp_a $end
$var reg 1 [1 regfile_fp_b $end
$var reg 1 \1 regfile_fp_c $end
$var reg 1 ]1 regfile_fp_d $end
$var reg 6 ^1 regfile_waddr_id [5:0] $end
$var reg 6 _1 regfile_alu_waddr_id [5:0] $end
$var reg 1 `1 regfile_alu_we_id $end
$var reg 1 a1 regfile_alu_we_dec_id $end
$var reg 32 b1 regfile_data_ra_id [31:0] $end
$var reg 32 c1 regfile_data_rb_id [31:0] $end
$var reg 32 d1 regfile_data_rc_id [31:0] $end
$var reg 1 e1 alu_en $end
$var reg 7 f1 alu_operator [6:0] $end
$var reg 3 g1 alu_op_a_mux_sel [2:0] $end
$var reg 3 h1 alu_op_b_mux_sel [2:0] $end
$var reg 2 i1 alu_op_c_mux_sel [1:0] $end
$var reg 2 j1 regc_mux [1:0] $end
$var reg 1 k1 imm_a_mux_sel [0:0] $end
$var reg 4 l1 imm_b_mux_sel [3:0] $end
$var reg 2 m1 ctrl_transfer_target_mux_sel [1:0] $end
$var reg 3 n1 mult_operator [2:0] $end
$var reg 1 o1 mult_en $end
$var reg 1 p1 mult_int_en $end
$var reg 1 q1 mult_sel_subword $end
$var reg 2 r1 mult_signed_mode [1:0] $end
$var reg 1 s1 mult_dot_en $end
$var reg 2 t1 mult_dot_signed [1:0] $end
$var reg 3 u1 fpu_src_fmt [2:0] $end
$var reg 3 v1 fpu_dst_fmt [2:0] $end
$var reg 2 w1 fpu_int_fmt [1:0] $end
$var reg 1 x1 apu_en $end
$var reg 6 y1 apu_op [5:0] $end
$var reg 2 z1 apu_lat [1:0] $end
$var reg 96 {1 apu_operands [95:0] $end
$var reg 15 |1 apu_flags [14:0] $end
$var reg 6 }1 apu_waddr [5:0] $end
$var reg 18 ~1 apu_read_regs [17:0] $end
$var reg 3 !2 apu_read_regs_valid [2:0] $end
$var reg 12 "2 apu_write_regs [11:0] $end
$var reg 2 #2 apu_write_regs_valid [1:0] $end
$var reg 1 $2 apu_stall $end
$var reg 3 %2 fp_rnd_mode [2:0] $end
$var reg 1 &2 regfile_we_id $end
$var reg 1 '2 regfile_alu_waddr_mux_sel $end
$var reg 1 (2 data_we_id $end
$var reg 2 )2 data_type_id [1:0] $end
$var reg 2 *2 data_sign_ext_id [1:0] $end
$var reg 2 +2 data_reg_offset_id [1:0] $end
$var reg 1 ,2 data_req_id $end
$var reg 1 -2 data_load_event_id $end
$var reg 6 .2 atop_id [5:0] $end
$var reg 1 /2 hwlp_regid [0:0] $end
$var reg 3 02 hwlp_we [2:0] $end
$var reg 3 12 hwlp_we_masked [2:0] $end
$var reg 2 22 hwlp_target_mux_sel [1:0] $end
$var reg 2 32 hwlp_start_mux_sel [1:0] $end
$var reg 1 42 hwlp_cnt_mux_sel $end
$var reg 32 52 hwlp_start [31:0] $end
$var reg 32 62 hwlp_end [31:0] $end
$var reg 32 72 hwlp_cnt [31:0] $end
$var reg 2 82 hwlp_dec_cnt [1:0] $end
$var reg 1 92 hwlp_valid $end
$var reg 1 :2 csr_access $end
$var reg 2 ;2 csr_op [1:0] $end
$var reg 1 <2 csr_status $end
$var reg 1 =2 prepost_useincr $end
$var reg 2 >2 operand_a_fw_mux_sel [1:0] $end
$var reg 2 ?2 operand_b_fw_mux_sel [1:0] $end
$var reg 2 @2 operand_c_fw_mux_sel [1:0] $end
$var reg 32 A2 operand_a_fw_id [31:0] $end
$var reg 32 B2 operand_b_fw_id [31:0] $end
$var reg 32 C2 operand_c_fw_id [31:0] $end
$var reg 32 D2 operand_b [31:0] $end
$var reg 32 E2 operand_b_vec [31:0] $end
$var reg 32 F2 operand_c [31:0] $end
$var reg 32 G2 operand_c_vec [31:0] $end
$var reg 32 H2 alu_operand_a [31:0] $end
$var reg 32 I2 alu_operand_b [31:0] $end
$var reg 32 J2 alu_operand_c [31:0] $end
$var reg 1 K2 bmask_a_mux [0:0] $end
$var reg 2 L2 bmask_b_mux [1:0] $end
$var reg 1 M2 alu_bmask_a_mux_sel $end
$var reg 1 N2 alu_bmask_b_mux_sel $end
$var reg 1 O2 mult_imm_mux [0:0] $end
$var reg 5 P2 bmask_a_id_imm [4:0] $end
$var reg 5 Q2 bmask_b_id_imm [4:0] $end
$var reg 5 R2 bmask_a_id [4:0] $end
$var reg 5 S2 bmask_b_id [4:0] $end
$var reg 2 T2 imm_vec_ext_id [1:0] $end
$var reg 5 U2 mult_imm_id [4:0] $end
$var reg 1 V2 alu_vec $end
$var reg 2 W2 alu_vec_mode [1:0] $end
$var reg 1 X2 scalar_replication $end
$var reg 1 Y2 scalar_replication_c $end
$var reg 1 Z2 reg_d_ex_is_reg_a_id $end
$var reg 1 [2 reg_d_ex_is_reg_b_id $end
$var reg 1 \2 reg_d_ex_is_reg_c_id $end
$var reg 1 ]2 reg_d_wb_is_reg_a_id $end
$var reg 1 ^2 reg_d_wb_is_reg_b_id $end
$var reg 1 _2 reg_d_wb_is_reg_c_id $end
$var reg 1 `2 reg_d_alu_is_reg_a_id $end
$var reg 1 a2 reg_d_alu_is_reg_b_id $end
$var reg 1 b2 reg_d_alu_is_reg_c_id $end
$var reg 1 c2 is_clpx $end
$var reg 1 d2 is_subrot $end
$var reg 1 e2 mret_dec $end
$var reg 1 f2 uret_dec $end
$var reg 1 g2 dret_dec $end
$var reg 1 h2 id_valid_q $end
$var reg 1 i2 minstret $end
$var reg 1 j2 perf_pipeline_stall $end

$scope begin jump_target_mux $end
$upscope $end

$scope begin alu_operand_a_mux $end
$upscope $end

$scope begin immediate_a_mux $end
$upscope $end

$scope begin operand_a_fw_mux $end
$upscope $end

$scope begin immediate_b_mux $end
$upscope $end

$scope begin alu_operand_b_mux $end
$upscope $end

$scope begin operand_b_fw_mux $end
$upscope $end

$scope begin alu_operand_c_mux $end
$upscope $end

$scope begin operand_c_fw_mux $end
$upscope $end

$scope begin ID_EX_PIPE_REGISTERS $end
$upscope $end

$scope begin genblk1 $end
$upscope $end

$scope begin gen_no_apu $end

$scope begin gen_apu_tie_off[2] $end
$var parameter 32 k2 i $end
$upscope $end

$scope begin gen_apu_tie_off[1] $end
$var parameter 32 l2 i $end
$upscope $end

$scope begin gen_apu_tie_off[0] $end
$var parameter 32 m2 i $end
$upscope $end

$scope begin <genblk#41383077#901#5> $end
$upscope $end
$upscope $end

$scope module register_file_i $end
$var parameter 32 n2 ADDR_WIDTH $end
$var parameter 32 o2 DATA_WIDTH $end
$var parameter 32 p2 FPU $end
$var parameter 32 q2 ZFINX $end
$var parameter 32 r2 NUM_WORDS $end
$var parameter 32 s2 NUM_FP_WORDS $end
$var parameter 32 t2 NUM_TOT_WORDS $end
$var wire 1 G- clk $end
$var wire 1 * rst_n $end
$var wire 1 , scan_cg_en_i $end
$var wire 1 u2 raddr_a_i [5] $end
$var wire 1 v2 raddr_a_i [4] $end
$var wire 1 w2 raddr_a_i [3] $end
$var wire 1 x2 raddr_a_i [2] $end
$var wire 1 y2 raddr_a_i [1] $end
$var wire 1 z2 raddr_a_i [0] $end
$var reg 32 {2 rdata_a_o [31:0] $end
$var wire 1 |2 raddr_b_i [5] $end
$var wire 1 }2 raddr_b_i [4] $end
$var wire 1 ~2 raddr_b_i [3] $end
$var wire 1 !3 raddr_b_i [2] $end
$var wire 1 "3 raddr_b_i [1] $end
$var wire 1 #3 raddr_b_i [0] $end
$var reg 32 $3 rdata_b_o [31:0] $end
$var wire 1 %3 raddr_c_i [5] $end
$var wire 1 &3 raddr_c_i [4] $end
$var wire 1 '3 raddr_c_i [3] $end
$var wire 1 (3 raddr_c_i [2] $end
$var wire 1 )3 raddr_c_i [1] $end
$var wire 1 *3 raddr_c_i [0] $end
$var reg 32 +3 rdata_c_o [31:0] $end
$var wire 1 g/ waddr_a_i [5] $end
$var wire 1 h/ waddr_a_i [4] $end
$var wire 1 i/ waddr_a_i [3] $end
$var wire 1 j/ waddr_a_i [2] $end
$var wire 1 k/ waddr_a_i [1] $end
$var wire 1 l/ waddr_a_i [0] $end
$var wire 1 o/ wdata_a_i [31] $end
$var wire 1 p/ wdata_a_i [30] $end
$var wire 1 q/ wdata_a_i [29] $end
$var wire 1 r/ wdata_a_i [28] $end
$var wire 1 s/ wdata_a_i [27] $end
$var wire 1 t/ wdata_a_i [26] $end
$var wire 1 u/ wdata_a_i [25] $end
$var wire 1 v/ wdata_a_i [24] $end
$var wire 1 w/ wdata_a_i [23] $end
$var wire 1 x/ wdata_a_i [22] $end
$var wire 1 y/ wdata_a_i [21] $end
$var wire 1 z/ wdata_a_i [20] $end
$var wire 1 {/ wdata_a_i [19] $end
$var wire 1 |/ wdata_a_i [18] $end
$var wire 1 }/ wdata_a_i [17] $end
$var wire 1 ~/ wdata_a_i [16] $end
$var wire 1 !0 wdata_a_i [15] $end
$var wire 1 "0 wdata_a_i [14] $end
$var wire 1 #0 wdata_a_i [13] $end
$var wire 1 $0 wdata_a_i [12] $end
$var wire 1 %0 wdata_a_i [11] $end
$var wire 1 &0 wdata_a_i [10] $end
$var wire 1 '0 wdata_a_i [9] $end
$var wire 1 (0 wdata_a_i [8] $end
$var wire 1 )0 wdata_a_i [7] $end
$var wire 1 *0 wdata_a_i [6] $end
$var wire 1 +0 wdata_a_i [5] $end
$var wire 1 ,0 wdata_a_i [4] $end
$var wire 1 -0 wdata_a_i [3] $end
$var wire 1 .0 wdata_a_i [2] $end
$var wire 1 /0 wdata_a_i [1] $end
$var wire 1 00 wdata_a_i [0] $end
$var wire 1 n/ we_a_i $end
$var wire 1 10 waddr_b_i [5] $end
$var wire 1 20 waddr_b_i [4] $end
$var wire 1 30 waddr_b_i [3] $end
$var wire 1 40 waddr_b_i [2] $end
$var wire 1 50 waddr_b_i [1] $end
$var wire 1 60 waddr_b_i [0] $end
$var wire 1 90 wdata_b_i [31] $end
$var wire 1 :0 wdata_b_i [30] $end
$var wire 1 ;0 wdata_b_i [29] $end
$var wire 1 <0 wdata_b_i [28] $end
$var wire 1 =0 wdata_b_i [27] $end
$var wire 1 >0 wdata_b_i [26] $end
$var wire 1 ?0 wdata_b_i [25] $end
$var wire 1 @0 wdata_b_i [24] $end
$var wire 1 A0 wdata_b_i [23] $end
$var wire 1 B0 wdata_b_i [22] $end
$var wire 1 C0 wdata_b_i [21] $end
$var wire 1 D0 wdata_b_i [20] $end
$var wire 1 E0 wdata_b_i [19] $end
$var wire 1 F0 wdata_b_i [18] $end
$var wire 1 G0 wdata_b_i [17] $end
$var wire 1 H0 wdata_b_i [16] $end
$var wire 1 I0 wdata_b_i [15] $end
$var wire 1 J0 wdata_b_i [14] $end
$var wire 1 K0 wdata_b_i [13] $end
$var wire 1 L0 wdata_b_i [12] $end
$var wire 1 M0 wdata_b_i [11] $end
$var wire 1 N0 wdata_b_i [10] $end
$var wire 1 O0 wdata_b_i [9] $end
$var wire 1 P0 wdata_b_i [8] $end
$var wire 1 Q0 wdata_b_i [7] $end
$var wire 1 R0 wdata_b_i [6] $end
$var wire 1 S0 wdata_b_i [5] $end
$var wire 1 T0 wdata_b_i [4] $end
$var wire 1 U0 wdata_b_i [3] $end
$var wire 1 V0 wdata_b_i [2] $end
$var wire 1 W0 wdata_b_i [1] $end
$var wire 1 X0 wdata_b_i [0] $end
$var wire 1 80 we_b_i $end
$var reg 31 ,3 waddr_onehot_a [31:1] $end
$var reg 31 -3 waddr_onehot_b [31:1] $end
$var reg 31 .3 waddr_onehot_b_q [31:1] $end
$var reg 31 /3 mem_clocks [31:1] $end
$var reg 32 03 wdata_a_q [31:0] $end
$var reg 32 13 wdata_b_q [31:0] $end
$var reg 6 23 waddr_a [5:0] $end
$var reg 6 33 waddr_b [5:0] $end
$var reg 1 43 clk_int $end
$var integer 32 53 i $end
$var integer 32 63 j $end
$var integer 32 73 k $end
$var integer 32 83 l $end

$scope begin gen_clock_gate[31] $end
$var parameter 32 93 x $end

$scope module clock_gate_i $end
$var wire 1 :3 clk_i $end
$var wire 1 ;3 en_i $end
$var wire 1 , scan_cg_en_i $end
$var reg 1 <3 clk_o $end
$var reg 1 =3 clk_en $end
$upscope $end
$upscope $end

$scope begin gen_clock_gate[30] $end
$var parameter 32 >3 x $end

$scope module clock_gate_i $end
$var wire 1 ?3 clk_i $end
$var wire 1 @3 en_i $end
$var wire 1 , scan_cg_en_i $end
$var reg 1 A3 clk_o $end
$var reg 1 B3 clk_en $end
$upscope $end
$upscope $end

$scope begin gen_clock_gate[29] $end
$var parameter 32 C3 x $end

$scope module clock_gate_i $end
$var wire 1 D3 clk_i $end
$var wire 1 E3 en_i $end
$var wire 1 , scan_cg_en_i $end
$var reg 1 F3 clk_o $end
$var reg 1 G3 clk_en $end
$upscope $end
$upscope $end

$scope begin gen_clock_gate[28] $end
$var parameter 32 H3 x $end

$scope module clock_gate_i $end
$var wire 1 I3 clk_i $end
$var wire 1 J3 en_i $end
$var wire 1 , scan_cg_en_i $end
$var reg 1 K3 clk_o $end
$var reg 1 L3 clk_en $end
$upscope $end
$upscope $end

$scope begin gen_clock_gate[27] $end
$var parameter 32 M3 x $end

$scope module clock_gate_i $end
$var wire 1 N3 clk_i $end
$var wire 1 O3 en_i $end
$var wire 1 , scan_cg_en_i $end
$var reg 1 P3 clk_o $end
$var reg 1 Q3 clk_en $end
$upscope $end
$upscope $end

$scope begin gen_clock_gate[26] $end
$var parameter 32 R3 x $end

$scope module clock_gate_i $end
$var wire 1 S3 clk_i $end
$var wire 1 T3 en_i $end
$var wire 1 , scan_cg_en_i $end
$var reg 1 U3 clk_o $end
$var reg 1 V3 clk_en $end
$upscope $end
$upscope $end

$scope begin gen_clock_gate[25] $end
$var parameter 32 W3 x $end

$scope module clock_gate_i $end
$var wire 1 X3 clk_i $end
$var wire 1 Y3 en_i $end
$var wire 1 , scan_cg_en_i $end
$var reg 1 Z3 clk_o $end
$var reg 1 [3 clk_en $end
$upscope $end
$upscope $end

$scope begin gen_clock_gate[24] $end
$var parameter 32 \3 x $end

$scope module clock_gate_i $end
$var wire 1 ]3 clk_i $end
$var wire 1 ^3 en_i $end
$var wire 1 , scan_cg_en_i $end
$var reg 1 _3 clk_o $end
$var reg 1 `3 clk_en $end
$upscope $end
$upscope $end

$scope begin gen_clock_gate[23] $end
$var parameter 32 a3 x $end

$scope module clock_gate_i $end
$var wire 1 b3 clk_i $end
$var wire 1 c3 en_i $end
$var wire 1 , scan_cg_en_i $end
$var reg 1 d3 clk_o $end
$var reg 1 e3 clk_en $end
$upscope $end
$upscope $end

$scope begin gen_clock_gate[22] $end
$var parameter 32 f3 x $end

$scope module clock_gate_i $end
$var wire 1 g3 clk_i $end
$var wire 1 h3 en_i $end
$var wire 1 , scan_cg_en_i $end
$var reg 1 i3 clk_o $end
$var reg 1 j3 clk_en $end
$upscope $end
$upscope $end

$scope begin gen_clock_gate[21] $end
$var parameter 32 k3 x $end

$scope module clock_gate_i $end
$var wire 1 l3 clk_i $end
$var wire 1 m3 en_i $end
$var wire 1 , scan_cg_en_i $end
$var reg 1 n3 clk_o $end
$var reg 1 o3 clk_en $end
$upscope $end
$upscope $end

$scope begin gen_clock_gate[20] $end
$var parameter 32 p3 x $end

$scope module clock_gate_i $end
$var wire 1 q3 clk_i $end
$var wire 1 r3 en_i $end
$var wire 1 , scan_cg_en_i $end
$var reg 1 s3 clk_o $end
$var reg 1 t3 clk_en $end
$upscope $end
$upscope $end

$scope begin gen_clock_gate[19] $end
$var parameter 32 u3 x $end

$scope module clock_gate_i $end
$var wire 1 v3 clk_i $end
$var wire 1 w3 en_i $end
$var wire 1 , scan_cg_en_i $end
$var reg 1 x3 clk_o $end
$var reg 1 y3 clk_en $end
$upscope $end
$upscope $end

$scope begin gen_clock_gate[18] $end
$var parameter 32 z3 x $end

$scope module clock_gate_i $end
$var wire 1 {3 clk_i $end
$var wire 1 |3 en_i $end
$var wire 1 , scan_cg_en_i $end
$var reg 1 }3 clk_o $end
$var reg 1 ~3 clk_en $end
$upscope $end
$upscope $end

$scope begin gen_clock_gate[17] $end
$var parameter 32 !4 x $end

$scope module clock_gate_i $end
$var wire 1 "4 clk_i $end
$var wire 1 #4 en_i $end
$var wire 1 , scan_cg_en_i $end
$var reg 1 $4 clk_o $end
$var reg 1 %4 clk_en $end
$upscope $end
$upscope $end

$scope begin gen_clock_gate[16] $end
$var parameter 32 &4 x $end

$scope module clock_gate_i $end
$var wire 1 '4 clk_i $end
$var wire 1 (4 en_i $end
$var wire 1 , scan_cg_en_i $end
$var reg 1 )4 clk_o $end
$var reg 1 *4 clk_en $end
$upscope $end
$upscope $end

$scope begin gen_clock_gate[15] $end
$var parameter 32 +4 x $end

$scope module clock_gate_i $end
$var wire 1 ,4 clk_i $end
$var wire 1 -4 en_i $end
$var wire 1 , scan_cg_en_i $end
$var reg 1 .4 clk_o $end
$var reg 1 /4 clk_en $end
$upscope $end
$upscope $end

$scope begin gen_clock_gate[14] $end
$var parameter 32 04 x $end

$scope module clock_gate_i $end
$var wire 1 14 clk_i $end
$var wire 1 24 en_i $end
$var wire 1 , scan_cg_en_i $end
$var reg 1 34 clk_o $end
$var reg 1 44 clk_en $end
$upscope $end
$upscope $end

$scope begin gen_clock_gate[13] $end
$var parameter 32 54 x $end

$scope module clock_gate_i $end
$var wire 1 64 clk_i $end
$var wire 1 74 en_i $end
$var wire 1 , scan_cg_en_i $end
$var reg 1 84 clk_o $end
$var reg 1 94 clk_en $end
$upscope $end
$upscope $end

$scope begin gen_clock_gate[12] $end
$var parameter 32 :4 x $end

$scope module clock_gate_i $end
$var wire 1 ;4 clk_i $end
$var wire 1 <4 en_i $end
$var wire 1 , scan_cg_en_i $end
$var reg 1 =4 clk_o $end
$var reg 1 >4 clk_en $end
$upscope $end
$upscope $end

$scope begin gen_clock_gate[11] $end
$var parameter 32 ?4 x $end

$scope module clock_gate_i $end
$var wire 1 @4 clk_i $end
$var wire 1 A4 en_i $end
$var wire 1 , scan_cg_en_i $end
$var reg 1 B4 clk_o $end
$var reg 1 C4 clk_en $end
$upscope $end
$upscope $end

$scope begin gen_clock_gate[10] $end
$var parameter 32 D4 x $end

$scope module clock_gate_i $end
$var wire 1 E4 clk_i $end
$var wire 1 F4 en_i $end
$var wire 1 , scan_cg_en_i $end
$var reg 1 G4 clk_o $end
$var reg 1 H4 clk_en $end
$upscope $end
$upscope $end

$scope begin gen_clock_gate[9] $end
$var parameter 32 I4 x $end

$scope module clock_gate_i $end
$var wire 1 J4 clk_i $end
$var wire 1 K4 en_i $end
$var wire 1 , scan_cg_en_i $end
$var reg 1 L4 clk_o $end
$var reg 1 M4 clk_en $end
$upscope $end
$upscope $end

$scope begin gen_clock_gate[8] $end
$var parameter 32 N4 x $end

$scope module clock_gate_i $end
$var wire 1 O4 clk_i $end
$var wire 1 P4 en_i $end
$var wire 1 , scan_cg_en_i $end
$var reg 1 Q4 clk_o $end
$var reg 1 R4 clk_en $end
$upscope $end
$upscope $end

$scope begin gen_clock_gate[7] $end
$var parameter 32 S4 x $end

$scope module clock_gate_i $end
$var wire 1 T4 clk_i $end
$var wire 1 U4 en_i $end
$var wire 1 , scan_cg_en_i $end
$var reg 1 V4 clk_o $end
$var reg 1 W4 clk_en $end
$upscope $end
$upscope $end

$scope begin gen_clock_gate[6] $end
$var parameter 32 X4 x $end

$scope module clock_gate_i $end
$var wire 1 Y4 clk_i $end
$var wire 1 Z4 en_i $end
$var wire 1 , scan_cg_en_i $end
$var reg 1 [4 clk_o $end
$var reg 1 \4 clk_en $end
$upscope $end
$upscope $end

$scope begin gen_clock_gate[5] $end
$var parameter 32 ]4 x $end

$scope module clock_gate_i $end
$var wire 1 ^4 clk_i $end
$var wire 1 _4 en_i $end
$var wire 1 , scan_cg_en_i $end
$var reg 1 `4 clk_o $end
$var reg 1 a4 clk_en $end
$upscope $end
$upscope $end

$scope begin gen_clock_gate[4] $end
$var parameter 32 b4 x $end

$scope module clock_gate_i $end
$var wire 1 c4 clk_i $end
$var wire 1 d4 en_i $end
$var wire 1 , scan_cg_en_i $end
$var reg 1 e4 clk_o $end
$var reg 1 f4 clk_en $end
$upscope $end
$upscope $end

$scope begin gen_clock_gate[3] $end
$var parameter 32 g4 x $end

$scope module clock_gate_i $end
$var wire 1 h4 clk_i $end
$var wire 1 i4 en_i $end
$var wire 1 , scan_cg_en_i $end
$var reg 1 j4 clk_o $end
$var reg 1 k4 clk_en $end
$upscope $end
$upscope $end

$scope begin gen_clock_gate[2] $end
$var parameter 32 l4 x $end

$scope module clock_gate_i $end
$var wire 1 m4 clk_i $end
$var wire 1 n4 en_i $end
$var wire 1 , scan_cg_en_i $end
$var reg 1 o4 clk_o $end
$var reg 1 p4 clk_en $end
$upscope $end
$upscope $end

$scope begin gen_clock_gate[1] $end
$var parameter 32 q4 x $end

$scope module clock_gate_i $end
$var wire 1 r4 clk_i $end
$var wire 1 s4 en_i $end
$var wire 1 , scan_cg_en_i $end
$var reg 1 t4 clk_o $end
$var reg 1 u4 clk_en $end
$upscope $end
$upscope $end

$scope begin gen_we_decoder[31] $end
$var parameter 32 v4 gidx $end
$upscope $end

$scope begin gen_we_decoder[30] $end
$var parameter 32 w4 gidx $end
$upscope $end

$scope begin gen_we_decoder[29] $end
$var parameter 32 x4 gidx $end
$upscope $end

$scope begin gen_we_decoder[28] $end
$var parameter 32 y4 gidx $end
$upscope $end

$scope begin gen_we_decoder[27] $end
$var parameter 32 z4 gidx $end
$upscope $end

$scope begin gen_we_decoder[26] $end
$var parameter 32 {4 gidx $end
$upscope $end

$scope begin gen_we_decoder[25] $end
$var parameter 32 |4 gidx $end
$upscope $end

$scope begin gen_we_decoder[24] $end
$var parameter 32 }4 gidx $end
$upscope $end

$scope begin gen_we_decoder[23] $end
$var parameter 32 ~4 gidx $end
$upscope $end

$scope begin gen_we_decoder[22] $end
$var parameter 32 !5 gidx $end
$upscope $end

$scope begin gen_we_decoder[21] $end
$var parameter 32 "5 gidx $end
$upscope $end

$scope begin gen_we_decoder[20] $end
$var parameter 32 #5 gidx $end
$upscope $end

$scope begin gen_we_decoder[19] $end
$var parameter 32 $5 gidx $end
$upscope $end

$scope begin gen_we_decoder[18] $end
$var parameter 32 %5 gidx $end
$upscope $end

$scope begin gen_we_decoder[17] $end
$var parameter 32 &5 gidx $end
$upscope $end

$scope begin gen_we_decoder[16] $end
$var parameter 32 '5 gidx $end
$upscope $end

$scope begin gen_we_decoder[15] $end
$var parameter 32 (5 gidx $end
$upscope $end

$scope begin gen_we_decoder[14] $end
$var parameter 32 )5 gidx $end
$upscope $end

$scope begin gen_we_decoder[13] $end
$var parameter 32 *5 gidx $end
$upscope $end

$scope begin gen_we_decoder[12] $end
$var parameter 32 +5 gidx $end
$upscope $end

$scope begin gen_we_decoder[11] $end
$var parameter 32 ,5 gidx $end
$upscope $end

$scope begin gen_we_decoder[10] $end
$var parameter 32 -5 gidx $end
$upscope $end

$scope begin gen_we_decoder[9] $end
$var parameter 32 .5 gidx $end
$upscope $end

$scope begin gen_we_decoder[8] $end
$var parameter 32 /5 gidx $end
$upscope $end

$scope begin gen_we_decoder[7] $end
$var parameter 32 05 gidx $end
$upscope $end

$scope begin gen_we_decoder[6] $end
$var parameter 32 15 gidx $end
$upscope $end

$scope begin gen_we_decoder[5] $end
$var parameter 32 25 gidx $end
$upscope $end

$scope begin gen_we_decoder[4] $end
$var parameter 32 35 gidx $end
$upscope $end

$scope begin gen_we_decoder[3] $end
$var parameter 32 45 gidx $end
$upscope $end

$scope begin gen_we_decoder[2] $end
$var parameter 32 55 gidx $end
$upscope $end

$scope begin gen_we_decoder[1] $end
$var parameter 32 65 gidx $end
$upscope $end

$scope begin sample_waddr $end
$upscope $end

$scope begin latch_wdata $end

$scope begin w_WordIter $end
$upscope $end
$upscope $end

$scope begin genblk3 $end
$upscope $end

$scope module CG_WE_GLOBAL $end
$var wire 1 G- clk_i $end
$var wire 1 75 en_i $end
$var wire 1 , scan_cg_en_i $end
$var reg 1 85 clk_o $end
$var reg 1 95 clk_en $end
$upscope $end
$upscope $end

$scope module decoder_i $end
$var parameter 32 :5 COREV_PULP $end
$var parameter 32 ;5 COREV_CLUSTER $end
$var parameter 32 <5 A_EXTENSION $end
$var parameter 32 =5 FPU $end
$var parameter 32 >5 FPU_ADDMUL_LAT $end
$var parameter 32 ?5 FPU_OTHERS_LAT $end
$var parameter 32 @5 ZFINX $end
$var parameter 32 A5 PULP_SECURE $end
$var parameter 32 B5 USE_PMP $end
$var parameter 32 C5 APU_WOP_CPU $end
$var parameter 32 D5 DEBUG_TRIGGER_EN $end
$var wire 1 E5 deassert_we_i $end
$var reg 1 F5 illegal_insn_o $end
$var reg 1 G5 ebrk_insn_o $end
$var reg 1 H5 mret_insn_o $end
$var reg 1 I5 uret_insn_o $end
$var reg 1 J5 dret_insn_o $end
$var reg 1 K5 mret_dec_o $end
$var reg 1 L5 uret_dec_o $end
$var reg 1 M5 dret_dec_o $end
$var reg 1 N5 ecall_insn_o $end
$var reg 1 O5 wfi_o $end
$var reg 1 P5 fencei_insn_o $end
$var reg 1 Q5 rega_used_o $end
$var reg 1 R5 regb_used_o $end
$var reg 1 S5 regc_used_o $end
$var reg 1 T5 reg_fp_a_o $end
$var reg 1 U5 reg_fp_b_o $end
$var reg 1 V5 reg_fp_c_o $end
$var reg 1 W5 reg_fp_d_o $end
$var reg 1 X5 bmask_a_mux_o [0:0] $end
$var reg 2 Y5 bmask_b_mux_o [1:0] $end
$var reg 1 Z5 alu_bmask_a_mux_sel_o $end
$var reg 1 [5 alu_bmask_b_mux_sel_o $end
$var wire 1 \5 instr_rdata_i [31] $end
$var wire 1 ]5 instr_rdata_i [30] $end
$var wire 1 ^5 instr_rdata_i [29] $end
$var wire 1 _5 instr_rdata_i [28] $end
$var wire 1 `5 instr_rdata_i [27] $end
$var wire 1 a5 instr_rdata_i [26] $end
$var wire 1 b5 instr_rdata_i [25] $end
$var wire 1 c5 instr_rdata_i [24] $end
$var wire 1 d5 instr_rdata_i [23] $end
$var wire 1 e5 instr_rdata_i [22] $end
$var wire 1 f5 instr_rdata_i [21] $end
$var wire 1 g5 instr_rdata_i [20] $end
$var wire 1 h5 instr_rdata_i [19] $end
$var wire 1 i5 instr_rdata_i [18] $end
$var wire 1 j5 instr_rdata_i [17] $end
$var wire 1 k5 instr_rdata_i [16] $end
$var wire 1 l5 instr_rdata_i [15] $end
$var wire 1 m5 instr_rdata_i [14] $end
$var wire 1 n5 instr_rdata_i [13] $end
$var wire 1 o5 instr_rdata_i [12] $end
$var wire 1 p5 instr_rdata_i [11] $end
$var wire 1 q5 instr_rdata_i [10] $end
$var wire 1 r5 instr_rdata_i [9] $end
$var wire 1 s5 instr_rdata_i [8] $end
$var wire 1 t5 instr_rdata_i [7] $end
$var wire 1 u5 instr_rdata_i [6] $end
$var wire 1 v5 instr_rdata_i [5] $end
$var wire 1 w5 instr_rdata_i [4] $end
$var wire 1 x5 instr_rdata_i [3] $end
$var wire 1 y5 instr_rdata_i [2] $end
$var wire 1 z5 instr_rdata_i [1] $end
$var wire 1 {5 instr_rdata_i [0] $end
$var wire 1 n- illegal_c_insn_i $end
$var reg 1 |5 alu_en_o $end
$var reg 7 }5 alu_operator_o [6:0] $end
$var reg 3 ~5 alu_op_a_mux_sel_o [2:0] $end
$var reg 3 !6 alu_op_b_mux_sel_o [2:0] $end
$var reg 2 "6 alu_op_c_mux_sel_o [1:0] $end
$var reg 1 #6 alu_vec_o $end
$var reg 2 $6 alu_vec_mode_o [1:0] $end
$var reg 1 %6 scalar_replication_o $end
$var reg 1 &6 scalar_replication_c_o $end
$var reg 1 '6 imm_a_mux_sel_o [0:0] $end
$var reg 4 (6 imm_b_mux_sel_o [3:0] $end
$var reg 2 )6 regc_mux_o [1:0] $end
$var reg 1 *6 is_clpx_o $end
$var reg 1 +6 is_subrot_o $end
$var reg 3 ,6 mult_operator_o [2:0] $end
$var reg 1 -6 mult_int_en_o $end
$var reg 1 .6 mult_dot_en_o $end
$var reg 1 /6 mult_imm_mux_o [0:0] $end
$var reg 1 06 mult_sel_subword_o $end
$var reg 2 16 mult_signed_mode_o [1:0] $end
$var reg 2 26 mult_dot_signed_o [1:0] $end
$var wire 1 p. fs_off_i $end
$var wire 1 q. frm_i [2] $end
$var wire 1 r. frm_i [1] $end
$var wire 1 s. frm_i [0] $end
$var reg 3 36 fpu_dst_fmt_o [2:0] $end
$var reg 3 46 fpu_src_fmt_o [2:0] $end
$var reg 2 56 fpu_int_fmt_o [1:0] $end
$var reg 1 66 apu_en_o $end
$var reg 6 76 apu_op_o [5:0] $end
$var reg 2 86 apu_lat_o [1:0] $end
$var reg 3 96 fp_rnd_mode_o [2:0] $end
$var reg 1 :6 regfile_mem_we_o $end
$var reg 1 ;6 regfile_alu_we_o $end
$var reg 1 <6 regfile_alu_we_dec_o $end
$var reg 1 =6 regfile_alu_waddr_sel_o $end
$var reg 1 >6 csr_access_o $end
$var reg 1 ?6 csr_status_o $end
$var reg 2 @6 csr_op_o [1:0] $end
$var wire 1 v. current_priv_lvl_i [1] $end
$var wire 1 w. current_priv_lvl_i [0] $end
$var reg 1 A6 data_req_o $end
$var reg 1 B6 data_we_o $end
$var reg 1 C6 prepost_useincr_o $end
$var reg 2 D6 data_type_o [1:0] $end
$var reg 2 E6 data_sign_extension_o [1:0] $end
$var reg 2 F6 data_reg_offset_o [1:0] $end
$var reg 1 G6 data_load_event_o $end
$var reg 6 H6 atop_o [5:0] $end
$var reg 3 I6 hwlp_we_o [2:0] $end
$var reg 2 J6 hwlp_target_mux_sel_o [1:0] $end
$var reg 2 K6 hwlp_start_mux_sel_o [1:0] $end
$var reg 1 L6 hwlp_cnt_mux_sel_o $end
$var wire 1 M6 debug_mode_i $end
$var wire 1 N6 debug_wfi_no_sleep_i $end
$var reg 2 O6 ctrl_transfer_insn_in_dec_o [1:0] $end
$var reg 2 P6 ctrl_transfer_insn_in_id_o [1:0] $end
$var reg 2 Q6 ctrl_transfer_target_mux_sel_o [1:0] $end
$var wire 1 f0 mcounteren_i [31] $end
$var wire 1 g0 mcounteren_i [30] $end
$var wire 1 h0 mcounteren_i [29] $end
$var wire 1 i0 mcounteren_i [28] $end
$var wire 1 j0 mcounteren_i [27] $end
$var wire 1 k0 mcounteren_i [26] $end
$var wire 1 l0 mcounteren_i [25] $end
$var wire 1 m0 mcounteren_i [24] $end
$var wire 1 n0 mcounteren_i [23] $end
$var wire 1 o0 mcounteren_i [22] $end
$var wire 1 p0 mcounteren_i [21] $end
$var wire 1 q0 mcounteren_i [20] $end
$var wire 1 r0 mcounteren_i [19] $end
$var wire 1 s0 mcounteren_i [18] $end
$var wire 1 t0 mcounteren_i [17] $end
$var wire 1 u0 mcounteren_i [16] $end
$var wire 1 v0 mcounteren_i [15] $end
$var wire 1 w0 mcounteren_i [14] $end
$var wire 1 x0 mcounteren_i [13] $end
$var wire 1 y0 mcounteren_i [12] $end
$var wire 1 z0 mcounteren_i [11] $end
$var wire 1 {0 mcounteren_i [10] $end
$var wire 1 |0 mcounteren_i [9] $end
$var wire 1 }0 mcounteren_i [8] $end
$var wire 1 ~0 mcounteren_i [7] $end
$var wire 1 !1 mcounteren_i [6] $end
$var wire 1 "1 mcounteren_i [5] $end
$var wire 1 #1 mcounteren_i [4] $end
$var wire 1 $1 mcounteren_i [3] $end
$var wire 1 %1 mcounteren_i [2] $end
$var wire 1 &1 mcounteren_i [1] $end
$var wire 1 '1 mcounteren_i [0] $end
$var reg 1 R6 regfile_mem_we $end
$var reg 1 S6 regfile_alu_we $end
$var reg 1 T6 data_req $end
$var reg 3 U6 hwlp_we [2:0] $end
$var reg 1 V6 csr_illegal $end
$var reg 2 W6 ctrl_transfer_insn [1:0] $end
$var reg 2 X6 csr_op [1:0] $end
$var reg 1 Y6 alu_en $end
$var reg 1 Z6 mult_int_en $end
$var reg 1 [6 mult_dot_en $end
$var reg 1 \6 apu_en $end
$var reg 1 ]6 check_fprm $end
$var reg 4 ^6 fpu_op [3:0] $end
$var reg 1 _6 fpu_op_mod $end
$var reg 1 `6 fpu_vec_op $end
$var reg 2 a6 fp_op_group [1:0] $end

$scope begin instruction_decoder $end

$scope begin decode_amo $end
$upscope $end

$scope begin no_decode_amo $end
$upscope $end
$upscope $end
$upscope $end

$scope module controller_i $end
$var parameter 32 b6 COREV_CLUSTER $end
$var parameter 32 c6 COREV_PULP $end
$var parameter 32 d6 FPU $end
$var wire 1 G- clk $end
$var wire 1 ) clk_ungated_i $end
$var wire 1 * rst_n $end
$var wire 1 H- fetch_enable_i $end
$var reg 1 e6 ctrl_busy_o $end
$var reg 1 f6 is_decoding_o $end
$var wire 1 x- is_fetch_failed_i $end
$var reg 1 g6 deassert_we_o $end
$var wire 1 h6 illegal_insn_i $end
$var wire 1 i6 ecall_insn_i $end
$var wire 1 j6 mret_insn_i $end
$var wire 1 k6 uret_insn_i $end
$var wire 1 l6 dret_insn_i $end
$var wire 1 m6 mret_dec_i $end
$var wire 1 n6 uret_dec_i $end
$var wire 1 o6 dret_dec_i $end
$var wire 1 p6 wfi_i $end
$var wire 1 q6 ebrk_insn_i $end
$var wire 1 r6 fencei_insn_i $end
$var wire 1 s6 csr_status_i $end
$var reg 1 t6 hwlp_mask_o $end
$var wire 1 K- instr_valid_i $end
$var reg 1 u6 instr_req_o $end
$var reg 1 v6 pc_set_o $end
$var reg 4 w6 pc_mux_o [3:0] $end
$var reg 3 x6 exc_pc_mux_o [2:0] $end
$var reg 2 y6 trap_addr_mux_o [1:0] $end
$var wire 1 y- pc_id_i [31] $end
$var wire 1 z- pc_id_i [30] $end
$var wire 1 {- pc_id_i [29] $end
$var wire 1 |- pc_id_i [28] $end
$var wire 1 }- pc_id_i [27] $end
$var wire 1 ~- pc_id_i [26] $end
$var wire 1 !. pc_id_i [25] $end
$var wire 1 ". pc_id_i [24] $end
$var wire 1 #. pc_id_i [23] $end
$var wire 1 $. pc_id_i [22] $end
$var wire 1 %. pc_id_i [21] $end
$var wire 1 &. pc_id_i [20] $end
$var wire 1 '. pc_id_i [19] $end
$var wire 1 (. pc_id_i [18] $end
$var wire 1 ). pc_id_i [17] $end
$var wire 1 *. pc_id_i [16] $end
$var wire 1 +. pc_id_i [15] $end
$var wire 1 ,. pc_id_i [14] $end
$var wire 1 -. pc_id_i [13] $end
$var wire 1 .. pc_id_i [12] $end
$var wire 1 /. pc_id_i [11] $end
$var wire 1 0. pc_id_i [10] $end
$var wire 1 1. pc_id_i [9] $end
$var wire 1 2. pc_id_i [8] $end
$var wire 1 3. pc_id_i [7] $end
$var wire 1 4. pc_id_i [6] $end
$var wire 1 5. pc_id_i [5] $end
$var wire 1 6. pc_id_i [4] $end
$var wire 1 7. pc_id_i [3] $end
$var wire 1 8. pc_id_i [2] $end
$var wire 1 9. pc_id_i [1] $end
$var wire 1 :. pc_id_i [0] $end
$var reg 64 z6 hwlp_start_addr_i [63:0] $end
$var reg 64 {6 hwlp_end_addr_i [63:0] $end
$var reg 64 |6 hwlp_counter_i [63:0] $end
$var reg 2 }6 hwlp_dec_cnt_o [1:0] $end
$var reg 1 ~6 hwlp_jump_o $end
$var reg 32 !7 hwlp_targ_addr_o [31:0] $end
$var wire 1 "7 data_req_ex_i $end
$var wire 1 #7 data_we_ex_i $end
$var wire 1 0/ data_misaligned_i $end
$var wire 1 $7 data_load_event_i $end
$var wire 1 1/ data_err_i $end
$var reg 1 %7 data_err_ack_o $end
$var wire 1 Y0 mult_multicycle_i $end
$var wire 1 &7 apu_en_i $end
$var wire 1 i. apu_read_dep_i $end
$var wire 1 j. apu_read_dep_for_jalr_i $end
$var wire 1 m. apu_write_dep_i $end
$var reg 1 '7 apu_stall_o $end
$var wire 1 (7 branch_taken_ex_i $end
$var wire 1 )7 ctrl_transfer_insn_in_id_i [1] $end
$var wire 1 *7 ctrl_transfer_insn_in_id_i [0] $end
$var wire 1 +7 ctrl_transfer_insn_in_dec_i [1] $end
$var wire 1 ,7 ctrl_transfer_insn_in_dec_i [0] $end
$var wire 1 -7 irq_req_ctrl_i $end
$var wire 1 .7 irq_sec_ctrl_i $end
$var wire 1 /7 irq_id_ctrl_i [4] $end
$var wire 1 07 irq_id_ctrl_i [3] $end
$var wire 1 17 irq_id_ctrl_i [2] $end
$var wire 1 27 irq_id_ctrl_i [1] $end
$var wire 1 37 irq_id_ctrl_i [0] $end
$var wire 1 47 irq_wu_ctrl_i $end
$var wire 1 v. current_priv_lvl_i [1] $end
$var wire 1 w. current_priv_lvl_i [0] $end
$var reg 1 57 irq_ack_o $end
$var reg 5 67 irq_id_o [4:0] $end
$var reg 5 77 exc_cause_o [4:0] $end
$var reg 1 87 debug_mode_o $end
$var reg 3 97 debug_cause_o [2:0] $end
$var reg 1 :7 debug_csr_save_o $end
$var wire 1 ~" debug_req_i $end
$var wire 1 ^/ debug_single_step_i $end
$var wire 1 _/ debug_ebreakm_i $end
$var wire 1 `/ debug_ebreaku_i $end
$var wire 1 a/ trigger_match_i $end
$var reg 1 ;7 debug_p_elw_no_sleep_o $end
$var reg 1 <7 debug_wfi_no_sleep_o $end
$var reg 1 =7 debug_havereset_o $end
$var reg 1 >7 debug_running_o $end
$var reg 1 ?7 debug_halted_o $end
$var reg 1 @7 wake_from_sleep_o $end
$var reg 1 A7 csr_save_if_o $end
$var reg 1 B7 csr_save_id_o $end
$var reg 1 C7 csr_save_ex_o $end
$var reg 6 D7 csr_cause_o [5:0] $end
$var reg 1 E7 csr_irq_sec_o $end
$var reg 1 F7 csr_restore_mret_id_o $end
$var reg 1 G7 csr_restore_uret_id_o $end
$var reg 1 H7 csr_restore_dret_id_o $end
$var reg 1 I7 csr_save_cause_o $end
$var wire 1 J7 regfile_we_id_i $end
$var wire 1 K7 regfile_alu_waddr_id_i [5] $end
$var wire 1 L7 regfile_alu_waddr_id_i [4] $end
$var wire 1 M7 regfile_alu_waddr_id_i [3] $end
$var wire 1 N7 regfile_alu_waddr_id_i [2] $end
$var wire 1 O7 regfile_alu_waddr_id_i [1] $end
$var wire 1 P7 regfile_alu_waddr_id_i [0] $end
$var wire 1 Q7 regfile_we_ex_i $end
$var wire 1 R7 regfile_waddr_ex_i [5] $end
$var wire 1 S7 regfile_waddr_ex_i [4] $end
$var wire 1 T7 regfile_waddr_ex_i [3] $end
$var wire 1 U7 regfile_waddr_ex_i [2] $end
$var wire 1 V7 regfile_waddr_ex_i [1] $end
$var wire 1 W7 regfile_waddr_ex_i [0] $end
$var wire 1 m/ regfile_we_wb_i $end
$var wire 1 70 regfile_alu_we_fw_i $end
$var reg 2 X7 operand_a_fw_mux_sel_o [1:0] $end
$var reg 2 Y7 operand_b_fw_mux_sel_o [1:0] $end
$var reg 2 Z7 operand_c_fw_mux_sel_o [1:0] $end
$var wire 1 [7 reg_d_ex_is_reg_a_i $end
$var wire 1 \7 reg_d_ex_is_reg_b_i $end
$var wire 1 ]7 reg_d_ex_is_reg_c_i $end
$var wire 1 ^7 reg_d_wb_is_reg_a_i $end
$var wire 1 _7 reg_d_wb_is_reg_b_i $end
$var wire 1 `7 reg_d_wb_is_reg_c_i $end
$var wire 1 a7 reg_d_alu_is_reg_a_i $end
$var wire 1 b7 reg_d_alu_is_reg_b_i $end
$var wire 1 c7 reg_d_alu_is_reg_c_i $end
$var reg 1 d7 halt_if_o $end
$var reg 1 e7 halt_id_o $end
$var reg 1 f7 misaligned_stall_o $end
$var reg 1 g7 jr_stall_o $end
$var reg 1 h7 load_stall_o $end
$var wire 1 i7 id_ready_i $end
$var wire 1 j7 id_valid_i $end
$var wire 1 @. ex_valid_i $end
$var wire 1 >. wb_ready_i $end
$var reg 1 k7 perf_pipeline_stall_o $end
$var reg 5 l7 ctrl_fsm_cs [4:0] $end
$var reg 5 m7 ctrl_fsm_ns [4:0] $end
$var reg 3 n7 debug_fsm_cs [2:0] $end
$var reg 3 o7 debug_fsm_ns [2:0] $end
$var reg 1 p7 jump_done $end
$var reg 1 q7 jump_done_q $end
$var reg 1 r7 jump_in_dec $end
$var reg 1 s7 branch_in_id $end
$var reg 1 t7 data_err_q $end
$var reg 1 u7 debug_mode_q $end
$var reg 1 v7 debug_mode_n $end
$var reg 1 w7 ebrk_force_debug_mode $end
$var reg 1 x7 is_hwlp_body $end
$var reg 1 y7 illegal_insn_q $end
$var reg 1 z7 illegal_insn_n $end
$var reg 1 {7 debug_req_entry_q $end
$var reg 1 |7 debug_req_entry_n $end
$var reg 1 }7 debug_force_wakeup_q $end
$var reg 1 ~7 debug_force_wakeup_n $end
$var reg 1 !8 hwlp_end0_eq_pc $end
$var reg 1 "8 hwlp_end1_eq_pc $end
$var reg 1 #8 hwlp_counter0_gt_1 $end
$var reg 1 $8 hwlp_counter1_gt_1 $end
$var reg 1 %8 hwlp_counter0_eq_1 $end
$var reg 1 &8 hwlp_counter1_eq_1 $end
$var reg 1 '8 hwlp_counter0_eq_0 $end
$var reg 1 (8 hwlp_counter1_eq_0 $end
$var reg 1 )8 hwlp_end0_eq_pc_plus4 $end
$var reg 1 *8 hwlp_end1_eq_pc_plus4 $end
$var reg 1 +8 hwlp_start0_leq_pc $end
$var reg 1 ,8 hwlp_start1_leq_pc $end
$var reg 1 -8 hwlp_end0_geq_pc $end
$var reg 1 .8 hwlp_end1_geq_pc $end
$var reg 1 /8 hwlp_end_4_id_d $end
$var reg 1 08 hwlp_end_4_id_q $end
$var reg 1 18 debug_req_q $end
$var reg 1 28 debug_req_pending $end
$var reg 1 38 wfi_active $end

$scope begin blk_decode_level1 $end
$upscope $end

$scope begin UPDATE_REGS $end
$upscope $end

$scope begin gen_no_hwlp $end
$upscope $end
$upscope $end

$scope module int_controller_i $end
$var parameter 32 48 PULP_SECURE $end
$var wire 1 G- clk $end
$var wire 1 * rst_n $end
$var wire 1 \" irq_i [31] $end
$var wire 1 ]" irq_i [30] $end
$var wire 1 ^" irq_i [29] $end
$var wire 1 _" irq_i [28] $end
$var wire 1 `" irq_i [27] $end
$var wire 1 a" irq_i [26] $end
$var wire 1 b" irq_i [25] $end
$var wire 1 c" irq_i [24] $end
$var wire 1 d" irq_i [23] $end
$var wire 1 e" irq_i [22] $end
$var wire 1 f" irq_i [21] $end
$var wire 1 g" irq_i [20] $end
$var wire 1 h" irq_i [19] $end
$var wire 1 i" irq_i [18] $end
$var wire 1 j" irq_i [17] $end
$var wire 1 k" irq_i [16] $end
$var wire 1 l" irq_i [15] $end
$var wire 1 m" irq_i [14] $end
$var wire 1 n" irq_i [13] $end
$var wire 1 o" irq_i [12] $end
$var wire 1 p" irq_i [11] $end
$var wire 1 q" irq_i [10] $end
$var wire 1 r" irq_i [9] $end
$var wire 1 s" irq_i [8] $end
$var wire 1 t" irq_i [7] $end
$var wire 1 u" irq_i [6] $end
$var wire 1 v" irq_i [5] $end
$var wire 1 w" irq_i [4] $end
$var wire 1 x" irq_i [3] $end
$var wire 1 y" irq_i [2] $end
$var wire 1 z" irq_i [1] $end
$var wire 1 {" irq_i [0] $end
$var wire 1 4/ irq_sec_i $end
$var reg 1 58 irq_req_ctrl_o $end
$var reg 1 68 irq_sec_ctrl_o $end
$var reg 5 78 irq_id_ctrl_o [4:0] $end
$var reg 1 88 irq_wu_ctrl_o $end
$var wire 1 5/ mie_bypass_i [31] $end
$var wire 1 6/ mie_bypass_i [30] $end
$var wire 1 7/ mie_bypass_i [29] $end
$var wire 1 8/ mie_bypass_i [28] $end
$var wire 1 9/ mie_bypass_i [27] $end
$var wire 1 :/ mie_bypass_i [26] $end
$var wire 1 ;/ mie_bypass_i [25] $end
$var wire 1 </ mie_bypass_i [24] $end
$var wire 1 =/ mie_bypass_i [23] $end
$var wire 1 >/ mie_bypass_i [22] $end
$var wire 1 ?/ mie_bypass_i [21] $end
$var wire 1 @/ mie_bypass_i [20] $end
$var wire 1 A/ mie_bypass_i [19] $end
$var wire 1 B/ mie_bypass_i [18] $end
$var wire 1 C/ mie_bypass_i [17] $end
$var wire 1 D/ mie_bypass_i [16] $end
$var wire 1 E/ mie_bypass_i [15] $end
$var wire 1 F/ mie_bypass_i [14] $end
$var wire 1 G/ mie_bypass_i [13] $end
$var wire 1 H/ mie_bypass_i [12] $end
$var wire 1 I/ mie_bypass_i [11] $end
$var wire 1 J/ mie_bypass_i [10] $end
$var wire 1 K/ mie_bypass_i [9] $end
$var wire 1 L/ mie_bypass_i [8] $end
$var wire 1 M/ mie_bypass_i [7] $end
$var wire 1 N/ mie_bypass_i [6] $end
$var wire 1 O/ mie_bypass_i [5] $end
$var wire 1 P/ mie_bypass_i [4] $end
$var wire 1 Q/ mie_bypass_i [3] $end
$var wire 1 R/ mie_bypass_i [2] $end
$var wire 1 S/ mie_bypass_i [1] $end
$var wire 1 T/ mie_bypass_i [0] $end
$var reg 32 98 mip_o [31:0] $end
$var wire 1 V/ m_ie_i $end
$var wire 1 W/ u_ie_i $end
$var wire 1 v. current_priv_lvl_i [1] $end
$var wire 1 w. current_priv_lvl_i [0] $end
$var reg 1 :8 global_irq_enable $end
$var reg 32 ;8 irq_local_qual [31:0] $end
$var reg 32 <8 irq_q [31:0] $end
$var reg 1 =8 irq_sec_q $end

$scope begin gen_no_pulp_secure $end
$upscope $end
$upscope $end

$scope begin gen_no_hwloop_regs $end
$upscope $end
$upscope $end

$scope module ex_stage_i $end
$var parameter 32 >8 COREV_PULP $end
$var parameter 32 ?8 FPU $end
$var parameter 32 @8 APU_NARGS_CPU $end
$var parameter 32 A8 APU_WOP_CPU $end
$var parameter 32 B8 APU_NDSFLAGS_CPU $end
$var parameter 32 C8 APU_NUSFLAGS_CPU $end
$var wire 1 D8 clk $end
$var wire 1 * rst_n $end
$var wire 1 E8 alu_operator_i [6] $end
$var wire 1 F8 alu_operator_i [5] $end
$var wire 1 G8 alu_operator_i [4] $end
$var wire 1 H8 alu_operator_i [3] $end
$var wire 1 I8 alu_operator_i [2] $end
$var wire 1 J8 alu_operator_i [1] $end
$var wire 1 K8 alu_operator_i [0] $end
$var wire 1 L8 alu_operand_a_i [31] $end
$var wire 1 M8 alu_operand_a_i [30] $end
$var wire 1 N8 alu_operand_a_i [29] $end
$var wire 1 O8 alu_operand_a_i [28] $end
$var wire 1 P8 alu_operand_a_i [27] $end
$var wire 1 Q8 alu_operand_a_i [26] $end
$var wire 1 R8 alu_operand_a_i [25] $end
$var wire 1 S8 alu_operand_a_i [24] $end
$var wire 1 T8 alu_operand_a_i [23] $end
$var wire 1 U8 alu_operand_a_i [22] $end
$var wire 1 V8 alu_operand_a_i [21] $end
$var wire 1 W8 alu_operand_a_i [20] $end
$var wire 1 X8 alu_operand_a_i [19] $end
$var wire 1 Y8 alu_operand_a_i [18] $end
$var wire 1 Z8 alu_operand_a_i [17] $end
$var wire 1 [8 alu_operand_a_i [16] $end
$var wire 1 \8 alu_operand_a_i [15] $end
$var wire 1 ]8 alu_operand_a_i [14] $end
$var wire 1 ^8 alu_operand_a_i [13] $end
$var wire 1 _8 alu_operand_a_i [12] $end
$var wire 1 `8 alu_operand_a_i [11] $end
$var wire 1 a8 alu_operand_a_i [10] $end
$var wire 1 b8 alu_operand_a_i [9] $end
$var wire 1 c8 alu_operand_a_i [8] $end
$var wire 1 d8 alu_operand_a_i [7] $end
$var wire 1 e8 alu_operand_a_i [6] $end
$var wire 1 f8 alu_operand_a_i [5] $end
$var wire 1 g8 alu_operand_a_i [4] $end
$var wire 1 h8 alu_operand_a_i [3] $end
$var wire 1 i8 alu_operand_a_i [2] $end
$var wire 1 j8 alu_operand_a_i [1] $end
$var wire 1 k8 alu_operand_a_i [0] $end
$var wire 1 l8 alu_operand_b_i [31] $end
$var wire 1 m8 alu_operand_b_i [30] $end
$var wire 1 n8 alu_operand_b_i [29] $end
$var wire 1 o8 alu_operand_b_i [28] $end
$var wire 1 p8 alu_operand_b_i [27] $end
$var wire 1 q8 alu_operand_b_i [26] $end
$var wire 1 r8 alu_operand_b_i [25] $end
$var wire 1 s8 alu_operand_b_i [24] $end
$var wire 1 t8 alu_operand_b_i [23] $end
$var wire 1 u8 alu_operand_b_i [22] $end
$var wire 1 v8 alu_operand_b_i [21] $end
$var wire 1 w8 alu_operand_b_i [20] $end
$var wire 1 x8 alu_operand_b_i [19] $end
$var wire 1 y8 alu_operand_b_i [18] $end
$var wire 1 z8 alu_operand_b_i [17] $end
$var wire 1 {8 alu_operand_b_i [16] $end
$var wire 1 |8 alu_operand_b_i [15] $end
$var wire 1 }8 alu_operand_b_i [14] $end
$var wire 1 ~8 alu_operand_b_i [13] $end
$var wire 1 !9 alu_operand_b_i [12] $end
$var wire 1 "9 alu_operand_b_i [11] $end
$var wire 1 #9 alu_operand_b_i [10] $end
$var wire 1 $9 alu_operand_b_i [9] $end
$var wire 1 %9 alu_operand_b_i [8] $end
$var wire 1 &9 alu_operand_b_i [7] $end
$var wire 1 '9 alu_operand_b_i [6] $end
$var wire 1 (9 alu_operand_b_i [5] $end
$var wire 1 )9 alu_operand_b_i [4] $end
$var wire 1 *9 alu_operand_b_i [3] $end
$var wire 1 +9 alu_operand_b_i [2] $end
$var wire 1 ,9 alu_operand_b_i [1] $end
$var wire 1 -9 alu_operand_b_i [0] $end
$var wire 1 .9 alu_operand_c_i [31] $end
$var wire 1 /9 alu_operand_c_i [30] $end
$var wire 1 09 alu_operand_c_i [29] $end
$var wire 1 19 alu_operand_c_i [28] $end
$var wire 1 29 alu_operand_c_i [27] $end
$var wire 1 39 alu_operand_c_i [26] $end
$var wire 1 49 alu_operand_c_i [25] $end
$var wire 1 59 alu_operand_c_i [24] $end
$var wire 1 69 alu_operand_c_i [23] $end
$var wire 1 79 alu_operand_c_i [22] $end
$var wire 1 89 alu_operand_c_i [21] $end
$var wire 1 99 alu_operand_c_i [20] $end
$var wire 1 :9 alu_operand_c_i [19] $end
$var wire 1 ;9 alu_operand_c_i [18] $end
$var wire 1 <9 alu_operand_c_i [17] $end
$var wire 1 =9 alu_operand_c_i [16] $end
$var wire 1 >9 alu_operand_c_i [15] $end
$var wire 1 ?9 alu_operand_c_i [14] $end
$var wire 1 @9 alu_operand_c_i [13] $end
$var wire 1 A9 alu_operand_c_i [12] $end
$var wire 1 B9 alu_operand_c_i [11] $end
$var wire 1 C9 alu_operand_c_i [10] $end
$var wire 1 D9 alu_operand_c_i [9] $end
$var wire 1 E9 alu_operand_c_i [8] $end
$var wire 1 F9 alu_operand_c_i [7] $end
$var wire 1 G9 alu_operand_c_i [6] $end
$var wire 1 H9 alu_operand_c_i [5] $end
$var wire 1 I9 alu_operand_c_i [4] $end
$var wire 1 J9 alu_operand_c_i [3] $end
$var wire 1 K9 alu_operand_c_i [2] $end
$var wire 1 L9 alu_operand_c_i [1] $end
$var wire 1 M9 alu_operand_c_i [0] $end
$var wire 1 N9 alu_en_i $end
$var wire 1 O9 bmask_a_i [4] $end
$var wire 1 P9 bmask_a_i [3] $end
$var wire 1 Q9 bmask_a_i [2] $end
$var wire 1 R9 bmask_a_i [1] $end
$var wire 1 S9 bmask_a_i [0] $end
$var wire 1 T9 bmask_b_i [4] $end
$var wire 1 U9 bmask_b_i [3] $end
$var wire 1 V9 bmask_b_i [2] $end
$var wire 1 W9 bmask_b_i [1] $end
$var wire 1 X9 bmask_b_i [0] $end
$var wire 1 Y9 imm_vec_ext_i [1] $end
$var wire 1 Z9 imm_vec_ext_i [0] $end
$var wire 1 [9 alu_vec_mode_i [1] $end
$var wire 1 \9 alu_vec_mode_i [0] $end
$var wire 1 ]9 alu_is_clpx_i $end
$var wire 1 ^9 alu_is_subrot_i $end
$var wire 1 _9 alu_clpx_shift_i [1] $end
$var wire 1 `9 alu_clpx_shift_i [0] $end
$var wire 1 a9 mult_operator_i [2] $end
$var wire 1 b9 mult_operator_i [1] $end
$var wire 1 c9 mult_operator_i [0] $end
$var wire 1 d9 mult_operand_a_i [31] $end
$var wire 1 e9 mult_operand_a_i [30] $end
$var wire 1 f9 mult_operand_a_i [29] $end
$var wire 1 g9 mult_operand_a_i [28] $end
$var wire 1 h9 mult_operand_a_i [27] $end
$var wire 1 i9 mult_operand_a_i [26] $end
$var wire 1 j9 mult_operand_a_i [25] $end
$var wire 1 k9 mult_operand_a_i [24] $end
$var wire 1 l9 mult_operand_a_i [23] $end
$var wire 1 m9 mult_operand_a_i [22] $end
$var wire 1 n9 mult_operand_a_i [21] $end
$var wire 1 o9 mult_operand_a_i [20] $end
$var wire 1 p9 mult_operand_a_i [19] $end
$var wire 1 q9 mult_operand_a_i [18] $end
$var wire 1 r9 mult_operand_a_i [17] $end
$var wire 1 s9 mult_operand_a_i [16] $end
$var wire 1 t9 mult_operand_a_i [15] $end
$var wire 1 u9 mult_operand_a_i [14] $end
$var wire 1 v9 mult_operand_a_i [13] $end
$var wire 1 w9 mult_operand_a_i [12] $end
$var wire 1 x9 mult_operand_a_i [11] $end
$var wire 1 y9 mult_operand_a_i [10] $end
$var wire 1 z9 mult_operand_a_i [9] $end
$var wire 1 {9 mult_operand_a_i [8] $end
$var wire 1 |9 mult_operand_a_i [7] $end
$var wire 1 }9 mult_operand_a_i [6] $end
$var wire 1 ~9 mult_operand_a_i [5] $end
$var wire 1 !: mult_operand_a_i [4] $end
$var wire 1 ": mult_operand_a_i [3] $end
$var wire 1 #: mult_operand_a_i [2] $end
$var wire 1 $: mult_operand_a_i [1] $end
$var wire 1 %: mult_operand_a_i [0] $end
$var wire 1 &: mult_operand_b_i [31] $end
$var wire 1 ': mult_operand_b_i [30] $end
$var wire 1 (: mult_operand_b_i [29] $end
$var wire 1 ): mult_operand_b_i [28] $end
$var wire 1 *: mult_operand_b_i [27] $end
$var wire 1 +: mult_operand_b_i [26] $end
$var wire 1 ,: mult_operand_b_i [25] $end
$var wire 1 -: mult_operand_b_i [24] $end
$var wire 1 .: mult_operand_b_i [23] $end
$var wire 1 /: mult_operand_b_i [22] $end
$var wire 1 0: mult_operand_b_i [21] $end
$var wire 1 1: mult_operand_b_i [20] $end
$var wire 1 2: mult_operand_b_i [19] $end
$var wire 1 3: mult_operand_b_i [18] $end
$var wire 1 4: mult_operand_b_i [17] $end
$var wire 1 5: mult_operand_b_i [16] $end
$var wire 1 6: mult_operand_b_i [15] $end
$var wire 1 7: mult_operand_b_i [14] $end
$var wire 1 8: mult_operand_b_i [13] $end
$var wire 1 9: mult_operand_b_i [12] $end
$var wire 1 :: mult_operand_b_i [11] $end
$var wire 1 ;: mult_operand_b_i [10] $end
$var wire 1 <: mult_operand_b_i [9] $end
$var wire 1 =: mult_operand_b_i [8] $end
$var wire 1 >: mult_operand_b_i [7] $end
$var wire 1 ?: mult_operand_b_i [6] $end
$var wire 1 @: mult_operand_b_i [5] $end
$var wire 1 A: mult_operand_b_i [4] $end
$var wire 1 B: mult_operand_b_i [3] $end
$var wire 1 C: mult_operand_b_i [2] $end
$var wire 1 D: mult_operand_b_i [1] $end
$var wire 1 E: mult_operand_b_i [0] $end
$var wire 1 F: mult_operand_c_i [31] $end
$var wire 1 G: mult_operand_c_i [30] $end
$var wire 1 H: mult_operand_c_i [29] $end
$var wire 1 I: mult_operand_c_i [28] $end
$var wire 1 J: mult_operand_c_i [27] $end
$var wire 1 K: mult_operand_c_i [26] $end
$var wire 1 L: mult_operand_c_i [25] $end
$var wire 1 M: mult_operand_c_i [24] $end
$var wire 1 N: mult_operand_c_i [23] $end
$var wire 1 O: mult_operand_c_i [22] $end
$var wire 1 P: mult_operand_c_i [21] $end
$var wire 1 Q: mult_operand_c_i [20] $end
$var wire 1 R: mult_operand_c_i [19] $end
$var wire 1 S: mult_operand_c_i [18] $end
$var wire 1 T: mult_operand_c_i [17] $end
$var wire 1 U: mult_operand_c_i [16] $end
$var wire 1 V: mult_operand_c_i [15] $end
$var wire 1 W: mult_operand_c_i [14] $end
$var wire 1 X: mult_operand_c_i [13] $end
$var wire 1 Y: mult_operand_c_i [12] $end
$var wire 1 Z: mult_operand_c_i [11] $end
$var wire 1 [: mult_operand_c_i [10] $end
$var wire 1 \: mult_operand_c_i [9] $end
$var wire 1 ]: mult_operand_c_i [8] $end
$var wire 1 ^: mult_operand_c_i [7] $end
$var wire 1 _: mult_operand_c_i [6] $end
$var wire 1 `: mult_operand_c_i [5] $end
$var wire 1 a: mult_operand_c_i [4] $end
$var wire 1 b: mult_operand_c_i [3] $end
$var wire 1 c: mult_operand_c_i [2] $end
$var wire 1 d: mult_operand_c_i [1] $end
$var wire 1 e: mult_operand_c_i [0] $end
$var wire 1 f: mult_en_i $end
$var wire 1 g: mult_sel_subword_i $end
$var wire 1 h: mult_signed_mode_i [1] $end
$var wire 1 i: mult_signed_mode_i [0] $end
$var wire 1 j: mult_imm_i [4] $end
$var wire 1 k: mult_imm_i [3] $end
$var wire 1 l: mult_imm_i [2] $end
$var wire 1 m: mult_imm_i [1] $end
$var wire 1 n: mult_imm_i [0] $end
$var wire 1 o: mult_dot_op_a_i [31] $end
$var wire 1 p: mult_dot_op_a_i [30] $end
$var wire 1 q: mult_dot_op_a_i [29] $end
$var wire 1 r: mult_dot_op_a_i [28] $end
$var wire 1 s: mult_dot_op_a_i [27] $end
$var wire 1 t: mult_dot_op_a_i [26] $end
$var wire 1 u: mult_dot_op_a_i [25] $end
$var wire 1 v: mult_dot_op_a_i [24] $end
$var wire 1 w: mult_dot_op_a_i [23] $end
$var wire 1 x: mult_dot_op_a_i [22] $end
$var wire 1 y: mult_dot_op_a_i [21] $end
$var wire 1 z: mult_dot_op_a_i [20] $end
$var wire 1 {: mult_dot_op_a_i [19] $end
$var wire 1 |: mult_dot_op_a_i [18] $end
$var wire 1 }: mult_dot_op_a_i [17] $end
$var wire 1 ~: mult_dot_op_a_i [16] $end
$var wire 1 !; mult_dot_op_a_i [15] $end
$var wire 1 "; mult_dot_op_a_i [14] $end
$var wire 1 #; mult_dot_op_a_i [13] $end
$var wire 1 $; mult_dot_op_a_i [12] $end
$var wire 1 %; mult_dot_op_a_i [11] $end
$var wire 1 &; mult_dot_op_a_i [10] $end
$var wire 1 '; mult_dot_op_a_i [9] $end
$var wire 1 (; mult_dot_op_a_i [8] $end
$var wire 1 ); mult_dot_op_a_i [7] $end
$var wire 1 *; mult_dot_op_a_i [6] $end
$var wire 1 +; mult_dot_op_a_i [5] $end
$var wire 1 ,; mult_dot_op_a_i [4] $end
$var wire 1 -; mult_dot_op_a_i [3] $end
$var wire 1 .; mult_dot_op_a_i [2] $end
$var wire 1 /; mult_dot_op_a_i [1] $end
$var wire 1 0; mult_dot_op_a_i [0] $end
$var wire 1 1; mult_dot_op_b_i [31] $end
$var wire 1 2; mult_dot_op_b_i [30] $end
$var wire 1 3; mult_dot_op_b_i [29] $end
$var wire 1 4; mult_dot_op_b_i [28] $end
$var wire 1 5; mult_dot_op_b_i [27] $end
$var wire 1 6; mult_dot_op_b_i [26] $end
$var wire 1 7; mult_dot_op_b_i [25] $end
$var wire 1 8; mult_dot_op_b_i [24] $end
$var wire 1 9; mult_dot_op_b_i [23] $end
$var wire 1 :; mult_dot_op_b_i [22] $end
$var wire 1 ;; mult_dot_op_b_i [21] $end
$var wire 1 <; mult_dot_op_b_i [20] $end
$var wire 1 =; mult_dot_op_b_i [19] $end
$var wire 1 >; mult_dot_op_b_i [18] $end
$var wire 1 ?; mult_dot_op_b_i [17] $end
$var wire 1 @; mult_dot_op_b_i [16] $end
$var wire 1 A; mult_dot_op_b_i [15] $end
$var wire 1 B; mult_dot_op_b_i [14] $end
$var wire 1 C; mult_dot_op_b_i [13] $end
$var wire 1 D; mult_dot_op_b_i [12] $end
$var wire 1 E; mult_dot_op_b_i [11] $end
$var wire 1 F; mult_dot_op_b_i [10] $end
$var wire 1 G; mult_dot_op_b_i [9] $end
$var wire 1 H; mult_dot_op_b_i [8] $end
$var wire 1 I; mult_dot_op_b_i [7] $end
$var wire 1 J; mult_dot_op_b_i [6] $end
$var wire 1 K; mult_dot_op_b_i [5] $end
$var wire 1 L; mult_dot_op_b_i [4] $end
$var wire 1 M; mult_dot_op_b_i [3] $end
$var wire 1 N; mult_dot_op_b_i [2] $end
$var wire 1 O; mult_dot_op_b_i [1] $end
$var wire 1 P; mult_dot_op_b_i [0] $end
$var wire 1 Q; mult_dot_op_c_i [31] $end
$var wire 1 R; mult_dot_op_c_i [30] $end
$var wire 1 S; mult_dot_op_c_i [29] $end
$var wire 1 T; mult_dot_op_c_i [28] $end
$var wire 1 U; mult_dot_op_c_i [27] $end
$var wire 1 V; mult_dot_op_c_i [26] $end
$var wire 1 W; mult_dot_op_c_i [25] $end
$var wire 1 X; mult_dot_op_c_i [24] $end
$var wire 1 Y; mult_dot_op_c_i [23] $end
$var wire 1 Z; mult_dot_op_c_i [22] $end
$var wire 1 [; mult_dot_op_c_i [21] $end
$var wire 1 \; mult_dot_op_c_i [20] $end
$var wire 1 ]; mult_dot_op_c_i [19] $end
$var wire 1 ^; mult_dot_op_c_i [18] $end
$var wire 1 _; mult_dot_op_c_i [17] $end
$var wire 1 `; mult_dot_op_c_i [16] $end
$var wire 1 a; mult_dot_op_c_i [15] $end
$var wire 1 b; mult_dot_op_c_i [14] $end
$var wire 1 c; mult_dot_op_c_i [13] $end
$var wire 1 d; mult_dot_op_c_i [12] $end
$var wire 1 e; mult_dot_op_c_i [11] $end
$var wire 1 f; mult_dot_op_c_i [10] $end
$var wire 1 g; mult_dot_op_c_i [9] $end
$var wire 1 h; mult_dot_op_c_i [8] $end
$var wire 1 i; mult_dot_op_c_i [7] $end
$var wire 1 j; mult_dot_op_c_i [6] $end
$var wire 1 k; mult_dot_op_c_i [5] $end
$var wire 1 l; mult_dot_op_c_i [4] $end
$var wire 1 m; mult_dot_op_c_i [3] $end
$var wire 1 n; mult_dot_op_c_i [2] $end
$var wire 1 o; mult_dot_op_c_i [1] $end
$var wire 1 p; mult_dot_op_c_i [0] $end
$var wire 1 q; mult_dot_signed_i [1] $end
$var wire 1 r; mult_dot_signed_i [0] $end
$var wire 1 s; mult_is_clpx_i $end
$var wire 1 t; mult_clpx_shift_i [1] $end
$var wire 1 u; mult_clpx_shift_i [0] $end
$var wire 1 v; mult_clpx_img_i $end
$var reg 1 w; mult_multicycle_o $end
$var wire 1 x; data_req_i $end
$var wire 1 7" data_rvalid_i $end
$var wire 1 y; data_misaligned_ex_i $end
$var wire 1 z; data_misaligned_i $end
$var wire 1 {; ctrl_transfer_insn_in_dec_i [1] $end
$var wire 1 |; ctrl_transfer_insn_in_dec_i [0] $end
$var reg 1 }; fpu_fflags_we_o $end
$var reg 5 ~; fpu_fflags_o [4:0] $end
$var wire 1 !< apu_en_i $end
$var wire 1 "< apu_op_i [5] $end
$var wire 1 #< apu_op_i [4] $end
$var wire 1 $< apu_op_i [3] $end
$var wire 1 %< apu_op_i [2] $end
$var wire 1 &< apu_op_i [1] $end
$var wire 1 '< apu_op_i [0] $end
$var wire 1 (< apu_lat_i [1] $end
$var wire 1 )< apu_lat_i [0] $end
$var reg 96 *< apu_operands_i [95:0] $end
$var wire 1 +< apu_waddr_i [5] $end
$var wire 1 ,< apu_waddr_i [4] $end
$var wire 1 -< apu_waddr_i [3] $end
$var wire 1 .< apu_waddr_i [2] $end
$var wire 1 /< apu_waddr_i [1] $end
$var wire 1 0< apu_waddr_i [0] $end
$var wire 1 k# apu_flags_i [4] $end
$var wire 1 l# apu_flags_i [3] $end
$var wire 1 m# apu_flags_i [2] $end
$var wire 1 n# apu_flags_i [1] $end
$var wire 1 o# apu_flags_i [0] $end
$var reg 18 1< apu_read_regs_i [17:0] $end
$var wire 1 2< apu_read_regs_valid_i [2] $end
$var wire 1 3< apu_read_regs_valid_i [1] $end
$var wire 1 4< apu_read_regs_valid_i [0] $end
$var reg 1 5< apu_read_dep_o $end
$var reg 1 6< apu_read_dep_for_jalr_o $end
$var reg 12 7< apu_write_regs_i [11:0] $end
$var wire 1 8< apu_write_regs_valid_i [1] $end
$var wire 1 9< apu_write_regs_valid_i [0] $end
$var reg 1 :< apu_write_dep_o $end
$var reg 1 ;< apu_perf_type_o $end
$var reg 1 << apu_perf_cont_o $end
$var reg 1 =< apu_perf_wb_o $end
$var reg 1 >< apu_busy_o $end
$var reg 1 ?< apu_ready_wb_o $end
$var reg 1 @< apu_req_o $end
$var wire 1 F# apu_gnt_i $end
$var reg 96 A< apu_operands_o [95:0] $end
$var reg 6 B< apu_op_o [5:0] $end
$var wire 1 J# apu_rvalid_i $end
$var wire 1 K# apu_result_i [31] $end
$var wire 1 L# apu_result_i [30] $end
$var wire 1 M# apu_result_i [29] $end
$var wire 1 N# apu_result_i [28] $end
$var wire 1 O# apu_result_i [27] $end
$var wire 1 P# apu_result_i [26] $end
$var wire 1 Q# apu_result_i [25] $end
$var wire 1 R# apu_result_i [24] $end
$var wire 1 S# apu_result_i [23] $end
$var wire 1 T# apu_result_i [22] $end
$var wire 1 U# apu_result_i [21] $end
$var wire 1 V# apu_result_i [20] $end
$var wire 1 W# apu_result_i [19] $end
$var wire 1 X# apu_result_i [18] $end
$var wire 1 Y# apu_result_i [17] $end
$var wire 1 Z# apu_result_i [16] $end
$var wire 1 [# apu_result_i [15] $end
$var wire 1 \# apu_result_i [14] $end
$var wire 1 ]# apu_result_i [13] $end
$var wire 1 ^# apu_result_i [12] $end
$var wire 1 _# apu_result_i [11] $end
$var wire 1 `# apu_result_i [10] $end
$var wire 1 a# apu_result_i [9] $end
$var wire 1 b# apu_result_i [8] $end
$var wire 1 c# apu_result_i [7] $end
$var wire 1 d# apu_result_i [6] $end
$var wire 1 e# apu_result_i [5] $end
$var wire 1 f# apu_result_i [4] $end
$var wire 1 g# apu_result_i [3] $end
$var wire 1 h# apu_result_i [2] $end
$var wire 1 i# apu_result_i [1] $end
$var wire 1 j# apu_result_i [0] $end
$var wire 1 C< lsu_en_i $end
$var wire 1 D< lsu_rdata_i [31] $end
$var wire 1 E< lsu_rdata_i [30] $end
$var wire 1 F< lsu_rdata_i [29] $end
$var wire 1 G< lsu_rdata_i [28] $end
$var wire 1 H< lsu_rdata_i [27] $end
$var wire 1 I< lsu_rdata_i [26] $end
$var wire 1 J< lsu_rdata_i [25] $end
$var wire 1 K< lsu_rdata_i [24] $end
$var wire 1 L< lsu_rdata_i [23] $end
$var wire 1 M< lsu_rdata_i [22] $end
$var wire 1 N< lsu_rdata_i [21] $end
$var wire 1 O< lsu_rdata_i [20] $end
$var wire 1 P< lsu_rdata_i [19] $end
$var wire 1 Q< lsu_rdata_i [18] $end
$var wire 1 R< lsu_rdata_i [17] $end
$var wire 1 S< lsu_rdata_i [16] $end
$var wire 1 T< lsu_rdata_i [15] $end
$var wire 1 U< lsu_rdata_i [14] $end
$var wire 1 V< lsu_rdata_i [13] $end
$var wire 1 W< lsu_rdata_i [12] $end
$var wire 1 X< lsu_rdata_i [11] $end
$var wire 1 Y< lsu_rdata_i [10] $end
$var wire 1 Z< lsu_rdata_i [9] $end
$var wire 1 [< lsu_rdata_i [8] $end
$var wire 1 \< lsu_rdata_i [7] $end
$var wire 1 ]< lsu_rdata_i [6] $end
$var wire 1 ^< lsu_rdata_i [5] $end
$var wire 1 _< lsu_rdata_i [4] $end
$var wire 1 `< lsu_rdata_i [3] $end
$var wire 1 a< lsu_rdata_i [2] $end
$var wire 1 b< lsu_rdata_i [1] $end
$var wire 1 c< lsu_rdata_i [0] $end
$var wire 1 d< branch_in_ex_i $end
$var wire 1 e< regfile_alu_waddr_i [5] $end
$var wire 1 f< regfile_alu_waddr_i [4] $end
$var wire 1 g< regfile_alu_waddr_i [3] $end
$var wire 1 h< regfile_alu_waddr_i [2] $end
$var wire 1 i< regfile_alu_waddr_i [1] $end
$var wire 1 j< regfile_alu_waddr_i [0] $end
$var wire 1 k< regfile_alu_we_i $end
$var wire 1 l< regfile_we_i $end
$var wire 1 m< regfile_waddr_i [5] $end
$var wire 1 n< regfile_waddr_i [4] $end
$var wire 1 o< regfile_waddr_i [3] $end
$var wire 1 p< regfile_waddr_i [2] $end
$var wire 1 q< regfile_waddr_i [1] $end
$var wire 1 r< regfile_waddr_i [0] $end
$var wire 1 s< csr_access_i $end
$var wire 1 t< csr_rdata_i [31] $end
$var wire 1 u< csr_rdata_i [30] $end
$var wire 1 v< csr_rdata_i [29] $end
$var wire 1 w< csr_rdata_i [28] $end
$var wire 1 x< csr_rdata_i [27] $end
$var wire 1 y< csr_rdata_i [26] $end
$var wire 1 z< csr_rdata_i [25] $end
$var wire 1 {< csr_rdata_i [24] $end
$var wire 1 |< csr_rdata_i [23] $end
$var wire 1 }< csr_rdata_i [22] $end
$var wire 1 ~< csr_rdata_i [21] $end
$var wire 1 != csr_rdata_i [20] $end
$var wire 1 "= csr_rdata_i [19] $end
$var wire 1 #= csr_rdata_i [18] $end
$var wire 1 $= csr_rdata_i [17] $end
$var wire 1 %= csr_rdata_i [16] $end
$var wire 1 &= csr_rdata_i [15] $end
$var wire 1 '= csr_rdata_i [14] $end
$var wire 1 (= csr_rdata_i [13] $end
$var wire 1 )= csr_rdata_i [12] $end
$var wire 1 *= csr_rdata_i [11] $end
$var wire 1 += csr_rdata_i [10] $end
$var wire 1 ,= csr_rdata_i [9] $end
$var wire 1 -= csr_rdata_i [8] $end
$var wire 1 .= csr_rdata_i [7] $end
$var wire 1 /= csr_rdata_i [6] $end
$var wire 1 0= csr_rdata_i [5] $end
$var wire 1 1= csr_rdata_i [4] $end
$var wire 1 2= csr_rdata_i [3] $end
$var wire 1 3= csr_rdata_i [2] $end
$var wire 1 4= csr_rdata_i [1] $end
$var wire 1 5= csr_rdata_i [0] $end
$var reg 6 6= regfile_waddr_wb_o [5:0] $end
$var reg 1 7= regfile_we_wb_o $end
$var reg 1 8= regfile_we_wb_power_o $end
$var reg 32 9= regfile_wdata_wb_o [31:0] $end
$var reg 6 := regfile_alu_waddr_fw_o [5:0] $end
$var reg 1 ;= regfile_alu_we_fw_o $end
$var reg 1 <= regfile_alu_we_fw_power_o $end
$var reg 32 == regfile_alu_wdata_fw_o [31:0] $end
$var reg 32 >= jump_target_o [31:0] $end
$var reg 1 ?= branch_decision_o $end
$var wire 1 @= is_decoding_i $end
$var wire 1 A= lsu_ready_ex_i $end
$var wire 1 B= lsu_err_i $end
$var reg 1 C= ex_ready_o $end
$var reg 1 D= ex_valid_o $end
$var wire 1 E= wb_ready_i $end
$var reg 32 F= alu_result [31:0] $end
$var reg 32 G= mult_result [31:0] $end
$var reg 1 H= alu_cmp_result $end
$var reg 1 I= regfile_we_lsu $end
$var reg 6 J= regfile_waddr_lsu [5:0] $end
$var reg 1 K= wb_contention $end
$var reg 1 L= wb_contention_lsu $end
$var reg 1 M= alu_ready $end
$var reg 1 N= mulh_active $end
$var reg 1 O= mult_ready $end
$var reg 1 P= apu_valid $end
$var reg 6 Q= apu_waddr [5:0] $end
$var reg 32 R= apu_result [31:0] $end
$var reg 1 S= apu_stall $end
$var reg 1 T= apu_active $end
$var reg 1 U= apu_singlecycle $end
$var reg 1 V= apu_multicycle $end
$var reg 1 W= apu_req $end
$var reg 1 X= apu_gnt $end
$var reg 1 Y= apu_rvalid_q $end
$var reg 32 Z= apu_result_q [31:0] $end
$var reg 5 [= apu_flags_q [4:0] $end

$scope begin EX_WB_Pipeline_Register $end
$upscope $end

$scope module alu_i $end
$var wire 1 D8 clk $end
$var wire 1 * rst_n $end
$var wire 1 N9 enable_i $end
$var wire 1 E8 operator_i [6] $end
$var wire 1 F8 operator_i [5] $end
$var wire 1 G8 operator_i [4] $end
$var wire 1 H8 operator_i [3] $end
$var wire 1 I8 operator_i [2] $end
$var wire 1 J8 operator_i [1] $end
$var wire 1 K8 operator_i [0] $end
$var wire 1 L8 operand_a_i [31] $end
$var wire 1 M8 operand_a_i [30] $end
$var wire 1 N8 operand_a_i [29] $end
$var wire 1 O8 operand_a_i [28] $end
$var wire 1 P8 operand_a_i [27] $end
$var wire 1 Q8 operand_a_i [26] $end
$var wire 1 R8 operand_a_i [25] $end
$var wire 1 S8 operand_a_i [24] $end
$var wire 1 T8 operand_a_i [23] $end
$var wire 1 U8 operand_a_i [22] $end
$var wire 1 V8 operand_a_i [21] $end
$var wire 1 W8 operand_a_i [20] $end
$var wire 1 X8 operand_a_i [19] $end
$var wire 1 Y8 operand_a_i [18] $end
$var wire 1 Z8 operand_a_i [17] $end
$var wire 1 [8 operand_a_i [16] $end
$var wire 1 \8 operand_a_i [15] $end
$var wire 1 ]8 operand_a_i [14] $end
$var wire 1 ^8 operand_a_i [13] $end
$var wire 1 _8 operand_a_i [12] $end
$var wire 1 `8 operand_a_i [11] $end
$var wire 1 a8 operand_a_i [10] $end
$var wire 1 b8 operand_a_i [9] $end
$var wire 1 c8 operand_a_i [8] $end
$var wire 1 d8 operand_a_i [7] $end
$var wire 1 e8 operand_a_i [6] $end
$var wire 1 f8 operand_a_i [5] $end
$var wire 1 g8 operand_a_i [4] $end
$var wire 1 h8 operand_a_i [3] $end
$var wire 1 i8 operand_a_i [2] $end
$var wire 1 j8 operand_a_i [1] $end
$var wire 1 k8 operand_a_i [0] $end
$var wire 1 l8 operand_b_i [31] $end
$var wire 1 m8 operand_b_i [30] $end
$var wire 1 n8 operand_b_i [29] $end
$var wire 1 o8 operand_b_i [28] $end
$var wire 1 p8 operand_b_i [27] $end
$var wire 1 q8 operand_b_i [26] $end
$var wire 1 r8 operand_b_i [25] $end
$var wire 1 s8 operand_b_i [24] $end
$var wire 1 t8 operand_b_i [23] $end
$var wire 1 u8 operand_b_i [22] $end
$var wire 1 v8 operand_b_i [21] $end
$var wire 1 w8 operand_b_i [20] $end
$var wire 1 x8 operand_b_i [19] $end
$var wire 1 y8 operand_b_i [18] $end
$var wire 1 z8 operand_b_i [17] $end
$var wire 1 {8 operand_b_i [16] $end
$var wire 1 |8 operand_b_i [15] $end
$var wire 1 }8 operand_b_i [14] $end
$var wire 1 ~8 operand_b_i [13] $end
$var wire 1 !9 operand_b_i [12] $end
$var wire 1 "9 operand_b_i [11] $end
$var wire 1 #9 operand_b_i [10] $end
$var wire 1 $9 operand_b_i [9] $end
$var wire 1 %9 operand_b_i [8] $end
$var wire 1 &9 operand_b_i [7] $end
$var wire 1 '9 operand_b_i [6] $end
$var wire 1 (9 operand_b_i [5] $end
$var wire 1 )9 operand_b_i [4] $end
$var wire 1 *9 operand_b_i [3] $end
$var wire 1 +9 operand_b_i [2] $end
$var wire 1 ,9 operand_b_i [1] $end
$var wire 1 -9 operand_b_i [0] $end
$var wire 1 .9 operand_c_i [31] $end
$var wire 1 /9 operand_c_i [30] $end
$var wire 1 09 operand_c_i [29] $end
$var wire 1 19 operand_c_i [28] $end
$var wire 1 29 operand_c_i [27] $end
$var wire 1 39 operand_c_i [26] $end
$var wire 1 49 operand_c_i [25] $end
$var wire 1 59 operand_c_i [24] $end
$var wire 1 69 operand_c_i [23] $end
$var wire 1 79 operand_c_i [22] $end
$var wire 1 89 operand_c_i [21] $end
$var wire 1 99 operand_c_i [20] $end
$var wire 1 :9 operand_c_i [19] $end
$var wire 1 ;9 operand_c_i [18] $end
$var wire 1 <9 operand_c_i [17] $end
$var wire 1 =9 operand_c_i [16] $end
$var wire 1 >9 operand_c_i [15] $end
$var wire 1 ?9 operand_c_i [14] $end
$var wire 1 @9 operand_c_i [13] $end
$var wire 1 A9 operand_c_i [12] $end
$var wire 1 B9 operand_c_i [11] $end
$var wire 1 C9 operand_c_i [10] $end
$var wire 1 D9 operand_c_i [9] $end
$var wire 1 E9 operand_c_i [8] $end
$var wire 1 F9 operand_c_i [7] $end
$var wire 1 G9 operand_c_i [6] $end
$var wire 1 H9 operand_c_i [5] $end
$var wire 1 I9 operand_c_i [4] $end
$var wire 1 J9 operand_c_i [3] $end
$var wire 1 K9 operand_c_i [2] $end
$var wire 1 L9 operand_c_i [1] $end
$var wire 1 M9 operand_c_i [0] $end
$var wire 1 [9 vector_mode_i [1] $end
$var wire 1 \9 vector_mode_i [0] $end
$var wire 1 O9 bmask_a_i [4] $end
$var wire 1 P9 bmask_a_i [3] $end
$var wire 1 Q9 bmask_a_i [2] $end
$var wire 1 R9 bmask_a_i [1] $end
$var wire 1 S9 bmask_a_i [0] $end
$var wire 1 T9 bmask_b_i [4] $end
$var wire 1 U9 bmask_b_i [3] $end
$var wire 1 V9 bmask_b_i [2] $end
$var wire 1 W9 bmask_b_i [1] $end
$var wire 1 X9 bmask_b_i [0] $end
$var wire 1 Y9 imm_vec_ext_i [1] $end
$var wire 1 Z9 imm_vec_ext_i [0] $end
$var wire 1 ]9 is_clpx_i $end
$var wire 1 ^9 is_subrot_i $end
$var wire 1 _9 clpx_shift_i [1] $end
$var wire 1 `9 clpx_shift_i [0] $end
$var reg 32 \= result_o [31:0] $end
$var reg 1 ]= comparison_result_o $end
$var reg 1 ^= ready_o $end
$var wire 1 _= ex_ready_i $end
$var reg 32 `= operand_a_rev [31:0] $end
$var reg 32 a= operand_a_neg [31:0] $end
$var reg 32 b= operand_a_neg_rev [31:0] $end
$var reg 32 c= operand_b_neg [31:0] $end
$var reg 6 d= div_shift [5:0] $end
$var reg 1 e= div_valid $end
$var reg 32 f= bmask [31:0] $end
$var reg 1 g= adder_op_b_negate $end
$var reg 32 h= adder_op_a [31:0] $end
$var reg 32 i= adder_op_b [31:0] $end
$var reg 36 j= adder_in_a [35:0] $end
$var reg 36 k= adder_in_b [35:0] $end
$var reg 32 l= adder_result [31:0] $end
$var reg 37 m= adder_result_expanded [36:0] $end
$var reg 32 n= adder_round_value [31:0] $end
$var reg 32 o= adder_round_result [31:0] $end
$var reg 1 p= shift_left $end
$var reg 1 q= shift_use_round $end
$var reg 1 r= shift_arithmetic $end
$var reg 32 s= shift_amt_left [31:0] $end
$var reg 32 t= shift_amt [31:0] $end
$var reg 32 u= shift_amt_int [31:0] $end
$var reg 32 v= shift_amt_norm [31:0] $end
$var reg 32 w= shift_op_a [31:0] $end
$var reg 32 x= shift_result [31:0] $end
$var reg 32 y= shift_right_result [31:0] $end
$var reg 32 z= shift_left_result [31:0] $end
$var reg 16 {= clpx_shift_ex [15:0] $end
$var reg 64 |= shift_op_a_32 [63:0] $end
$var reg 4 }= is_equal [3:0] $end
$var reg 4 ~= is_greater [3:0] $end
$var reg 4 !> cmp_signed [3:0] $end
$var reg 4 "> is_equal_vec [3:0] $end
$var reg 4 #> is_greater_vec [3:0] $end
$var reg 32 $> operand_b_eq [31:0] $end
$var reg 1 %> is_equal_clip $end
$var reg 4 &> cmp_result [3:0] $end
$var reg 32 '> result_minmax [31:0] $end
$var reg 4 (> sel_minmax [3:0] $end
$var reg 1 )> do_min $end
$var reg 32 *> minmax_b [31:0] $end
$var reg 32 +> clip_result [31:0] $end
$var reg 8 ,> shuffle_byte_sel [7:0] $end
$var reg 4 -> shuffle_reg_sel [3:0] $end
$var reg 2 .> shuffle_reg1_sel [1:0] $end
$var reg 2 /> shuffle_reg0_sel [1:0] $end
$var reg 4 0> shuffle_through [3:0] $end
$var reg 32 1> shuffle_r1 [31:0] $end
$var reg 32 2> shuffle_r0 [31:0] $end
$var reg 32 3> shuffle_r1_in [31:0] $end
$var reg 32 4> shuffle_r0_in [31:0] $end
$var reg 32 5> shuffle_result [31:0] $end
$var reg 32 6> pack_result [31:0] $end
$var reg 32 7> ff_input [31:0] $end
$var reg 6 8> cnt_result [5:0] $end
$var reg 6 9> clb_result [5:0] $end
$var reg 5 :> ff1_result [4:0] $end
$var reg 1 ;> ff_no_one $end
$var reg 5 <> fl1_result [4:0] $end
$var reg 6 => bitop_result [5:0] $end
$var reg 1 >> extract_is_signed $end
$var reg 1 ?> extract_sign $end
$var reg 32 @> bmask_first [31:0] $end
$var reg 32 A> bmask_inv [31:0] $end
$var reg 32 B> bextins_and [31:0] $end
$var reg 32 C> bextins_result [31:0] $end
$var reg 32 D> bclr_result [31:0] $end
$var reg 32 E> bset_result [31:0] $end
$var reg 32 F> radix_2_rev [31:0] $end
$var reg 32 G> radix_4_rev [31:0] $end
$var reg 32 H> radix_8_rev [31:0] $end
$var reg 32 I> reverse_result [31:0] $end
$var reg 2 J> radix_mux_sel [1:0] $end
$var reg 32 K> result_div [31:0] $end
$var reg 1 L> div_ready $end
$var reg 1 M> div_signed $end
$var reg 1 N> div_op_a_signed $end
$var reg 6 O> div_shift_int [5:0] $end

$scope begin gen_radix_8_rev[9] $end
$var parameter 32 P> j $end
$upscope $end

$scope begin gen_radix_8_rev[8] $end
$var parameter 32 Q> j $end
$upscope $end

$scope begin gen_radix_8_rev[7] $end
$var parameter 32 R> j $end
$upscope $end

$scope begin gen_radix_8_rev[6] $end
$var parameter 32 S> j $end
$upscope $end

$scope begin gen_radix_8_rev[5] $end
$var parameter 32 T> j $end
$upscope $end

$scope begin gen_radix_8_rev[4] $end
$var parameter 32 U> j $end
$upscope $end

$scope begin gen_radix_8_rev[3] $end
$var parameter 32 V> j $end
$upscope $end

$scope begin gen_radix_8_rev[2] $end
$var parameter 32 W> j $end
$upscope $end

$scope begin gen_radix_8_rev[1] $end
$var parameter 32 X> j $end
$upscope $end

$scope begin gen_radix_8_rev[0] $end
$var parameter 32 Y> j $end
$upscope $end

$scope begin gen_radix_4_rev[15] $end
$var parameter 32 Z> j $end
$upscope $end

$scope begin gen_radix_4_rev[14] $end
$var parameter 32 [> j $end
$upscope $end

$scope begin gen_radix_4_rev[13] $end
$var parameter 32 \> j $end
$upscope $end

$scope begin gen_radix_4_rev[12] $end
$var parameter 32 ]> j $end
$upscope $end

$scope begin gen_radix_4_rev[11] $end
$var parameter 32 ^> j $end
$upscope $end

$scope begin gen_radix_4_rev[10] $end
$var parameter 32 _> j $end
$upscope $end

$scope begin gen_radix_4_rev[9] $end
$var parameter 32 `> j $end
$upscope $end

$scope begin gen_radix_4_rev[8] $end
$var parameter 32 a> j $end
$upscope $end

$scope begin gen_radix_4_rev[7] $end
$var parameter 32 b> j $end
$upscope $end

$scope begin gen_radix_4_rev[6] $end
$var parameter 32 c> j $end
$upscope $end

$scope begin gen_radix_4_rev[5] $end
$var parameter 32 d> j $end
$upscope $end

$scope begin gen_radix_4_rev[4] $end
$var parameter 32 e> j $end
$upscope $end

$scope begin gen_radix_4_rev[3] $end
$var parameter 32 f> j $end
$upscope $end

$scope begin gen_radix_4_rev[2] $end
$var parameter 32 g> j $end
$upscope $end

$scope begin gen_radix_4_rev[1] $end
$var parameter 32 h> j $end
$upscope $end

$scope begin gen_radix_4_rev[0] $end
$var parameter 32 i> j $end
$upscope $end

$scope begin gen_radix_2_rev[31] $end
$var parameter 32 j> j $end
$upscope $end

$scope begin gen_radix_2_rev[30] $end
$var parameter 32 k> j $end
$upscope $end

$scope begin gen_radix_2_rev[29] $end
$var parameter 32 l> j $end
$upscope $end

$scope begin gen_radix_2_rev[28] $end
$var parameter 32 m> j $end
$upscope $end

$scope begin gen_radix_2_rev[27] $end
$var parameter 32 n> j $end
$upscope $end

$scope begin gen_radix_2_rev[26] $end
$var parameter 32 o> j $end
$upscope $end

$scope begin gen_radix_2_rev[25] $end
$var parameter 32 p> j $end
$upscope $end

$scope begin gen_radix_2_rev[24] $end
$var parameter 32 q> j $end
$upscope $end

$scope begin gen_radix_2_rev[23] $end
$var parameter 32 r> j $end
$upscope $end

$scope begin gen_radix_2_rev[22] $end
$var parameter 32 s> j $end
$upscope $end

$scope begin gen_radix_2_rev[21] $end
$var parameter 32 t> j $end
$upscope $end

$scope begin gen_radix_2_rev[20] $end
$var parameter 32 u> j $end
$upscope $end

$scope begin gen_radix_2_rev[19] $end
$var parameter 32 v> j $end
$upscope $end

$scope begin gen_radix_2_rev[18] $end
$var parameter 32 w> j $end
$upscope $end

$scope begin gen_radix_2_rev[17] $end
$var parameter 32 x> j $end
$upscope $end

$scope begin gen_radix_2_rev[16] $end
$var parameter 32 y> j $end
$upscope $end

$scope begin gen_radix_2_rev[15] $end
$var parameter 32 z> j $end
$upscope $end

$scope begin gen_radix_2_rev[14] $end
$var parameter 32 {> j $end
$upscope $end

$scope begin gen_radix_2_rev[13] $end
$var parameter 32 |> j $end
$upscope $end

$scope begin gen_radix_2_rev[12] $end
$var parameter 32 }> j $end
$upscope $end

$scope begin gen_radix_2_rev[11] $end
$var parameter 32 ~> j $end
$upscope $end

$scope begin gen_radix_2_rev[10] $end
$var parameter 32 !? j $end
$upscope $end

$scope begin gen_radix_2_rev[9] $end
$var parameter 32 "? j $end
$upscope $end

$scope begin gen_radix_2_rev[8] $end
$var parameter 32 #? j $end
$upscope $end

$scope begin gen_radix_2_rev[7] $end
$var parameter 32 $? j $end
$upscope $end

$scope begin gen_radix_2_rev[6] $end
$var parameter 32 %? j $end
$upscope $end

$scope begin gen_radix_2_rev[5] $end
$var parameter 32 &? j $end
$upscope $end

$scope begin gen_radix_2_rev[4] $end
$var parameter 32 '? j $end
$upscope $end

$scope begin gen_radix_2_rev[3] $end
$var parameter 32 (? j $end
$upscope $end

$scope begin gen_radix_2_rev[2] $end
$var parameter 32 )? j $end
$upscope $end

$scope begin gen_radix_2_rev[1] $end
$var parameter 32 *? j $end
$upscope $end

$scope begin gen_radix_2_rev[0] $end
$var parameter 32 +? j $end
$upscope $end

$scope begin gen_is_vec[3] $end
$var parameter 32 ,? i $end
$upscope $end

$scope begin gen_is_vec[2] $end
$var parameter 32 -? i $end
$upscope $end

$scope begin gen_is_vec[1] $end
$var parameter 32 .? i $end
$upscope $end

$scope begin gen_is_vec[0] $end
$var parameter 32 /? i $end
$upscope $end

$scope begin gen_shift_left_result[31] $end
$var parameter 32 0? j $end
$upscope $end

$scope begin gen_shift_left_result[30] $end
$var parameter 32 1? j $end
$upscope $end

$scope begin gen_shift_left_result[29] $end
$var parameter 32 2? j $end
$upscope $end

$scope begin gen_shift_left_result[28] $end
$var parameter 32 3? j $end
$upscope $end

$scope begin gen_shift_left_result[27] $end
$var parameter 32 4? j $end
$upscope $end

$scope begin gen_shift_left_result[26] $end
$var parameter 32 5? j $end
$upscope $end

$scope begin gen_shift_left_result[25] $end
$var parameter 32 6? j $end
$upscope $end

$scope begin gen_shift_left_result[24] $end
$var parameter 32 7? j $end
$upscope $end

$scope begin gen_shift_left_result[23] $end
$var parameter 32 8? j $end
$upscope $end

$scope begin gen_shift_left_result[22] $end
$var parameter 32 9? j $end
$upscope $end

$scope begin gen_shift_left_result[21] $end
$var parameter 32 :? j $end
$upscope $end

$scope begin gen_shift_left_result[20] $end
$var parameter 32 ;? j $end
$upscope $end

$scope begin gen_shift_left_result[19] $end
$var parameter 32 <? j $end
$upscope $end

$scope begin gen_shift_left_result[18] $end
$var parameter 32 =? j $end
$upscope $end

$scope begin gen_shift_left_result[17] $end
$var parameter 32 >? j $end
$upscope $end

$scope begin gen_shift_left_result[16] $end
$var parameter 32 ?? j $end
$upscope $end

$scope begin gen_shift_left_result[15] $end
$var parameter 32 @? j $end
$upscope $end

$scope begin gen_shift_left_result[14] $end
$var parameter 32 A? j $end
$upscope $end

$scope begin gen_shift_left_result[13] $end
$var parameter 32 B? j $end
$upscope $end

$scope begin gen_shift_left_result[12] $end
$var parameter 32 C? j $end
$upscope $end

$scope begin gen_shift_left_result[11] $end
$var parameter 32 D? j $end
$upscope $end

$scope begin gen_shift_left_result[10] $end
$var parameter 32 E? j $end
$upscope $end

$scope begin gen_shift_left_result[9] $end
$var parameter 32 F? j $end
$upscope $end

$scope begin gen_shift_left_result[8] $end
$var parameter 32 G? j $end
$upscope $end

$scope begin gen_shift_left_result[7] $end
$var parameter 32 H? j $end
$upscope $end

$scope begin gen_shift_left_result[6] $end
$var parameter 32 I? j $end
$upscope $end

$scope begin gen_shift_left_result[5] $end
$var parameter 32 J? j $end
$upscope $end

$scope begin gen_shift_left_result[4] $end
$var parameter 32 K? j $end
$upscope $end

$scope begin gen_shift_left_result[3] $end
$var parameter 32 L? j $end
$upscope $end

$scope begin gen_shift_left_result[2] $end
$var parameter 32 M? j $end
$upscope $end

$scope begin gen_shift_left_result[1] $end
$var parameter 32 N? j $end
$upscope $end

$scope begin gen_shift_left_result[0] $end
$var parameter 32 O? j $end
$upscope $end

$scope begin gen_operand_a_neg_rev[31] $end
$var parameter 32 P? m $end
$upscope $end

$scope begin gen_operand_a_neg_rev[30] $end
$var parameter 32 Q? m $end
$upscope $end

$scope begin gen_operand_a_neg_rev[29] $end
$var parameter 32 R? m $end
$upscope $end

$scope begin gen_operand_a_neg_rev[28] $end
$var parameter 32 S? m $end
$upscope $end

$scope begin gen_operand_a_neg_rev[27] $end
$var parameter 32 T? m $end
$upscope $end

$scope begin gen_operand_a_neg_rev[26] $end
$var parameter 32 U? m $end
$upscope $end

$scope begin gen_operand_a_neg_rev[25] $end
$var parameter 32 V? m $end
$upscope $end

$scope begin gen_operand_a_neg_rev[24] $end
$var parameter 32 W? m $end
$upscope $end

$scope begin gen_operand_a_neg_rev[23] $end
$var parameter 32 X? m $end
$upscope $end

$scope begin gen_operand_a_neg_rev[22] $end
$var parameter 32 Y? m $end
$upscope $end

$scope begin gen_operand_a_neg_rev[21] $end
$var parameter 32 Z? m $end
$upscope $end

$scope begin gen_operand_a_neg_rev[20] $end
$var parameter 32 [? m $end
$upscope $end

$scope begin gen_operand_a_neg_rev[19] $end
$var parameter 32 \? m $end
$upscope $end

$scope begin gen_operand_a_neg_rev[18] $end
$var parameter 32 ]? m $end
$upscope $end

$scope begin gen_operand_a_neg_rev[17] $end
$var parameter 32 ^? m $end
$upscope $end

$scope begin gen_operand_a_neg_rev[16] $end
$var parameter 32 _? m $end
$upscope $end

$scope begin gen_operand_a_neg_rev[15] $end
$var parameter 32 `? m $end
$upscope $end

$scope begin gen_operand_a_neg_rev[14] $end
$var parameter 32 a? m $end
$upscope $end

$scope begin gen_operand_a_neg_rev[13] $end
$var parameter 32 b? m $end
$upscope $end

$scope begin gen_operand_a_neg_rev[12] $end
$var parameter 32 c? m $end
$upscope $end

$scope begin gen_operand_a_neg_rev[11] $end
$var parameter 32 d? m $end
$upscope $end

$scope begin gen_operand_a_neg_rev[10] $end
$var parameter 32 e? m $end
$upscope $end

$scope begin gen_operand_a_neg_rev[9] $end
$var parameter 32 f? m $end
$upscope $end

$scope begin gen_operand_a_neg_rev[8] $end
$var parameter 32 g? m $end
$upscope $end

$scope begin gen_operand_a_neg_rev[7] $end
$var parameter 32 h? m $end
$upscope $end

$scope begin gen_operand_a_neg_rev[6] $end
$var parameter 32 i? m $end
$upscope $end

$scope begin gen_operand_a_neg_rev[5] $end
$var parameter 32 j? m $end
$upscope $end

$scope begin gen_operand_a_neg_rev[4] $end
$var parameter 32 k? m $end
$upscope $end

$scope begin gen_operand_a_neg_rev[3] $end
$var parameter 32 l? m $end
$upscope $end

$scope begin gen_operand_a_neg_rev[2] $end
$var parameter 32 m? m $end
$upscope $end

$scope begin gen_operand_a_neg_rev[1] $end
$var parameter 32 n? m $end
$upscope $end

$scope begin gen_operand_a_neg_rev[0] $end
$var parameter 32 o? m $end
$upscope $end

$scope begin gen_operand_a_rev[31] $end
$var parameter 32 p? k $end
$upscope $end

$scope begin gen_operand_a_rev[30] $end
$var parameter 32 q? k $end
$upscope $end

$scope begin gen_operand_a_rev[29] $end
$var parameter 32 r? k $end
$upscope $end

$scope begin gen_operand_a_rev[28] $end
$var parameter 32 s? k $end
$upscope $end

$scope begin gen_operand_a_rev[27] $end
$var parameter 32 t? k $end
$upscope $end

$scope begin gen_operand_a_rev[26] $end
$var parameter 32 u? k $end
$upscope $end

$scope begin gen_operand_a_rev[25] $end
$var parameter 32 v? k $end
$upscope $end

$scope begin gen_operand_a_rev[24] $end
$var parameter 32 w? k $end
$upscope $end

$scope begin gen_operand_a_rev[23] $end
$var parameter 32 x? k $end
$upscope $end

$scope begin gen_operand_a_rev[22] $end
$var parameter 32 y? k $end
$upscope $end

$scope begin gen_operand_a_rev[21] $end
$var parameter 32 z? k $end
$upscope $end

$scope begin gen_operand_a_rev[20] $end
$var parameter 32 {? k $end
$upscope $end

$scope begin gen_operand_a_rev[19] $end
$var parameter 32 |? k $end
$upscope $end

$scope begin gen_operand_a_rev[18] $end
$var parameter 32 }? k $end
$upscope $end

$scope begin gen_operand_a_rev[17] $end
$var parameter 32 ~? k $end
$upscope $end

$scope begin gen_operand_a_rev[16] $end
$var parameter 32 !@ k $end
$upscope $end

$scope begin gen_operand_a_rev[15] $end
$var parameter 32 "@ k $end
$upscope $end

$scope begin gen_operand_a_rev[14] $end
$var parameter 32 #@ k $end
$upscope $end

$scope begin gen_operand_a_rev[13] $end
$var parameter 32 $@ k $end
$upscope $end

$scope begin gen_operand_a_rev[12] $end
$var parameter 32 %@ k $end
$upscope $end

$scope begin gen_operand_a_rev[11] $end
$var parameter 32 &@ k $end
$upscope $end

$scope begin gen_operand_a_rev[10] $end
$var parameter 32 '@ k $end
$upscope $end

$scope begin gen_operand_a_rev[9] $end
$var parameter 32 (@ k $end
$upscope $end

$scope begin gen_operand_a_rev[8] $end
$var parameter 32 )@ k $end
$upscope $end

$scope begin gen_operand_a_rev[7] $end
$var parameter 32 *@ k $end
$upscope $end

$scope begin gen_operand_a_rev[6] $end
$var parameter 32 +@ k $end
$upscope $end

$scope begin gen_operand_a_rev[5] $end
$var parameter 32 ,@ k $end
$upscope $end

$scope begin gen_operand_a_rev[4] $end
$var parameter 32 -@ k $end
$upscope $end

$scope begin gen_operand_a_rev[3] $end
$var parameter 32 .@ k $end
$upscope $end

$scope begin gen_operand_a_rev[2] $end
$var parameter 32 /@ k $end
$upscope $end

$scope begin gen_operand_a_rev[1] $end
$var parameter 32 0@ k $end
$upscope $end

$scope begin gen_operand_a_rev[0] $end
$var parameter 32 1@ k $end
$upscope $end

$scope module popcnt_i $end
$var wire 1 L8 in_i [31] $end
$var wire 1 M8 in_i [30] $end
$var wire 1 N8 in_i [29] $end
$var wire 1 O8 in_i [28] $end
$var wire 1 P8 in_i [27] $end
$var wire 1 Q8 in_i [26] $end
$var wire 1 R8 in_i [25] $end
$var wire 1 S8 in_i [24] $end
$var wire 1 T8 in_i [23] $end
$var wire 1 U8 in_i [22] $end
$var wire 1 V8 in_i [21] $end
$var wire 1 W8 in_i [20] $end
$var wire 1 X8 in_i [19] $end
$var wire 1 Y8 in_i [18] $end
$var wire 1 Z8 in_i [17] $end
$var wire 1 [8 in_i [16] $end
$var wire 1 \8 in_i [15] $end
$var wire 1 ]8 in_i [14] $end
$var wire 1 ^8 in_i [13] $end
$var wire 1 _8 in_i [12] $end
$var wire 1 `8 in_i [11] $end
$var wire 1 a8 in_i [10] $end
$var wire 1 b8 in_i [9] $end
$var wire 1 c8 in_i [8] $end
$var wire 1 d8 in_i [7] $end
$var wire 1 e8 in_i [6] $end
$var wire 1 f8 in_i [5] $end
$var wire 1 g8 in_i [4] $end
$var wire 1 h8 in_i [3] $end
$var wire 1 i8 in_i [2] $end
$var wire 1 j8 in_i [1] $end
$var wire 1 k8 in_i [0] $end
$var reg 6 2@ result_o [5:0] $end
$var reg 32 3@ cnt_l1 [31:0] $end
$var reg 24 4@ cnt_l2 [23:0] $end
$var reg 16 5@ cnt_l3 [15:0] $end
$var reg 10 6@ cnt_l4 [9:0] $end

$scope begin gen_cnt_l4[1] $end
$var parameter 32 7@ p $end
$upscope $end

$scope begin gen_cnt_l4[0] $end
$var parameter 32 8@ p $end
$upscope $end

$scope begin gen_cnt_l3[3] $end
$var parameter 32 9@ n $end
$upscope $end

$scope begin gen_cnt_l3[2] $end
$var parameter 32 :@ n $end
$upscope $end

$scope begin gen_cnt_l3[1] $end
$var parameter 32 ;@ n $end
$upscope $end

$scope begin gen_cnt_l3[0] $end
$var parameter 32 <@ n $end
$upscope $end

$scope begin gen_cnt_l2[7] $end
$var parameter 32 =@ m $end
$upscope $end

$scope begin gen_cnt_l2[6] $end
$var parameter 32 >@ m $end
$upscope $end

$scope begin gen_cnt_l2[5] $end
$var parameter 32 ?@ m $end
$upscope $end

$scope begin gen_cnt_l2[4] $end
$var parameter 32 @@ m $end
$upscope $end

$scope begin gen_cnt_l2[3] $end
$var parameter 32 A@ m $end
$upscope $end

$scope begin gen_cnt_l2[2] $end
$var parameter 32 B@ m $end
$upscope $end

$scope begin gen_cnt_l2[1] $end
$var parameter 32 C@ m $end
$upscope $end

$scope begin gen_cnt_l2[0] $end
$var parameter 32 D@ m $end
$upscope $end

$scope begin gen_cnt_l1[15] $end
$var parameter 32 E@ l $end
$upscope $end

$scope begin gen_cnt_l1[14] $end
$var parameter 32 F@ l $end
$upscope $end

$scope begin gen_cnt_l1[13] $end
$var parameter 32 G@ l $end
$upscope $end

$scope begin gen_cnt_l1[12] $end
$var parameter 32 H@ l $end
$upscope $end

$scope begin gen_cnt_l1[11] $end
$var parameter 32 I@ l $end
$upscope $end

$scope begin gen_cnt_l1[10] $end
$var parameter 32 J@ l $end
$upscope $end

$scope begin gen_cnt_l1[9] $end
$var parameter 32 K@ l $end
$upscope $end

$scope begin gen_cnt_l1[8] $end
$var parameter 32 L@ l $end
$upscope $end

$scope begin gen_cnt_l1[7] $end
$var parameter 32 M@ l $end
$upscope $end

$scope begin gen_cnt_l1[6] $end
$var parameter 32 N@ l $end
$upscope $end

$scope begin gen_cnt_l1[5] $end
$var parameter 32 O@ l $end
$upscope $end

$scope begin gen_cnt_l1[4] $end
$var parameter 32 P@ l $end
$upscope $end

$scope begin gen_cnt_l1[3] $end
$var parameter 32 Q@ l $end
$upscope $end

$scope begin gen_cnt_l1[2] $end
$var parameter 32 R@ l $end
$upscope $end

$scope begin gen_cnt_l1[1] $end
$var parameter 32 S@ l $end
$upscope $end

$scope begin gen_cnt_l1[0] $end
$var parameter 32 T@ l $end
$upscope $end
$upscope $end

$scope module ff_one_i $end
$var parameter 32 U@ LEN $end
$var parameter 32 V@ NUM_LEVELS $end
$var wire 1 W@ in_i [31] $end
$var wire 1 X@ in_i [30] $end
$var wire 1 Y@ in_i [29] $end
$var wire 1 Z@ in_i [28] $end
$var wire 1 [@ in_i [27] $end
$var wire 1 \@ in_i [26] $end
$var wire 1 ]@ in_i [25] $end
$var wire 1 ^@ in_i [24] $end
$var wire 1 _@ in_i [23] $end
$var wire 1 `@ in_i [22] $end
$var wire 1 a@ in_i [21] $end
$var wire 1 b@ in_i [20] $end
$var wire 1 c@ in_i [19] $end
$var wire 1 d@ in_i [18] $end
$var wire 1 e@ in_i [17] $end
$var wire 1 f@ in_i [16] $end
$var wire 1 g@ in_i [15] $end
$var wire 1 h@ in_i [14] $end
$var wire 1 i@ in_i [13] $end
$var wire 1 j@ in_i [12] $end
$var wire 1 k@ in_i [11] $end
$var wire 1 l@ in_i [10] $end
$var wire 1 m@ in_i [9] $end
$var wire 1 n@ in_i [8] $end
$var wire 1 o@ in_i [7] $end
$var wire 1 p@ in_i [6] $end
$var wire 1 q@ in_i [5] $end
$var wire 1 r@ in_i [4] $end
$var wire 1 s@ in_i [3] $end
$var wire 1 t@ in_i [2] $end
$var wire 1 u@ in_i [1] $end
$var wire 1 v@ in_i [0] $end
$var reg 5 w@ first_one_o [4:0] $end
$var reg 1 x@ no_ones_o $end
$var reg 160 y@ index_lut [159:0] $end
$var reg 32 z@ sel_nodes [31:0] $end
$var reg 160 {@ index_nodes [159:0] $end

$scope begin gen_tree[4] $end
$var parameter 32 |@ level $end

$scope begin genblk1 $end
$upscope $end

$scope begin gen_root_level $end

$scope begin gen_node[15] $end
$var parameter 32 }@ k $end

$scope begin genblk3 $end
$upscope $end

$scope begin genblk2 $end
$upscope $end

$scope begin gen_two $end
$upscope $end
$upscope $end

$scope begin gen_node[14] $end
$var parameter 32 ~@ k $end

$scope begin genblk3 $end
$upscope $end

$scope begin genblk2 $end
$upscope $end

$scope begin gen_two $end
$upscope $end
$upscope $end

$scope begin gen_node[13] $end
$var parameter 32 !A k $end

$scope begin genblk3 $end
$upscope $end

$scope begin genblk2 $end
$upscope $end

$scope begin gen_two $end
$upscope $end
$upscope $end

$scope begin gen_node[12] $end
$var parameter 32 "A k $end

$scope begin genblk3 $end
$upscope $end

$scope begin genblk2 $end
$upscope $end

$scope begin gen_two $end
$upscope $end
$upscope $end

$scope begin gen_node[11] $end
$var parameter 32 #A k $end

$scope begin genblk3 $end
$upscope $end

$scope begin genblk2 $end
$upscope $end

$scope begin gen_two $end
$upscope $end
$upscope $end

$scope begin gen_node[10] $end
$var parameter 32 $A k $end

$scope begin genblk3 $end
$upscope $end

$scope begin genblk2 $end
$upscope $end

$scope begin gen_two $end
$upscope $end
$upscope $end

$scope begin gen_node[9] $end
$var parameter 32 %A k $end

$scope begin genblk3 $end
$upscope $end

$scope begin genblk2 $end
$upscope $end

$scope begin gen_two $end
$upscope $end
$upscope $end

$scope begin gen_node[8] $end
$var parameter 32 &A k $end

$scope begin genblk3 $end
$upscope $end

$scope begin genblk2 $end
$upscope $end

$scope begin gen_two $end
$upscope $end
$upscope $end

$scope begin gen_node[7] $end
$var parameter 32 'A k $end

$scope begin genblk3 $end
$upscope $end

$scope begin genblk2 $end
$upscope $end

$scope begin gen_two $end
$upscope $end
$upscope $end

$scope begin gen_node[6] $end
$var parameter 32 (A k $end

$scope begin genblk3 $end
$upscope $end

$scope begin genblk2 $end
$upscope $end

$scope begin gen_two $end
$upscope $end
$upscope $end

$scope begin gen_node[5] $end
$var parameter 32 )A k $end

$scope begin genblk3 $end
$upscope $end

$scope begin genblk2 $end
$upscope $end

$scope begin gen_two $end
$upscope $end
$upscope $end

$scope begin gen_node[4] $end
$var parameter 32 *A k $end

$scope begin genblk3 $end
$upscope $end

$scope begin genblk2 $end
$upscope $end

$scope begin gen_two $end
$upscope $end
$upscope $end

$scope begin gen_node[3] $end
$var parameter 32 +A k $end

$scope begin genblk3 $end
$upscope $end

$scope begin genblk2 $end
$upscope $end

$scope begin gen_two $end
$upscope $end
$upscope $end

$scope begin gen_node[2] $end
$var parameter 32 ,A k $end

$scope begin genblk3 $end
$upscope $end

$scope begin genblk2 $end
$upscope $end

$scope begin gen_two $end
$upscope $end
$upscope $end

$scope begin gen_node[1] $end
$var parameter 32 -A k $end

$scope begin genblk3 $end
$upscope $end

$scope begin genblk2 $end
$upscope $end

$scope begin gen_two $end
$upscope $end
$upscope $end

$scope begin gen_node[0] $end
$var parameter 32 .A k $end

$scope begin genblk3 $end
$upscope $end

$scope begin genblk2 $end
$upscope $end

$scope begin gen_two $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end

$scope begin gen_tree[3] $end
$var parameter 32 /A level $end

$scope begin genblk2 $end
$upscope $end

$scope begin gen_non_root_level $end

$scope begin gen_node[7] $end
$var parameter 32 0A l $end
$upscope $end

$scope begin gen_node[6] $end
$var parameter 32 1A l $end
$upscope $end

$scope begin gen_node[5] $end
$var parameter 32 2A l $end
$upscope $end

$scope begin gen_node[4] $end
$var parameter 32 3A l $end
$upscope $end

$scope begin gen_node[3] $end
$var parameter 32 4A l $end
$upscope $end

$scope begin gen_node[2] $end
$var parameter 32 5A l $end
$upscope $end

$scope begin gen_node[1] $end
$var parameter 32 6A l $end
$upscope $end

$scope begin gen_node[0] $end
$var parameter 32 7A l $end
$upscope $end
$upscope $end
$upscope $end

$scope begin gen_tree[2] $end
$var parameter 32 8A level $end

$scope begin genblk2 $end
$upscope $end

$scope begin gen_non_root_level $end

$scope begin gen_node[3] $end
$var parameter 32 9A l $end
$upscope $end

$scope begin gen_node[2] $end
$var parameter 32 :A l $end
$upscope $end

$scope begin gen_node[1] $end
$var parameter 32 ;A l $end
$upscope $end

$scope begin gen_node[0] $end
$var parameter 32 <A l $end
$upscope $end
$upscope $end
$upscope $end

$scope begin gen_tree[1] $end
$var parameter 32 =A level $end

$scope begin genblk2 $end
$upscope $end

$scope begin gen_non_root_level $end

$scope begin gen_node[1] $end
$var parameter 32 >A l $end
$upscope $end

$scope begin gen_node[0] $end
$var parameter 32 ?A l $end
$upscope $end
$upscope $end
$upscope $end

$scope begin gen_tree[0] $end
$var parameter 32 @A level $end

$scope begin genblk2 $end
$upscope $end

$scope begin gen_non_root_level $end

$scope begin gen_node[0] $end
$var parameter 32 AA l $end
$upscope $end
$upscope $end
$upscope $end

$scope begin gen_index_lut[31] $end
$var parameter 32 BA j $end
$upscope $end

$scope begin gen_index_lut[30] $end
$var parameter 32 CA j $end
$upscope $end

$scope begin gen_index_lut[29] $end
$var parameter 32 DA j $end
$upscope $end

$scope begin gen_index_lut[28] $end
$var parameter 32 EA j $end
$upscope $end

$scope begin gen_index_lut[27] $end
$var parameter 32 FA j $end
$upscope $end

$scope begin gen_index_lut[26] $end
$var parameter 32 GA j $end
$upscope $end

$scope begin gen_index_lut[25] $end
$var parameter 32 HA j $end
$upscope $end

$scope begin gen_index_lut[24] $end
$var parameter 32 IA j $end
$upscope $end

$scope begin gen_index_lut[23] $end
$var parameter 32 JA j $end
$upscope $end

$scope begin gen_index_lut[22] $end
$var parameter 32 KA j $end
$upscope $end

$scope begin gen_index_lut[21] $end
$var parameter 32 LA j $end
$upscope $end

$scope begin gen_index_lut[20] $end
$var parameter 32 MA j $end
$upscope $end

$scope begin gen_index_lut[19] $end
$var parameter 32 NA j $end
$upscope $end

$scope begin gen_index_lut[18] $end
$var parameter 32 OA j $end
$upscope $end

$scope begin gen_index_lut[17] $end
$var parameter 32 PA j $end
$upscope $end

$scope begin gen_index_lut[16] $end
$var parameter 32 QA j $end
$upscope $end

$scope begin gen_index_lut[15] $end
$var parameter 32 RA j $end
$upscope $end

$scope begin gen_index_lut[14] $end
$var parameter 32 SA j $end
$upscope $end

$scope begin gen_index_lut[13] $end
$var parameter 32 TA j $end
$upscope $end

$scope begin gen_index_lut[12] $end
$var parameter 32 UA j $end
$upscope $end

$scope begin gen_index_lut[11] $end
$var parameter 32 VA j $end
$upscope $end

$scope begin gen_index_lut[10] $end
$var parameter 32 WA j $end
$upscope $end

$scope begin gen_index_lut[9] $end
$var parameter 32 XA j $end
$upscope $end

$scope begin gen_index_lut[8] $end
$var parameter 32 YA j $end
$upscope $end

$scope begin gen_index_lut[7] $end
$var parameter 32 ZA j $end
$upscope $end

$scope begin gen_index_lut[6] $end
$var parameter 32 [A j $end
$upscope $end

$scope begin gen_index_lut[5] $end
$var parameter 32 \A j $end
$upscope $end

$scope begin gen_index_lut[4] $end
$var parameter 32 ]A j $end
$upscope $end

$scope begin gen_index_lut[3] $end
$var parameter 32 ^A j $end
$upscope $end

$scope begin gen_index_lut[2] $end
$var parameter 32 _A j $end
$upscope $end

$scope begin gen_index_lut[1] $end
$var parameter 32 `A j $end
$upscope $end

$scope begin gen_index_lut[0] $end
$var parameter 32 aA j $end
$upscope $end
$upscope $end

$scope module alu_div_i $end
$var parameter 32 bA C_WIDTH $end
$var parameter 32 cA C_LOG_WIDTH $end
$var wire 1 D8 Clk_CI $end
$var wire 1 * Rst_RBI $end
$var wire 1 l8 OpA_DI [31] $end
$var wire 1 m8 OpA_DI [30] $end
$var wire 1 n8 OpA_DI [29] $end
$var wire 1 o8 OpA_DI [28] $end
$var wire 1 p8 OpA_DI [27] $end
$var wire 1 q8 OpA_DI [26] $end
$var wire 1 r8 OpA_DI [25] $end
$var wire 1 s8 OpA_DI [24] $end
$var wire 1 t8 OpA_DI [23] $end
$var wire 1 u8 OpA_DI [22] $end
$var wire 1 v8 OpA_DI [21] $end
$var wire 1 w8 OpA_DI [20] $end
$var wire 1 x8 OpA_DI [19] $end
$var wire 1 y8 OpA_DI [18] $end
$var wire 1 z8 OpA_DI [17] $end
$var wire 1 {8 OpA_DI [16] $end
$var wire 1 |8 OpA_DI [15] $end
$var wire 1 }8 OpA_DI [14] $end
$var wire 1 ~8 OpA_DI [13] $end
$var wire 1 !9 OpA_DI [12] $end
$var wire 1 "9 OpA_DI [11] $end
$var wire 1 #9 OpA_DI [10] $end
$var wire 1 $9 OpA_DI [9] $end
$var wire 1 %9 OpA_DI [8] $end
$var wire 1 &9 OpA_DI [7] $end
$var wire 1 '9 OpA_DI [6] $end
$var wire 1 (9 OpA_DI [5] $end
$var wire 1 )9 OpA_DI [4] $end
$var wire 1 *9 OpA_DI [3] $end
$var wire 1 +9 OpA_DI [2] $end
$var wire 1 ,9 OpA_DI [1] $end
$var wire 1 -9 OpA_DI [0] $end
$var wire 1 dA OpB_DI [31] $end
$var wire 1 eA OpB_DI [30] $end
$var wire 1 fA OpB_DI [29] $end
$var wire 1 gA OpB_DI [28] $end
$var wire 1 hA OpB_DI [27] $end
$var wire 1 iA OpB_DI [26] $end
$var wire 1 jA OpB_DI [25] $end
$var wire 1 kA OpB_DI [24] $end
$var wire 1 lA OpB_DI [23] $end
$var wire 1 mA OpB_DI [22] $end
$var wire 1 nA OpB_DI [21] $end
$var wire 1 oA OpB_DI [20] $end
$var wire 1 pA OpB_DI [19] $end
$var wire 1 qA OpB_DI [18] $end
$var wire 1 rA OpB_DI [17] $end
$var wire 1 sA OpB_DI [16] $end
$var wire 1 tA OpB_DI [15] $end
$var wire 1 uA OpB_DI [14] $end
$var wire 1 vA OpB_DI [13] $end
$var wire 1 wA OpB_DI [12] $end
$var wire 1 xA OpB_DI [11] $end
$var wire 1 yA OpB_DI [10] $end
$var wire 1 zA OpB_DI [9] $end
$var wire 1 {A OpB_DI [8] $end
$var wire 1 |A OpB_DI [7] $end
$var wire 1 }A OpB_DI [6] $end
$var wire 1 ~A OpB_DI [5] $end
$var wire 1 !B OpB_DI [4] $end
$var wire 1 "B OpB_DI [3] $end
$var wire 1 #B OpB_DI [2] $end
$var wire 1 $B OpB_DI [1] $end
$var wire 1 %B OpB_DI [0] $end
$var wire 1 &B OpBShift_DI [5] $end
$var wire 1 'B OpBShift_DI [4] $end
$var wire 1 (B OpBShift_DI [3] $end
$var wire 1 )B OpBShift_DI [2] $end
$var wire 1 *B OpBShift_DI [1] $end
$var wire 1 +B OpBShift_DI [0] $end
$var wire 1 ,B OpBIsZero_SI $end
$var wire 1 -B OpBSign_SI $end
$var wire 1 J8 OpCode_SI [1] $end
$var wire 1 K8 OpCode_SI [0] $end
$var wire 1 .B InVld_SI $end
$var wire 1 _= OutRdy_SI $end
$var reg 1 /B OutVld_SO $end
$var reg 32 0B Res_DO [31:0] $end
$var reg 32 1B ResReg_DP [31:0] $end
$var reg 32 2B ResReg_DN [31:0] $end
$var reg 32 3B ResReg_DP_rev [31:0] $end
$var reg 32 4B AReg_DP [31:0] $end
$var reg 32 5B AReg_DN [31:0] $end
$var reg 32 6B BReg_DP [31:0] $end
$var reg 32 7B BReg_DN [31:0] $end
$var reg 1 8B RemSel_SN $end
$var reg 1 9B RemSel_SP $end
$var reg 1 :B CompInv_SN $end
$var reg 1 ;B CompInv_SP $end
$var reg 1 <B ResInv_SN $end
$var reg 1 =B ResInv_SP $end
$var reg 32 >B AddMux_D [31:0] $end
$var reg 32 ?B AddOut_D [31:0] $end
$var reg 32 @B AddTmp_D [31:0] $end
$var reg 32 AB BMux_D [31:0] $end
$var reg 32 BB OutMux_D [31:0] $end
$var reg 6 CB Cnt_DP [5:0] $end
$var reg 6 DB Cnt_DN [5:0] $end
$var reg 1 EB CntZero_S $end
$var reg 1 FB ARegEn_S $end
$var reg 1 GB BRegEn_S $end
$var reg 1 HB ResRegEn_S $end
$var reg 1 IB ABComp_S $end
$var reg 1 JB PmSel_S $end
$var reg 1 KB LoadEn_S $end
$var reg 2 LB State_SN [1:0] $end
$var reg 2 MB State_SP [1:0] $end

$scope begin gen_bit_swapping[31] $end
$var parameter 32 NB index $end
$upscope $end

$scope begin gen_bit_swapping[30] $end
$var parameter 32 OB index $end
$upscope $end

$scope begin gen_bit_swapping[29] $end
$var parameter 32 PB index $end
$upscope $end

$scope begin gen_bit_swapping[28] $end
$var parameter 32 QB index $end
$upscope $end

$scope begin gen_bit_swapping[27] $end
$var parameter 32 RB index $end
$upscope $end

$scope begin gen_bit_swapping[26] $end
$var parameter 32 SB index $end
$upscope $end

$scope begin gen_bit_swapping[25] $end
$var parameter 32 TB index $end
$upscope $end

$scope begin gen_bit_swapping[24] $end
$var parameter 32 UB index $end
$upscope $end

$scope begin gen_bit_swapping[23] $end
$var parameter 32 VB index $end
$upscope $end

$scope begin gen_bit_swapping[22] $end
$var parameter 32 WB index $end
$upscope $end

$scope begin gen_bit_swapping[21] $end
$var parameter 32 XB index $end
$upscope $end

$scope begin gen_bit_swapping[20] $end
$var parameter 32 YB index $end
$upscope $end

$scope begin gen_bit_swapping[19] $end
$var parameter 32 ZB index $end
$upscope $end

$scope begin gen_bit_swapping[18] $end
$var parameter 32 [B index $end
$upscope $end

$scope begin gen_bit_swapping[17] $end
$var parameter 32 \B index $end
$upscope $end

$scope begin gen_bit_swapping[16] $end
$var parameter 32 ]B index $end
$upscope $end

$scope begin gen_bit_swapping[15] $end
$var parameter 32 ^B index $end
$upscope $end

$scope begin gen_bit_swapping[14] $end
$var parameter 32 _B index $end
$upscope $end

$scope begin gen_bit_swapping[13] $end
$var parameter 32 `B index $end
$upscope $end

$scope begin gen_bit_swapping[12] $end
$var parameter 32 aB index $end
$upscope $end

$scope begin gen_bit_swapping[11] $end
$var parameter 32 bB index $end
$upscope $end

$scope begin gen_bit_swapping[10] $end
$var parameter 32 cB index $end
$upscope $end

$scope begin gen_bit_swapping[9] $end
$var parameter 32 dB index $end
$upscope $end

$scope begin gen_bit_swapping[8] $end
$var parameter 32 eB index $end
$upscope $end

$scope begin gen_bit_swapping[7] $end
$var parameter 32 fB index $end
$upscope $end

$scope begin gen_bit_swapping[6] $end
$var parameter 32 gB index $end
$upscope $end

$scope begin gen_bit_swapping[5] $end
$var parameter 32 hB index $end
$upscope $end

$scope begin gen_bit_swapping[4] $end
$var parameter 32 iB index $end
$upscope $end

$scope begin gen_bit_swapping[3] $end
$var parameter 32 jB index $end
$upscope $end

$scope begin gen_bit_swapping[2] $end
$var parameter 32 kB index $end
$upscope $end

$scope begin gen_bit_swapping[1] $end
$var parameter 32 lB index $end
$upscope $end

$scope begin gen_bit_swapping[0] $end
$var parameter 32 mB index $end
$upscope $end

$scope begin p_fsm $end
$upscope $end

$scope begin p_regs $end
$upscope $end
$upscope $end
$upscope $end

$scope module mult_i $end
$var wire 1 D8 clk $end
$var wire 1 * rst_n $end
$var wire 1 f: enable_i $end
$var wire 1 a9 operator_i [2] $end
$var wire 1 b9 operator_i [1] $end
$var wire 1 c9 operator_i [0] $end
$var wire 1 g: short_subword_i $end
$var wire 1 h: short_signed_i [1] $end
$var wire 1 i: short_signed_i [0] $end
$var wire 1 d9 op_a_i [31] $end
$var wire 1 e9 op_a_i [30] $end
$var wire 1 f9 op_a_i [29] $end
$var wire 1 g9 op_a_i [28] $end
$var wire 1 h9 op_a_i [27] $end
$var wire 1 i9 op_a_i [26] $end
$var wire 1 j9 op_a_i [25] $end
$var wire 1 k9 op_a_i [24] $end
$var wire 1 l9 op_a_i [23] $end
$var wire 1 m9 op_a_i [22] $end
$var wire 1 n9 op_a_i [21] $end
$var wire 1 o9 op_a_i [20] $end
$var wire 1 p9 op_a_i [19] $end
$var wire 1 q9 op_a_i [18] $end
$var wire 1 r9 op_a_i [17] $end
$var wire 1 s9 op_a_i [16] $end
$var wire 1 t9 op_a_i [15] $end
$var wire 1 u9 op_a_i [14] $end
$var wire 1 v9 op_a_i [13] $end
$var wire 1 w9 op_a_i [12] $end
$var wire 1 x9 op_a_i [11] $end
$var wire 1 y9 op_a_i [10] $end
$var wire 1 z9 op_a_i [9] $end
$var wire 1 {9 op_a_i [8] $end
$var wire 1 |9 op_a_i [7] $end
$var wire 1 }9 op_a_i [6] $end
$var wire 1 ~9 op_a_i [5] $end
$var wire 1 !: op_a_i [4] $end
$var wire 1 ": op_a_i [3] $end
$var wire 1 #: op_a_i [2] $end
$var wire 1 $: op_a_i [1] $end
$var wire 1 %: op_a_i [0] $end
$var wire 1 &: op_b_i [31] $end
$var wire 1 ': op_b_i [30] $end
$var wire 1 (: op_b_i [29] $end
$var wire 1 ): op_b_i [28] $end
$var wire 1 *: op_b_i [27] $end
$var wire 1 +: op_b_i [26] $end
$var wire 1 ,: op_b_i [25] $end
$var wire 1 -: op_b_i [24] $end
$var wire 1 .: op_b_i [23] $end
$var wire 1 /: op_b_i [22] $end
$var wire 1 0: op_b_i [21] $end
$var wire 1 1: op_b_i [20] $end
$var wire 1 2: op_b_i [19] $end
$var wire 1 3: op_b_i [18] $end
$var wire 1 4: op_b_i [17] $end
$var wire 1 5: op_b_i [16] $end
$var wire 1 6: op_b_i [15] $end
$var wire 1 7: op_b_i [14] $end
$var wire 1 8: op_b_i [13] $end
$var wire 1 9: op_b_i [12] $end
$var wire 1 :: op_b_i [11] $end
$var wire 1 ;: op_b_i [10] $end
$var wire 1 <: op_b_i [9] $end
$var wire 1 =: op_b_i [8] $end
$var wire 1 >: op_b_i [7] $end
$var wire 1 ?: op_b_i [6] $end
$var wire 1 @: op_b_i [5] $end
$var wire 1 A: op_b_i [4] $end
$var wire 1 B: op_b_i [3] $end
$var wire 1 C: op_b_i [2] $end
$var wire 1 D: op_b_i [1] $end
$var wire 1 E: op_b_i [0] $end
$var wire 1 F: op_c_i [31] $end
$var wire 1 G: op_c_i [30] $end
$var wire 1 H: op_c_i [29] $end
$var wire 1 I: op_c_i [28] $end
$var wire 1 J: op_c_i [27] $end
$var wire 1 K: op_c_i [26] $end
$var wire 1 L: op_c_i [25] $end
$var wire 1 M: op_c_i [24] $end
$var wire 1 N: op_c_i [23] $end
$var wire 1 O: op_c_i [22] $end
$var wire 1 P: op_c_i [21] $end
$var wire 1 Q: op_c_i [20] $end
$var wire 1 R: op_c_i [19] $end
$var wire 1 S: op_c_i [18] $end
$var wire 1 T: op_c_i [17] $end
$var wire 1 U: op_c_i [16] $end
$var wire 1 V: op_c_i [15] $end
$var wire 1 W: op_c_i [14] $end
$var wire 1 X: op_c_i [13] $end
$var wire 1 Y: op_c_i [12] $end
$var wire 1 Z: op_c_i [11] $end
$var wire 1 [: op_c_i [10] $end
$var wire 1 \: op_c_i [9] $end
$var wire 1 ]: op_c_i [8] $end
$var wire 1 ^: op_c_i [7] $end
$var wire 1 _: op_c_i [6] $end
$var wire 1 `: op_c_i [5] $end
$var wire 1 a: op_c_i [4] $end
$var wire 1 b: op_c_i [3] $end
$var wire 1 c: op_c_i [2] $end
$var wire 1 d: op_c_i [1] $end
$var wire 1 e: op_c_i [0] $end
$var wire 1 j: imm_i [4] $end
$var wire 1 k: imm_i [3] $end
$var wire 1 l: imm_i [2] $end
$var wire 1 m: imm_i [1] $end
$var wire 1 n: imm_i [0] $end
$var wire 1 q; dot_signed_i [1] $end
$var wire 1 r; dot_signed_i [0] $end
$var wire 1 o: dot_op_a_i [31] $end
$var wire 1 p: dot_op_a_i [30] $end
$var wire 1 q: dot_op_a_i [29] $end
$var wire 1 r: dot_op_a_i [28] $end
$var wire 1 s: dot_op_a_i [27] $end
$var wire 1 t: dot_op_a_i [26] $end
$var wire 1 u: dot_op_a_i [25] $end
$var wire 1 v: dot_op_a_i [24] $end
$var wire 1 w: dot_op_a_i [23] $end
$var wire 1 x: dot_op_a_i [22] $end
$var wire 1 y: dot_op_a_i [21] $end
$var wire 1 z: dot_op_a_i [20] $end
$var wire 1 {: dot_op_a_i [19] $end
$var wire 1 |: dot_op_a_i [18] $end
$var wire 1 }: dot_op_a_i [17] $end
$var wire 1 ~: dot_op_a_i [16] $end
$var wire 1 !; dot_op_a_i [15] $end
$var wire 1 "; dot_op_a_i [14] $end
$var wire 1 #; dot_op_a_i [13] $end
$var wire 1 $; dot_op_a_i [12] $end
$var wire 1 %; dot_op_a_i [11] $end
$var wire 1 &; dot_op_a_i [10] $end
$var wire 1 '; dot_op_a_i [9] $end
$var wire 1 (; dot_op_a_i [8] $end
$var wire 1 ); dot_op_a_i [7] $end
$var wire 1 *; dot_op_a_i [6] $end
$var wire 1 +; dot_op_a_i [5] $end
$var wire 1 ,; dot_op_a_i [4] $end
$var wire 1 -; dot_op_a_i [3] $end
$var wire 1 .; dot_op_a_i [2] $end
$var wire 1 /; dot_op_a_i [1] $end
$var wire 1 0; dot_op_a_i [0] $end
$var wire 1 1; dot_op_b_i [31] $end
$var wire 1 2; dot_op_b_i [30] $end
$var wire 1 3; dot_op_b_i [29] $end
$var wire 1 4; dot_op_b_i [28] $end
$var wire 1 5; dot_op_b_i [27] $end
$var wire 1 6; dot_op_b_i [26] $end
$var wire 1 7; dot_op_b_i [25] $end
$var wire 1 8; dot_op_b_i [24] $end
$var wire 1 9; dot_op_b_i [23] $end
$var wire 1 :; dot_op_b_i [22] $end
$var wire 1 ;; dot_op_b_i [21] $end
$var wire 1 <; dot_op_b_i [20] $end
$var wire 1 =; dot_op_b_i [19] $end
$var wire 1 >; dot_op_b_i [18] $end
$var wire 1 ?; dot_op_b_i [17] $end
$var wire 1 @; dot_op_b_i [16] $end
$var wire 1 A; dot_op_b_i [15] $end
$var wire 1 B; dot_op_b_i [14] $end
$var wire 1 C; dot_op_b_i [13] $end
$var wire 1 D; dot_op_b_i [12] $end
$var wire 1 E; dot_op_b_i [11] $end
$var wire 1 F; dot_op_b_i [10] $end
$var wire 1 G; dot_op_b_i [9] $end
$var wire 1 H; dot_op_b_i [8] $end
$var wire 1 I; dot_op_b_i [7] $end
$var wire 1 J; dot_op_b_i [6] $end
$var wire 1 K; dot_op_b_i [5] $end
$var wire 1 L; dot_op_b_i [4] $end
$var wire 1 M; dot_op_b_i [3] $end
$var wire 1 N; dot_op_b_i [2] $end
$var wire 1 O; dot_op_b_i [1] $end
$var wire 1 P; dot_op_b_i [0] $end
$var wire 1 Q; dot_op_c_i [31] $end
$var wire 1 R; dot_op_c_i [30] $end
$var wire 1 S; dot_op_c_i [29] $end
$var wire 1 T; dot_op_c_i [28] $end
$var wire 1 U; dot_op_c_i [27] $end
$var wire 1 V; dot_op_c_i [26] $end
$var wire 1 W; dot_op_c_i [25] $end
$var wire 1 X; dot_op_c_i [24] $end
$var wire 1 Y; dot_op_c_i [23] $end
$var wire 1 Z; dot_op_c_i [22] $end
$var wire 1 [; dot_op_c_i [21] $end
$var wire 1 \; dot_op_c_i [20] $end
$var wire 1 ]; dot_op_c_i [19] $end
$var wire 1 ^; dot_op_c_i [18] $end
$var wire 1 _; dot_op_c_i [17] $end
$var wire 1 `; dot_op_c_i [16] $end
$var wire 1 a; dot_op_c_i [15] $end
$var wire 1 b; dot_op_c_i [14] $end
$var wire 1 c; dot_op_c_i [13] $end
$var wire 1 d; dot_op_c_i [12] $end
$var wire 1 e; dot_op_c_i [11] $end
$var wire 1 f; dot_op_c_i [10] $end
$var wire 1 g; dot_op_c_i [9] $end
$var wire 1 h; dot_op_c_i [8] $end
$var wire 1 i; dot_op_c_i [7] $end
$var wire 1 j; dot_op_c_i [6] $end
$var wire 1 k; dot_op_c_i [5] $end
$var wire 1 l; dot_op_c_i [4] $end
$var wire 1 m; dot_op_c_i [3] $end
$var wire 1 n; dot_op_c_i [2] $end
$var wire 1 o; dot_op_c_i [1] $end
$var wire 1 p; dot_op_c_i [0] $end
$var wire 1 s; is_clpx_i $end
$var wire 1 t; clpx_shift_i [1] $end
$var wire 1 u; clpx_shift_i [0] $end
$var wire 1 v; clpx_img_i $end
$var reg 32 nB result_o [31:0] $end
$var reg 1 oB multicycle_o $end
$var reg 1 pB mulh_active_o $end
$var reg 1 qB ready_o $end
$var wire 1 rB ex_ready_i $end
$var reg 17 sB short_op_a [16:0] $end
$var reg 17 tB short_op_b [16:0] $end
$var reg 33 uB short_op_c [32:0] $end
$var reg 34 vB short_mul [33:0] $end
$var reg 34 wB short_mac [33:0] $end
$var reg 32 xB short_round [31:0] $end
$var reg 32 yB short_round_tmp [31:0] $end
$var reg 34 zB short_result [33:0] $end
$var reg 1 {B short_mac_msb1 $end
$var reg 1 |B short_mac_msb0 $end
$var reg 5 }B short_imm [4:0] $end
$var reg 2 ~B short_subword [1:0] $end
$var reg 2 !C short_signed [1:0] $end
$var reg 1 "C short_shift_arith $end
$var reg 5 #C mulh_imm [4:0] $end
$var reg 2 $C mulh_subword [1:0] $end
$var reg 2 %C mulh_signed [1:0] $end
$var reg 1 &C mulh_shift_arith $end
$var reg 1 'C mulh_carry_q $end
$var reg 1 (C mulh_save $end
$var reg 1 )C mulh_clearcarry $end
$var reg 1 *C mulh_ready $end
$var reg 3 +C mulh_CS [2:0] $end
$var reg 3 ,C mulh_NS [2:0] $end
$var reg 32 -C int_op_a_msu [31:0] $end
$var reg 32 .C int_op_b_msu [31:0] $end
$var reg 32 /C int_result [31:0] $end
$var reg 1 0C int_is_msu $end
$var reg 32 1C dot_char_result [31:0] $end
$var reg 33 2C dot_short_result [32:0] $end
$var reg 32 3C accumulator [31:0] $end
$var reg 16 4C clpx_shift_result [15:0] $end
$var reg 36 5C dot_char_op_a [35:0] $end
$var reg 36 6C dot_char_op_b [35:0] $end
$var reg 72 7C dot_char_mul [71:0] $end
$var reg 34 8C dot_short_op_a [33:0] $end
$var reg 34 9C dot_short_op_b [33:0] $end
$var reg 68 :C dot_short_mul [67:0] $end
$var reg 17 ;C dot_short_op_a_1_neg [16:0] $end
$var reg 32 <C dot_short_op_b_ext [31:0] $end
$upscope $end

$scope begin gen_no_apu $end
$upscope $end
$upscope $end

$scope module load_store_unit_i $end
$var parameter 32 =C PULP_OBI $end
$var parameter 32 >C DEPTH $end
$var wire 1 ?C clk $end
$var wire 1 * rst_n $end
$var reg 1 @C data_req_o $end
$var wire 1 AC data_gnt_i $end
$var wire 1 7" data_rvalid_i $end
$var wire 1 BC data_err_i $end
$var wire 1 CC data_err_pmp_i $end
$var reg 32 DC data_addr_o [31:0] $end
$var reg 1 EC data_we_o $end
$var reg 4 FC data_be_o [3:0] $end
$var reg 32 GC data_wdata_o [31:0] $end
$var wire 1 <" data_rdata_i [31] $end
$var wire 1 =" data_rdata_i [30] $end
$var wire 1 >" data_rdata_i [29] $end
$var wire 1 ?" data_rdata_i [28] $end
$var wire 1 @" data_rdata_i [27] $end
$var wire 1 A" data_rdata_i [26] $end
$var wire 1 B" data_rdata_i [25] $end
$var wire 1 C" data_rdata_i [24] $end
$var wire 1 D" data_rdata_i [23] $end
$var wire 1 E" data_rdata_i [22] $end
$var wire 1 F" data_rdata_i [21] $end
$var wire 1 G" data_rdata_i [20] $end
$var wire 1 H" data_rdata_i [19] $end
$var wire 1 I" data_rdata_i [18] $end
$var wire 1 J" data_rdata_i [17] $end
$var wire 1 K" data_rdata_i [16] $end
$var wire 1 L" data_rdata_i [15] $end
$var wire 1 M" data_rdata_i [14] $end
$var wire 1 N" data_rdata_i [13] $end
$var wire 1 O" data_rdata_i [12] $end
$var wire 1 P" data_rdata_i [11] $end
$var wire 1 Q" data_rdata_i [10] $end
$var wire 1 R" data_rdata_i [9] $end
$var wire 1 S" data_rdata_i [8] $end
$var wire 1 T" data_rdata_i [7] $end
$var wire 1 U" data_rdata_i [6] $end
$var wire 1 V" data_rdata_i [5] $end
$var wire 1 W" data_rdata_i [4] $end
$var wire 1 X" data_rdata_i [3] $end
$var wire 1 Y" data_rdata_i [2] $end
$var wire 1 Z" data_rdata_i [1] $end
$var wire 1 [" data_rdata_i [0] $end
$var wire 1 HC data_we_ex_i $end
$var wire 1 IC data_type_ex_i [1] $end
$var wire 1 JC data_type_ex_i [0] $end
$var wire 1 KC data_wdata_ex_i [31] $end
$var wire 1 LC data_wdata_ex_i [30] $end
$var wire 1 MC data_wdata_ex_i [29] $end
$var wire 1 NC data_wdata_ex_i [28] $end
$var wire 1 OC data_wdata_ex_i [27] $end
$var wire 1 PC data_wdata_ex_i [26] $end
$var wire 1 QC data_wdata_ex_i [25] $end
$var wire 1 RC data_wdata_ex_i [24] $end
$var wire 1 SC data_wdata_ex_i [23] $end
$var wire 1 TC data_wdata_ex_i [22] $end
$var wire 1 UC data_wdata_ex_i [21] $end
$var wire 1 VC data_wdata_ex_i [20] $end
$var wire 1 WC data_wdata_ex_i [19] $end
$var wire 1 XC data_wdata_ex_i [18] $end
$var wire 1 YC data_wdata_ex_i [17] $end
$var wire 1 ZC data_wdata_ex_i [16] $end
$var wire 1 [C data_wdata_ex_i [15] $end
$var wire 1 \C data_wdata_ex_i [14] $end
$var wire 1 ]C data_wdata_ex_i [13] $end
$var wire 1 ^C data_wdata_ex_i [12] $end
$var wire 1 _C data_wdata_ex_i [11] $end
$var wire 1 `C data_wdata_ex_i [10] $end
$var wire 1 aC data_wdata_ex_i [9] $end
$var wire 1 bC data_wdata_ex_i [8] $end
$var wire 1 cC data_wdata_ex_i [7] $end
$var wire 1 dC data_wdata_ex_i [6] $end
$var wire 1 eC data_wdata_ex_i [5] $end
$var wire 1 fC data_wdata_ex_i [4] $end
$var wire 1 gC data_wdata_ex_i [3] $end
$var wire 1 hC data_wdata_ex_i [2] $end
$var wire 1 iC data_wdata_ex_i [1] $end
$var wire 1 jC data_wdata_ex_i [0] $end
$var wire 1 kC data_reg_offset_ex_i [1] $end
$var wire 1 lC data_reg_offset_ex_i [0] $end
$var wire 1 mC data_load_event_ex_i $end
$var wire 1 nC data_sign_ext_ex_i [1] $end
$var wire 1 oC data_sign_ext_ex_i [0] $end
$var reg 32 pC data_rdata_ex_o [31:0] $end
$var wire 1 qC data_req_ex_i $end
$var wire 1 rC operand_a_ex_i [31] $end
$var wire 1 sC operand_a_ex_i [30] $end
$var wire 1 tC operand_a_ex_i [29] $end
$var wire 1 uC operand_a_ex_i [28] $end
$var wire 1 vC operand_a_ex_i [27] $end
$var wire 1 wC operand_a_ex_i [26] $end
$var wire 1 xC operand_a_ex_i [25] $end
$var wire 1 yC operand_a_ex_i [24] $end
$var wire 1 zC operand_a_ex_i [23] $end
$var wire 1 {C operand_a_ex_i [22] $end
$var wire 1 |C operand_a_ex_i [21] $end
$var wire 1 }C operand_a_ex_i [20] $end
$var wire 1 ~C operand_a_ex_i [19] $end
$var wire 1 !D operand_a_ex_i [18] $end
$var wire 1 "D operand_a_ex_i [17] $end
$var wire 1 #D operand_a_ex_i [16] $end
$var wire 1 $D operand_a_ex_i [15] $end
$var wire 1 %D operand_a_ex_i [14] $end
$var wire 1 &D operand_a_ex_i [13] $end
$var wire 1 'D operand_a_ex_i [12] $end
$var wire 1 (D operand_a_ex_i [11] $end
$var wire 1 )D operand_a_ex_i [10] $end
$var wire 1 *D operand_a_ex_i [9] $end
$var wire 1 +D operand_a_ex_i [8] $end
$var wire 1 ,D operand_a_ex_i [7] $end
$var wire 1 -D operand_a_ex_i [6] $end
$var wire 1 .D operand_a_ex_i [5] $end
$var wire 1 /D operand_a_ex_i [4] $end
$var wire 1 0D operand_a_ex_i [3] $end
$var wire 1 1D operand_a_ex_i [2] $end
$var wire 1 2D operand_a_ex_i [1] $end
$var wire 1 3D operand_a_ex_i [0] $end
$var wire 1 4D operand_b_ex_i [31] $end
$var wire 1 5D operand_b_ex_i [30] $end
$var wire 1 6D operand_b_ex_i [29] $end
$var wire 1 7D operand_b_ex_i [28] $end
$var wire 1 8D operand_b_ex_i [27] $end
$var wire 1 9D operand_b_ex_i [26] $end
$var wire 1 :D operand_b_ex_i [25] $end
$var wire 1 ;D operand_b_ex_i [24] $end
$var wire 1 <D operand_b_ex_i [23] $end
$var wire 1 =D operand_b_ex_i [22] $end
$var wire 1 >D operand_b_ex_i [21] $end
$var wire 1 ?D operand_b_ex_i [20] $end
$var wire 1 @D operand_b_ex_i [19] $end
$var wire 1 AD operand_b_ex_i [18] $end
$var wire 1 BD operand_b_ex_i [17] $end
$var wire 1 CD operand_b_ex_i [16] $end
$var wire 1 DD operand_b_ex_i [15] $end
$var wire 1 ED operand_b_ex_i [14] $end
$var wire 1 FD operand_b_ex_i [13] $end
$var wire 1 GD operand_b_ex_i [12] $end
$var wire 1 HD operand_b_ex_i [11] $end
$var wire 1 ID operand_b_ex_i [10] $end
$var wire 1 JD operand_b_ex_i [9] $end
$var wire 1 KD operand_b_ex_i [8] $end
$var wire 1 LD operand_b_ex_i [7] $end
$var wire 1 MD operand_b_ex_i [6] $end
$var wire 1 ND operand_b_ex_i [5] $end
$var wire 1 OD operand_b_ex_i [4] $end
$var wire 1 PD operand_b_ex_i [3] $end
$var wire 1 QD operand_b_ex_i [2] $end
$var wire 1 RD operand_b_ex_i [1] $end
$var wire 1 SD operand_b_ex_i [0] $end
$var wire 1 TD addr_useincr_ex_i $end
$var wire 1 UD data_misaligned_ex_i $end
$var reg 1 VD data_misaligned_o $end
$var wire 1 WD data_atop_ex_i [5] $end
$var wire 1 XD data_atop_ex_i [4] $end
$var wire 1 YD data_atop_ex_i [3] $end
$var wire 1 ZD data_atop_ex_i [2] $end
$var wire 1 [D data_atop_ex_i [1] $end
$var wire 1 \D data_atop_ex_i [0] $end
$var reg 6 ]D data_atop_o [5:0] $end
$var reg 1 ^D p_elw_start_o $end
$var reg 1 _D p_elw_finish_o $end
$var reg 1 `D lsu_ready_ex_o $end
$var reg 1 aD lsu_ready_wb_o $end
$var reg 1 bD busy_o $end
$var reg 1 cD trans_valid $end
$var reg 1 dD trans_ready $end
$var reg 32 eD trans_addr [31:0] $end
$var reg 1 fD trans_we $end
$var reg 4 gD trans_be [3:0] $end
$var reg 32 hD trans_wdata [31:0] $end
$var reg 6 iD trans_atop [5:0] $end
$var reg 1 jD resp_valid $end
$var reg 32 kD resp_rdata [31:0] $end
$var reg 1 lD resp_err $end
$var reg 2 mD cnt_q [1:0] $end
$var reg 2 nD next_cnt [1:0] $end
$var reg 1 oD count_up $end
$var reg 1 pD count_down $end
$var reg 1 qD ctrl_update $end
$var reg 32 rD data_addr_int [31:0] $end
$var reg 2 sD data_type_q [1:0] $end
$var reg 2 tD rdata_offset_q [1:0] $end
$var reg 2 uD data_sign_ext_q [1:0] $end
$var reg 1 vD data_we_q $end
$var reg 1 wD data_load_event_q $end
$var reg 2 xD wdata_offset [1:0] $end
$var reg 4 yD data_be [3:0] $end
$var reg 32 zD data_wdata [31:0] $end
$var reg 1 {D misaligned_st $end
$var reg 1 |D load_err_o $end
$var reg 1 }D store_err_o $end
$var reg 32 ~D rdata_q [31:0] $end
$var reg 32 !E data_rdata_ext [31:0] $end
$var reg 32 "E rdata_w_ext [31:0] $end
$var reg 32 #E rdata_h_ext [31:0] $end
$var reg 32 $E rdata_b_ext [31:0] $end

$scope begin gen_no_pulp_obi $end
$upscope $end

$scope module data_obi_i $end
$var parameter 32 %E TRANS_STABLE $end
$var wire 1 ?C clk $end
$var wire 1 * rst_n $end
$var wire 1 &E trans_valid_i $end
$var reg 1 'E trans_ready_o $end
$var wire 1 (E trans_addr_i [31] $end
$var wire 1 )E trans_addr_i [30] $end
$var wire 1 *E trans_addr_i [29] $end
$var wire 1 +E trans_addr_i [28] $end
$var wire 1 ,E trans_addr_i [27] $end
$var wire 1 -E trans_addr_i [26] $end
$var wire 1 .E trans_addr_i [25] $end
$var wire 1 /E trans_addr_i [24] $end
$var wire 1 0E trans_addr_i [23] $end
$var wire 1 1E trans_addr_i [22] $end
$var wire 1 2E trans_addr_i [21] $end
$var wire 1 3E trans_addr_i [20] $end
$var wire 1 4E trans_addr_i [19] $end
$var wire 1 5E trans_addr_i [18] $end
$var wire 1 6E trans_addr_i [17] $end
$var wire 1 7E trans_addr_i [16] $end
$var wire 1 8E trans_addr_i [15] $end
$var wire 1 9E trans_addr_i [14] $end
$var wire 1 :E trans_addr_i [13] $end
$var wire 1 ;E trans_addr_i [12] $end
$var wire 1 <E trans_addr_i [11] $end
$var wire 1 =E trans_addr_i [10] $end
$var wire 1 >E trans_addr_i [9] $end
$var wire 1 ?E trans_addr_i [8] $end
$var wire 1 @E trans_addr_i [7] $end
$var wire 1 AE trans_addr_i [6] $end
$var wire 1 BE trans_addr_i [5] $end
$var wire 1 CE trans_addr_i [4] $end
$var wire 1 DE trans_addr_i [3] $end
$var wire 1 EE trans_addr_i [2] $end
$var wire 1 FE trans_addr_i [1] $end
$var wire 1 GE trans_addr_i [0] $end
$var wire 1 HE trans_we_i $end
$var wire 1 IE trans_be_i [3] $end
$var wire 1 JE trans_be_i [2] $end
$var wire 1 KE trans_be_i [1] $end
$var wire 1 LE trans_be_i [0] $end
$var wire 1 ME trans_wdata_i [31] $end
$var wire 1 NE trans_wdata_i [30] $end
$var wire 1 OE trans_wdata_i [29] $end
$var wire 1 PE trans_wdata_i [28] $end
$var wire 1 QE trans_wdata_i [27] $end
$var wire 1 RE trans_wdata_i [26] $end
$var wire 1 SE trans_wdata_i [25] $end
$var wire 1 TE trans_wdata_i [24] $end
$var wire 1 UE trans_wdata_i [23] $end
$var wire 1 VE trans_wdata_i [22] $end
$var wire 1 WE trans_wdata_i [21] $end
$var wire 1 XE trans_wdata_i [20] $end
$var wire 1 YE trans_wdata_i [19] $end
$var wire 1 ZE trans_wdata_i [18] $end
$var wire 1 [E trans_wdata_i [17] $end
$var wire 1 \E trans_wdata_i [16] $end
$var wire 1 ]E trans_wdata_i [15] $end
$var wire 1 ^E trans_wdata_i [14] $end
$var wire 1 _E trans_wdata_i [13] $end
$var wire 1 `E trans_wdata_i [12] $end
$var wire 1 aE trans_wdata_i [11] $end
$var wire 1 bE trans_wdata_i [10] $end
$var wire 1 cE trans_wdata_i [9] $end
$var wire 1 dE trans_wdata_i [8] $end
$var wire 1 eE trans_wdata_i [7] $end
$var wire 1 fE trans_wdata_i [6] $end
$var wire 1 gE trans_wdata_i [5] $end
$var wire 1 hE trans_wdata_i [4] $end
$var wire 1 iE trans_wdata_i [3] $end
$var wire 1 jE trans_wdata_i [2] $end
$var wire 1 kE trans_wdata_i [1] $end
$var wire 1 lE trans_wdata_i [0] $end
$var wire 1 mE trans_atop_i [5] $end
$var wire 1 nE trans_atop_i [4] $end
$var wire 1 oE trans_atop_i [3] $end
$var wire 1 pE trans_atop_i [2] $end
$var wire 1 qE trans_atop_i [1] $end
$var wire 1 rE trans_atop_i [0] $end
$var reg 1 sE resp_valid_o $end
$var reg 32 tE resp_rdata_o [31:0] $end
$var reg 1 uE resp_err_o $end
$var reg 1 vE obi_req_o $end
$var wire 1 AC obi_gnt_i $end
$var reg 32 wE obi_addr_o [31:0] $end
$var reg 1 xE obi_we_o $end
$var reg 4 yE obi_be_o [3:0] $end
$var reg 32 zE obi_wdata_o [31:0] $end
$var reg 6 {E obi_atop_o [5:0] $end
$var wire 1 <" obi_rdata_i [31] $end
$var wire 1 =" obi_rdata_i [30] $end
$var wire 1 >" obi_rdata_i [29] $end
$var wire 1 ?" obi_rdata_i [28] $end
$var wire 1 @" obi_rdata_i [27] $end
$var wire 1 A" obi_rdata_i [26] $end
$var wire 1 B" obi_rdata_i [25] $end
$var wire 1 C" obi_rdata_i [24] $end
$var wire 1 D" obi_rdata_i [23] $end
$var wire 1 E" obi_rdata_i [22] $end
$var wire 1 F" obi_rdata_i [21] $end
$var wire 1 G" obi_rdata_i [20] $end
$var wire 1 H" obi_rdata_i [19] $end
$var wire 1 I" obi_rdata_i [18] $end
$var wire 1 J" obi_rdata_i [17] $end
$var wire 1 K" obi_rdata_i [16] $end
$var wire 1 L" obi_rdata_i [15] $end
$var wire 1 M" obi_rdata_i [14] $end
$var wire 1 N" obi_rdata_i [13] $end
$var wire 1 O" obi_rdata_i [12] $end
$var wire 1 P" obi_rdata_i [11] $end
$var wire 1 Q" obi_rdata_i [10] $end
$var wire 1 R" obi_rdata_i [9] $end
$var wire 1 S" obi_rdata_i [8] $end
$var wire 1 T" obi_rdata_i [7] $end
$var wire 1 U" obi_rdata_i [6] $end
$var wire 1 V" obi_rdata_i [5] $end
$var wire 1 W" obi_rdata_i [4] $end
$var wire 1 X" obi_rdata_i [3] $end
$var wire 1 Y" obi_rdata_i [2] $end
$var wire 1 Z" obi_rdata_i [1] $end
$var wire 1 [" obi_rdata_i [0] $end
$var wire 1 7" obi_rvalid_i $end
$var wire 1 BC obi_err_i $end
$var reg 1 |E state_q $end
$var reg 1 }E next_state $end

$scope begin gen_trans_stable $end
$upscope $end
$upscope $end
$upscope $end

$scope module cs_registers_i $end
$var parameter 32 ~E N_HWLP $end
$var parameter 32 !F APU $end
$var parameter 32 "F A_EXTENSION $end
$var parameter 32 #F FPU $end
$var parameter 32 $F ZFINX $end
$var parameter 32 %F PULP_SECURE $end
$var parameter 32 &F USE_PMP $end
$var parameter 32 'F N_PMP_ENTRIES $end
$var parameter 32 (F NUM_MHPMCOUNTERS $end
$var parameter 32 )F COREV_PULP $end
$var parameter 32 *F COREV_CLUSTER $end
$var parameter 32 +F DEBUG_TRIGGER_EN $end
$var parameter 32 ,F NUM_HPM_EVENTS $end
$var parameter 2 -F MTVEC_MODE $end
$var parameter 32 .F MAX_N_PMP_ENTRIES $end
$var parameter 32 /F MAX_N_PMP_CFG $end
$var parameter 32 0F N_PMP_CFG $end
$var parameter 32 1F MSTATUS_UIE_BIT $end
$var parameter 32 2F MSTATUS_SIE_BIT $end
$var parameter 32 3F MSTATUS_MIE_BIT $end
$var parameter 32 4F MSTATUS_UPIE_BIT $end
$var parameter 32 5F MSTATUS_SPIE_BIT $end
$var parameter 32 6F MSTATUS_MPIE_BIT $end
$var parameter 32 7F MSTATUS_SPP_BIT $end
$var parameter 32 8F MSTATUS_MPP_BIT_LOW $end
$var parameter 32 9F MSTATUS_MPP_BIT_HIGH $end
$var parameter 32 :F MSTATUS_FS_BIT_LOW $end
$var parameter 32 ;F MSTATUS_FS_BIT_HIGH $end
$var parameter 32 <F MSTATUS_MPRV_BIT $end
$var parameter 32 =F MSTATUS_SD_BIT $end
$var parameter 2 >F MXL $end
$var parameter 32 ?F MISA_VALUE $end
$var parameter 32 @F PULP_PERF_COUNTERS $end
$var wire 1 AF clk $end
$var wire 1 * rst_n $end
$var wire 1 /! hart_id_i [31] $end
$var wire 1 0! hart_id_i [30] $end
$var wire 1 1! hart_id_i [29] $end
$var wire 1 2! hart_id_i [28] $end
$var wire 1 3! hart_id_i [27] $end
$var wire 1 4! hart_id_i [26] $end
$var wire 1 5! hart_id_i [25] $end
$var wire 1 6! hart_id_i [24] $end
$var wire 1 7! hart_id_i [23] $end
$var wire 1 8! hart_id_i [22] $end
$var wire 1 9! hart_id_i [21] $end
$var wire 1 :! hart_id_i [20] $end
$var wire 1 ;! hart_id_i [19] $end
$var wire 1 <! hart_id_i [18] $end
$var wire 1 =! hart_id_i [17] $end
$var wire 1 >! hart_id_i [16] $end
$var wire 1 ?! hart_id_i [15] $end
$var wire 1 @! hart_id_i [14] $end
$var wire 1 A! hart_id_i [13] $end
$var wire 1 B! hart_id_i [12] $end
$var wire 1 C! hart_id_i [11] $end
$var wire 1 D! hart_id_i [10] $end
$var wire 1 E! hart_id_i [9] $end
$var wire 1 F! hart_id_i [8] $end
$var wire 1 G! hart_id_i [7] $end
$var wire 1 H! hart_id_i [6] $end
$var wire 1 I! hart_id_i [5] $end
$var wire 1 J! hart_id_i [4] $end
$var wire 1 K! hart_id_i [3] $end
$var wire 1 L! hart_id_i [2] $end
$var wire 1 M! hart_id_i [1] $end
$var wire 1 N! hart_id_i [0] $end
$var reg 24 BF mtvec_o [23:0] $end
$var reg 24 CF utvec_o [23:0] $end
$var reg 2 DF mtvec_mode_o [1:0] $end
$var reg 2 EF utvec_mode_o [1:0] $end
$var wire 1 M mtvec_addr_i [31] $end
$var wire 1 N mtvec_addr_i [30] $end
$var wire 1 O mtvec_addr_i [29] $end
$var wire 1 P mtvec_addr_i [28] $end
$var wire 1 Q mtvec_addr_i [27] $end
$var wire 1 R mtvec_addr_i [26] $end
$var wire 1 S mtvec_addr_i [25] $end
$var wire 1 T mtvec_addr_i [24] $end
$var wire 1 U mtvec_addr_i [23] $end
$var wire 1 V mtvec_addr_i [22] $end
$var wire 1 W mtvec_addr_i [21] $end
$var wire 1 X mtvec_addr_i [20] $end
$var wire 1 Y mtvec_addr_i [19] $end
$var wire 1 Z mtvec_addr_i [18] $end
$var wire 1 [ mtvec_addr_i [17] $end
$var wire 1 \ mtvec_addr_i [16] $end
$var wire 1 ] mtvec_addr_i [15] $end
$var wire 1 ^ mtvec_addr_i [14] $end
$var wire 1 _ mtvec_addr_i [13] $end
$var wire 1 ` mtvec_addr_i [12] $end
$var wire 1 a mtvec_addr_i [11] $end
$var wire 1 b mtvec_addr_i [10] $end
$var wire 1 c mtvec_addr_i [9] $end
$var wire 1 d mtvec_addr_i [8] $end
$var wire 1 e mtvec_addr_i [7] $end
$var wire 1 f mtvec_addr_i [6] $end
$var wire 1 g mtvec_addr_i [5] $end
$var wire 1 h mtvec_addr_i [4] $end
$var wire 1 i mtvec_addr_i [3] $end
$var wire 1 j mtvec_addr_i [2] $end
$var wire 1 k mtvec_addr_i [1] $end
$var wire 1 l mtvec_addr_i [0] $end
$var wire 1 FF csr_mtvec_init_i $end
$var wire 1 GF csr_addr_i [11] $end
$var wire 1 HF csr_addr_i [10] $end
$var wire 1 IF csr_addr_i [9] $end
$var wire 1 JF csr_addr_i [8] $end
$var wire 1 KF csr_addr_i [7] $end
$var wire 1 LF csr_addr_i [6] $end
$var wire 1 MF csr_addr_i [5] $end
$var wire 1 NF csr_addr_i [4] $end
$var wire 1 OF csr_addr_i [3] $end
$var wire 1 PF csr_addr_i [2] $end
$var wire 1 QF csr_addr_i [1] $end
$var wire 1 RF csr_addr_i [0] $end
$var wire 1 SF csr_wdata_i [31] $end
$var wire 1 TF csr_wdata_i [30] $end
$var wire 1 UF csr_wdata_i [29] $end
$var wire 1 VF csr_wdata_i [28] $end
$var wire 1 WF csr_wdata_i [27] $end
$var wire 1 XF csr_wdata_i [26] $end
$var wire 1 YF csr_wdata_i [25] $end
$var wire 1 ZF csr_wdata_i [24] $end
$var wire 1 [F csr_wdata_i [23] $end
$var wire 1 \F csr_wdata_i [22] $end
$var wire 1 ]F csr_wdata_i [21] $end
$var wire 1 ^F csr_wdata_i [20] $end
$var wire 1 _F csr_wdata_i [19] $end
$var wire 1 `F csr_wdata_i [18] $end
$var wire 1 aF csr_wdata_i [17] $end
$var wire 1 bF csr_wdata_i [16] $end
$var wire 1 cF csr_wdata_i [15] $end
$var wire 1 dF csr_wdata_i [14] $end
$var wire 1 eF csr_wdata_i [13] $end
$var wire 1 fF csr_wdata_i [12] $end
$var wire 1 gF csr_wdata_i [11] $end
$var wire 1 hF csr_wdata_i [10] $end
$var wire 1 iF csr_wdata_i [9] $end
$var wire 1 jF csr_wdata_i [8] $end
$var wire 1 kF csr_wdata_i [7] $end
$var wire 1 lF csr_wdata_i [6] $end
$var wire 1 mF csr_wdata_i [5] $end
$var wire 1 nF csr_wdata_i [4] $end
$var wire 1 oF csr_wdata_i [3] $end
$var wire 1 pF csr_wdata_i [2] $end
$var wire 1 qF csr_wdata_i [1] $end
$var wire 1 rF csr_wdata_i [0] $end
$var wire 1 sF csr_op_i [1] $end
$var wire 1 tF csr_op_i [0] $end
$var reg 32 uF csr_rdata_o [31:0] $end
$var reg 1 vF fs_off_o $end
$var reg 3 wF frm_o [2:0] $end
$var wire 1 xF fflags_i [4] $end
$var wire 1 yF fflags_i [3] $end
$var wire 1 zF fflags_i [2] $end
$var wire 1 {F fflags_i [1] $end
$var wire 1 |F fflags_i [0] $end
$var wire 1 }F fflags_we_i $end
$var wire 1 ~F fregs_we_i $end
$var reg 32 !G mie_bypass_o [31:0] $end
$var wire 1 "G mip_i [31] $end
$var wire 1 #G mip_i [30] $end
$var wire 1 $G mip_i [29] $end
$var wire 1 %G mip_i [28] $end
$var wire 1 &G mip_i [27] $end
$var wire 1 'G mip_i [26] $end
$var wire 1 (G mip_i [25] $end
$var wire 1 )G mip_i [24] $end
$var wire 1 *G mip_i [23] $end
$var wire 1 +G mip_i [22] $end
$var wire 1 ,G mip_i [21] $end
$var wire 1 -G mip_i [20] $end
$var wire 1 .G mip_i [19] $end
$var wire 1 /G mip_i [18] $end
$var wire 1 0G mip_i [17] $end
$var wire 1 1G mip_i [16] $end
$var wire 1 2G mip_i [15] $end
$var wire 1 3G mip_i [14] $end
$var wire 1 4G mip_i [13] $end
$var wire 1 5G mip_i [12] $end
$var wire 1 6G mip_i [11] $end
$var wire 1 7G mip_i [10] $end
$var wire 1 8G mip_i [9] $end
$var wire 1 9G mip_i [8] $end
$var wire 1 :G mip_i [7] $end
$var wire 1 ;G mip_i [6] $end
$var wire 1 <G mip_i [5] $end
$var wire 1 =G mip_i [4] $end
$var wire 1 >G mip_i [3] $end
$var wire 1 ?G mip_i [2] $end
$var wire 1 @G mip_i [1] $end
$var wire 1 AG mip_i [0] $end
$var reg 1 BG m_irq_enable_o $end
$var reg 1 CG u_irq_enable_o $end
$var wire 1 DG csr_irq_sec_i $end
$var reg 1 EG sec_lvl_o $end
$var reg 32 FG mepc_o [31:0] $end
$var reg 32 GG uepc_o [31:0] $end
$var reg 32 HG mcounteren_o [31:0] $end
$var wire 1 IG debug_mode_i $end
$var wire 1 JG debug_cause_i [2] $end
$var wire 1 KG debug_cause_i [1] $end
$var wire 1 LG debug_cause_i [0] $end
$var wire 1 MG debug_csr_save_i $end
$var reg 32 NG depc_o [31:0] $end
$var reg 1 OG debug_single_step_o $end
$var reg 1 PG debug_ebreakm_o $end
$var reg 1 QG debug_ebreaku_o $end
$var reg 1 RG trigger_match_o $end
$var reg 512 SG pmp_addr_o [511:0] $end
$var reg 128 TG pmp_cfg_o [127:0] $end
$var reg 2 UG priv_lvl_o [1:0] $end
$var wire 1 VG pc_if_i [31] $end
$var wire 1 WG pc_if_i [30] $end
$var wire 1 XG pc_if_i [29] $end
$var wire 1 YG pc_if_i [28] $end
$var wire 1 ZG pc_if_i [27] $end
$var wire 1 [G pc_if_i [26] $end
$var wire 1 \G pc_if_i [25] $end
$var wire 1 ]G pc_if_i [24] $end
$var wire 1 ^G pc_if_i [23] $end
$var wire 1 _G pc_if_i [22] $end
$var wire 1 `G pc_if_i [21] $end
$var wire 1 aG pc_if_i [20] $end
$var wire 1 bG pc_if_i [19] $end
$var wire 1 cG pc_if_i [18] $end
$var wire 1 dG pc_if_i [17] $end
$var wire 1 eG pc_if_i [16] $end
$var wire 1 fG pc_if_i [15] $end
$var wire 1 gG pc_if_i [14] $end
$var wire 1 hG pc_if_i [13] $end
$var wire 1 iG pc_if_i [12] $end
$var wire 1 jG pc_if_i [11] $end
$var wire 1 kG pc_if_i [10] $end
$var wire 1 lG pc_if_i [9] $end
$var wire 1 mG pc_if_i [8] $end
$var wire 1 nG pc_if_i [7] $end
$var wire 1 oG pc_if_i [6] $end
$var wire 1 pG pc_if_i [5] $end
$var wire 1 qG pc_if_i [4] $end
$var wire 1 rG pc_if_i [3] $end
$var wire 1 sG pc_if_i [2] $end
$var wire 1 tG pc_if_i [1] $end
$var wire 1 uG pc_if_i [0] $end
$var wire 1 vG pc_id_i [31] $end
$var wire 1 wG pc_id_i [30] $end
$var wire 1 xG pc_id_i [29] $end
$var wire 1 yG pc_id_i [28] $end
$var wire 1 zG pc_id_i [27] $end
$var wire 1 {G pc_id_i [26] $end
$var wire 1 |G pc_id_i [25] $end
$var wire 1 }G pc_id_i [24] $end
$var wire 1 ~G pc_id_i [23] $end
$var wire 1 !H pc_id_i [22] $end
$var wire 1 "H pc_id_i [21] $end
$var wire 1 #H pc_id_i [20] $end
$var wire 1 $H pc_id_i [19] $end
$var wire 1 %H pc_id_i [18] $end
$var wire 1 &H pc_id_i [17] $end
$var wire 1 'H pc_id_i [16] $end
$var wire 1 (H pc_id_i [15] $end
$var wire 1 )H pc_id_i [14] $end
$var wire 1 *H pc_id_i [13] $end
$var wire 1 +H pc_id_i [12] $end
$var wire 1 ,H pc_id_i [11] $end
$var wire 1 -H pc_id_i [10] $end
$var wire 1 .H pc_id_i [9] $end
$var wire 1 /H pc_id_i [8] $end
$var wire 1 0H pc_id_i [7] $end
$var wire 1 1H pc_id_i [6] $end
$var wire 1 2H pc_id_i [5] $end
$var wire 1 3H pc_id_i [4] $end
$var wire 1 4H pc_id_i [3] $end
$var wire 1 5H pc_id_i [2] $end
$var wire 1 6H pc_id_i [1] $end
$var wire 1 7H pc_id_i [0] $end
$var wire 1 8H pc_ex_i [31] $end
$var wire 1 9H pc_ex_i [30] $end
$var wire 1 :H pc_ex_i [29] $end
$var wire 1 ;H pc_ex_i [28] $end
$var wire 1 <H pc_ex_i [27] $end
$var wire 1 =H pc_ex_i [26] $end
$var wire 1 >H pc_ex_i [25] $end
$var wire 1 ?H pc_ex_i [24] $end
$var wire 1 @H pc_ex_i [23] $end
$var wire 1 AH pc_ex_i [22] $end
$var wire 1 BH pc_ex_i [21] $end
$var wire 1 CH pc_ex_i [20] $end
$var wire 1 DH pc_ex_i [19] $end
$var wire 1 EH pc_ex_i [18] $end
$var wire 1 FH pc_ex_i [17] $end
$var wire 1 GH pc_ex_i [16] $end
$var wire 1 HH pc_ex_i [15] $end
$var wire 1 IH pc_ex_i [14] $end
$var wire 1 JH pc_ex_i [13] $end
$var wire 1 KH pc_ex_i [12] $end
$var wire 1 LH pc_ex_i [11] $end
$var wire 1 MH pc_ex_i [10] $end
$var wire 1 NH pc_ex_i [9] $end
$var wire 1 OH pc_ex_i [8] $end
$var wire 1 PH pc_ex_i [7] $end
$var wire 1 QH pc_ex_i [6] $end
$var wire 1 RH pc_ex_i [5] $end
$var wire 1 SH pc_ex_i [4] $end
$var wire 1 TH pc_ex_i [3] $end
$var wire 1 UH pc_ex_i [2] $end
$var wire 1 VH pc_ex_i [1] $end
$var wire 1 WH pc_ex_i [0] $end
$var wire 1 XH csr_save_if_i $end
$var wire 1 YH csr_save_id_i $end
$var wire 1 ZH csr_save_ex_i $end
$var wire 1 [H csr_restore_mret_i $end
$var wire 1 \H csr_restore_uret_i $end
$var wire 1 ]H csr_restore_dret_i $end
$var wire 1 ^H csr_cause_i [5] $end
$var wire 1 _H csr_cause_i [4] $end
$var wire 1 `H csr_cause_i [3] $end
$var wire 1 aH csr_cause_i [2] $end
$var wire 1 bH csr_cause_i [1] $end
$var wire 1 cH csr_cause_i [0] $end
$var wire 1 dH csr_save_cause_i $end
$var reg 64 eH hwlp_start_i [63:0] $end
$var reg 64 fH hwlp_end_i [63:0] $end
$var reg 64 gH hwlp_cnt_i [63:0] $end
$var wire 1 hH mhpmevent_minstret_i $end
$var wire 1 iH mhpmevent_load_i $end
$var wire 1 jH mhpmevent_store_i $end
$var wire 1 kH mhpmevent_jump_i $end
$var wire 1 lH mhpmevent_branch_i $end
$var wire 1 mH mhpmevent_branch_taken_i $end
$var wire 1 nH mhpmevent_compressed_i $end
$var wire 1 oH mhpmevent_jr_stall_i $end
$var wire 1 pH mhpmevent_imiss_i $end
$var wire 1 qH mhpmevent_ld_stall_i $end
$var wire 1 rH mhpmevent_pipe_stall_i $end
$var wire 1 sH apu_typeconflict_i $end
$var wire 1 tH apu_contention_i $end
$var wire 1 uH apu_dep_i $end
$var wire 1 vH apu_wb_i $end
$var reg 32 wH csr_wdata_int [31:0] $end
$var reg 32 xH csr_rdata_int [31:0] $end
$var reg 1 yH csr_we_int $end
$var reg 3 zH frm_q [2:0] $end
$var reg 3 {H frm_n [2:0] $end
$var reg 5 |H fflags_q [4:0] $end
$var reg 5 }H fflags_n [4:0] $end
$var reg 1 ~H fcsr_update $end
$var reg 32 !I mepc_q [31:0] $end
$var reg 32 "I mepc_n [31:0] $end
$var reg 32 #I uepc_q [31:0] $end
$var reg 32 $I uepc_n [31:0] $end
$var reg 32 %I tmatch_control_rdata [31:0] $end
$var reg 32 &I tmatch_value_rdata [31:0] $end
$var reg 16 'I tinfo_types [15:0] $end
$var reg 32 (I dcsr_q [31:0] $end
$var reg 32 )I dcsr_n [31:0] $end
$var reg 32 *I depc_q [31:0] $end
$var reg 32 +I depc_n [31:0] $end
$var reg 32 ,I dscratch0_q [31:0] $end
$var reg 32 -I dscratch0_n [31:0] $end
$var reg 32 .I dscratch1_q [31:0] $end
$var reg 32 /I dscratch1_n [31:0] $end
$var reg 32 0I mscratch_q [31:0] $end
$var reg 32 1I mscratch_n [31:0] $end
$var reg 32 2I exception_pc [31:0] $end
$var reg 7 3I mstatus_q [6:0] $end
$var reg 7 4I mstatus_n [6:0] $end
$var reg 1 5I mstatus_we_int $end
$var reg 2 6I mstatus_fs_q [1:0] $end
$var reg 2 7I mstatus_fs_n [1:0] $end
$var reg 6 8I mcause_q [5:0] $end
$var reg 6 9I mcause_n [5:0] $end
$var reg 6 :I ucause_q [5:0] $end
$var reg 6 ;I ucause_n [5:0] $end
$var reg 24 <I mtvec_n [23:0] $end
$var reg 24 =I mtvec_q [23:0] $end
$var reg 24 >I utvec_n [23:0] $end
$var reg 24 ?I utvec_q [23:0] $end
$var reg 2 @I mtvec_mode_n [1:0] $end
$var reg 2 AI mtvec_mode_q [1:0] $end
$var reg 2 BI utvec_mode_n [1:0] $end
$var reg 2 CI utvec_mode_q [1:0] $end
$var reg 32 DI mip [31:0] $end
$var reg 32 EI mie_q [31:0] $end
$var reg 32 FI mie_n [31:0] $end
$var reg 32 GI csr_mie_wdata [31:0] $end
$var reg 1 HI csr_mie_we $end
$var reg 1 II is_irq $end
$var reg 2 JI priv_lvl_n [1:0] $end
$var reg 2 KI priv_lvl_q [1:0] $end
$var reg 768 LI pmp_reg_q [767:0] $end
$var reg 768 MI pmp_reg_n [767:0] $end
$var reg 16 NI pmpaddr_we [15:0] $end
$var reg 16 OI pmpcfg_we [15:0] $end
$var reg 2048 PI mhpmcounter_q [2047:0] $end
$var reg 1024 QI mhpmevent_q [1023:0] $end
$var reg 1024 RI mhpmevent_n [1023:0] $end
$var reg 32 SI mcounteren_q [31:0] $end
$var reg 32 TI mcounteren_n [31:0] $end
$var reg 32 UI mcountinhibit_q [31:0] $end
$var reg 32 VI mcountinhibit_n [31:0] $end
$var reg 16 WI hpm_events [15:0] $end
$var reg 2048 XI mhpmcounter_increment [2047:0] $end
$var reg 32 YI mhpmcounter_write_lower [31:0] $end
$var reg 32 ZI mhpmcounter_write_upper [31:0] $end
$var reg 32 [I mhpmcounter_write_increment [31:0] $end
$var reg 1 \I mcounteren_we $end
$var reg 1 ]I mcountinhibit_we $end
$var reg 1 ^I mhpmevent_we $end

$scope begin gen_mcountinhibit[31] $end
$var parameter 32 _I inh_gidx $end

$scope begin gen_non_implemented $end
$upscope $end
$upscope $end

$scope begin gen_mcountinhibit[30] $end
$var parameter 32 `I inh_gidx $end

$scope begin gen_non_implemented $end
$upscope $end
$upscope $end

$scope begin gen_mcountinhibit[29] $end
$var parameter 32 aI inh_gidx $end

$scope begin gen_non_implemented $end
$upscope $end
$upscope $end

$scope begin gen_mcountinhibit[28] $end
$var parameter 32 bI inh_gidx $end

$scope begin gen_non_implemented $end
$upscope $end
$upscope $end

$scope begin gen_mcountinhibit[27] $end
$var parameter 32 cI inh_gidx $end

$scope begin gen_non_implemented $end
$upscope $end
$upscope $end

$scope begin gen_mcountinhibit[26] $end
$var parameter 32 dI inh_gidx $end

$scope begin gen_non_implemented $end
$upscope $end
$upscope $end

$scope begin gen_mcountinhibit[25] $end
$var parameter 32 eI inh_gidx $end

$scope begin gen_non_implemented $end
$upscope $end
$upscope $end

$scope begin gen_mcountinhibit[24] $end
$var parameter 32 fI inh_gidx $end

$scope begin gen_non_implemented $end
$upscope $end
$upscope $end

$scope begin gen_mcountinhibit[23] $end
$var parameter 32 gI inh_gidx $end

$scope begin gen_non_implemented $end
$upscope $end
$upscope $end

$scope begin gen_mcountinhibit[22] $end
$var parameter 32 hI inh_gidx $end

$scope begin gen_non_implemented $end
$upscope $end
$upscope $end

$scope begin gen_mcountinhibit[21] $end
$var parameter 32 iI inh_gidx $end

$scope begin gen_non_implemented $end
$upscope $end
$upscope $end

$scope begin gen_mcountinhibit[20] $end
$var parameter 32 jI inh_gidx $end

$scope begin gen_non_implemented $end
$upscope $end
$upscope $end

$scope begin gen_mcountinhibit[19] $end
$var parameter 32 kI inh_gidx $end

$scope begin gen_non_implemented $end
$upscope $end
$upscope $end

$scope begin gen_mcountinhibit[18] $end
$var parameter 32 lI inh_gidx $end

$scope begin gen_non_implemented $end
$upscope $end
$upscope $end

$scope begin gen_mcountinhibit[17] $end
$var parameter 32 mI inh_gidx $end

$scope begin gen_non_implemented $end
$upscope $end
$upscope $end

$scope begin gen_mcountinhibit[16] $end
$var parameter 32 nI inh_gidx $end

$scope begin gen_non_implemented $end
$upscope $end
$upscope $end

$scope begin gen_mcountinhibit[15] $end
$var parameter 32 oI inh_gidx $end

$scope begin gen_non_implemented $end
$upscope $end
$upscope $end

$scope begin gen_mcountinhibit[14] $end
$var parameter 32 pI inh_gidx $end

$scope begin gen_non_implemented $end
$upscope $end
$upscope $end

$scope begin gen_mcountinhibit[13] $end
$var parameter 32 qI inh_gidx $end

$scope begin gen_non_implemented $end
$upscope $end
$upscope $end

$scope begin gen_mcountinhibit[12] $end
$var parameter 32 rI inh_gidx $end

$scope begin gen_non_implemented $end
$upscope $end
$upscope $end

$scope begin gen_mcountinhibit[11] $end
$var parameter 32 sI inh_gidx $end

$scope begin gen_non_implemented $end
$upscope $end
$upscope $end

$scope begin gen_mcountinhibit[10] $end
$var parameter 32 tI inh_gidx $end

$scope begin gen_non_implemented $end
$upscope $end
$upscope $end

$scope begin gen_mcountinhibit[9] $end
$var parameter 32 uI inh_gidx $end

$scope begin gen_non_implemented $end
$upscope $end
$upscope $end

$scope begin gen_mcountinhibit[8] $end
$var parameter 32 vI inh_gidx $end

$scope begin gen_non_implemented $end
$upscope $end
$upscope $end

$scope begin gen_mcountinhibit[7] $end
$var parameter 32 wI inh_gidx $end

$scope begin gen_non_implemented $end
$upscope $end
$upscope $end

$scope begin gen_mcountinhibit[6] $end
$var parameter 32 xI inh_gidx $end

$scope begin gen_non_implemented $end
$upscope $end
$upscope $end

$scope begin gen_mcountinhibit[5] $end
$var parameter 32 yI inh_gidx $end

$scope begin gen_non_implemented $end
$upscope $end
$upscope $end

$scope begin gen_mcountinhibit[4] $end
$var parameter 32 zI inh_gidx $end

$scope begin gen_non_implemented $end
$upscope $end
$upscope $end

$scope begin gen_mcountinhibit[3] $end
$var parameter 32 {I inh_gidx $end

$scope begin gen_implemented $end
$upscope $end
$upscope $end

$scope begin gen_mcountinhibit[2] $end
$var parameter 32 |I inh_gidx $end

$scope begin gen_implemented $end
$upscope $end
$upscope $end

$scope begin gen_mcountinhibit[1] $end
$var parameter 32 }I inh_gidx $end

$scope begin gen_non_implemented $end
$upscope $end
$upscope $end

$scope begin gen_mcountinhibit[0] $end
$var parameter 32 ~I inh_gidx $end

$scope begin gen_implemented $end
$upscope $end
$upscope $end

$scope begin gen_mcounteren[31] $end
$var parameter 32 !J en_gidx $end

$scope begin gen_non_implemented $end
$upscope $end
$upscope $end

$scope begin gen_mcounteren[30] $end
$var parameter 32 "J en_gidx $end

$scope begin gen_non_implemented $end
$upscope $end
$upscope $end

$scope begin gen_mcounteren[29] $end
$var parameter 32 #J en_gidx $end

$scope begin gen_non_implemented $end
$upscope $end
$upscope $end

$scope begin gen_mcounteren[28] $end
$var parameter 32 $J en_gidx $end

$scope begin gen_non_implemented $end
$upscope $end
$upscope $end

$scope begin gen_mcounteren[27] $end
$var parameter 32 %J en_gidx $end

$scope begin gen_non_implemented $end
$upscope $end
$upscope $end

$scope begin gen_mcounteren[26] $end
$var parameter 32 &J en_gidx $end

$scope begin gen_non_implemented $end
$upscope $end
$upscope $end

$scope begin gen_mcounteren[25] $end
$var parameter 32 'J en_gidx $end

$scope begin gen_non_implemented $end
$upscope $end
$upscope $end

$scope begin gen_mcounteren[24] $end
$var parameter 32 (J en_gidx $end

$scope begin gen_non_implemented $end
$upscope $end
$upscope $end

$scope begin gen_mcounteren[23] $end
$var parameter 32 )J en_gidx $end

$scope begin gen_non_implemented $end
$upscope $end
$upscope $end

$scope begin gen_mcounteren[22] $end
$var parameter 32 *J en_gidx $end

$scope begin gen_non_implemented $end
$upscope $end
$upscope $end

$scope begin gen_mcounteren[21] $end
$var parameter 32 +J en_gidx $end

$scope begin gen_non_implemented $end
$upscope $end
$upscope $end

$scope begin gen_mcounteren[20] $end
$var parameter 32 ,J en_gidx $end

$scope begin gen_non_implemented $end
$upscope $end
$upscope $end

$scope begin gen_mcounteren[19] $end
$var parameter 32 -J en_gidx $end

$scope begin gen_non_implemented $end
$upscope $end
$upscope $end

$scope begin gen_mcounteren[18] $end
$var parameter 32 .J en_gidx $end

$scope begin gen_non_implemented $end
$upscope $end
$upscope $end

$scope begin gen_mcounteren[17] $end
$var parameter 32 /J en_gidx $end

$scope begin gen_non_implemented $end
$upscope $end
$upscope $end

$scope begin gen_mcounteren[16] $end
$var parameter 32 0J en_gidx $end

$scope begin gen_non_implemented $end
$upscope $end
$upscope $end

$scope begin gen_mcounteren[15] $end
$var parameter 32 1J en_gidx $end

$scope begin gen_non_implemented $end
$upscope $end
$upscope $end

$scope begin gen_mcounteren[14] $end
$var parameter 32 2J en_gidx $end

$scope begin gen_non_implemented $end
$upscope $end
$upscope $end

$scope begin gen_mcounteren[13] $end
$var parameter 32 3J en_gidx $end

$scope begin gen_non_implemented $end
$upscope $end
$upscope $end

$scope begin gen_mcounteren[12] $end
$var parameter 32 4J en_gidx $end

$scope begin gen_non_implemented $end
$upscope $end
$upscope $end

$scope begin gen_mcounteren[11] $end
$var parameter 32 5J en_gidx $end

$scope begin gen_non_implemented $end
$upscope $end
$upscope $end

$scope begin gen_mcounteren[10] $end
$var parameter 32 6J en_gidx $end

$scope begin gen_non_implemented $end
$upscope $end
$upscope $end

$scope begin gen_mcounteren[9] $end
$var parameter 32 7J en_gidx $end

$scope begin gen_non_implemented $end
$upscope $end
$upscope $end

$scope begin gen_mcounteren[8] $end
$var parameter 32 8J en_gidx $end

$scope begin gen_non_implemented $end
$upscope $end
$upscope $end

$scope begin gen_mcounteren[7] $end
$var parameter 32 9J en_gidx $end

$scope begin gen_non_implemented $end
$upscope $end
$upscope $end

$scope begin gen_mcounteren[6] $end
$var parameter 32 :J en_gidx $end

$scope begin gen_non_implemented $end
$upscope $end
$upscope $end

$scope begin gen_mcounteren[5] $end
$var parameter 32 ;J en_gidx $end

$scope begin gen_non_implemented $end
$upscope $end
$upscope $end

$scope begin gen_mcounteren[4] $end
$var parameter 32 <J en_gidx $end

$scope begin gen_non_implemented $end
$upscope $end
$upscope $end

$scope begin gen_mcounteren[3] $end
$var parameter 32 =J en_gidx $end

$scope begin gen_non_implemented $end
$upscope $end
$upscope $end

$scope begin gen_mcounteren[2] $end
$var parameter 32 >J en_gidx $end

$scope begin gen_non_implemented $end
$upscope $end
$upscope $end

$scope begin gen_mcounteren[1] $end
$var parameter 32 ?J en_gidx $end

$scope begin gen_non_implemented $end
$upscope $end
$upscope $end

$scope begin gen_mcounteren[0] $end
$var parameter 32 @J en_gidx $end

$scope begin gen_non_implemented $end
$upscope $end
$upscope $end

$scope begin gen_mhpmevent[31] $end
$var parameter 32 AJ evt_gidx $end

$scope begin gen_non_implemented $end
$upscope $end
$upscope $end

$scope begin gen_mhpmevent[30] $end
$var parameter 32 BJ evt_gidx $end

$scope begin gen_non_implemented $end
$upscope $end
$upscope $end

$scope begin gen_mhpmevent[29] $end
$var parameter 32 CJ evt_gidx $end

$scope begin gen_non_implemented $end
$upscope $end
$upscope $end

$scope begin gen_mhpmevent[28] $end
$var parameter 32 DJ evt_gidx $end

$scope begin gen_non_implemented $end
$upscope $end
$upscope $end

$scope begin gen_mhpmevent[27] $end
$var parameter 32 EJ evt_gidx $end

$scope begin gen_non_implemented $end
$upscope $end
$upscope $end

$scope begin gen_mhpmevent[26] $end
$var parameter 32 FJ evt_gidx $end

$scope begin gen_non_implemented $end
$upscope $end
$upscope $end

$scope begin gen_mhpmevent[25] $end
$var parameter 32 GJ evt_gidx $end

$scope begin gen_non_implemented $end
$upscope $end
$upscope $end

$scope begin gen_mhpmevent[24] $end
$var parameter 32 HJ evt_gidx $end

$scope begin gen_non_implemented $end
$upscope $end
$upscope $end

$scope begin gen_mhpmevent[23] $end
$var parameter 32 IJ evt_gidx $end

$scope begin gen_non_implemented $end
$upscope $end
$upscope $end

$scope begin gen_mhpmevent[22] $end
$var parameter 32 JJ evt_gidx $end

$scope begin gen_non_implemented $end
$upscope $end
$upscope $end

$scope begin gen_mhpmevent[21] $end
$var parameter 32 KJ evt_gidx $end

$scope begin gen_non_implemented $end
$upscope $end
$upscope $end

$scope begin gen_mhpmevent[20] $end
$var parameter 32 LJ evt_gidx $end

$scope begin gen_non_implemented $end
$upscope $end
$upscope $end

$scope begin gen_mhpmevent[19] $end
$var parameter 32 MJ evt_gidx $end

$scope begin gen_non_implemented $end
$upscope $end
$upscope $end

$scope begin gen_mhpmevent[18] $end
$var parameter 32 NJ evt_gidx $end

$scope begin gen_non_implemented $end
$upscope $end
$upscope $end

$scope begin gen_mhpmevent[17] $end
$var parameter 32 OJ evt_gidx $end

$scope begin gen_non_implemented $end
$upscope $end
$upscope $end

$scope begin gen_mhpmevent[16] $end
$var parameter 32 PJ evt_gidx $end

$scope begin gen_non_implemented $end
$upscope $end
$upscope $end

$scope begin gen_mhpmevent[15] $end
$var parameter 32 QJ evt_gidx $end

$scope begin gen_non_implemented $end
$upscope $end
$upscope $end

$scope begin gen_mhpmevent[14] $end
$var parameter 32 RJ evt_gidx $end

$scope begin gen_non_implemented $end
$upscope $end
$upscope $end

$scope begin gen_mhpmevent[13] $end
$var parameter 32 SJ evt_gidx $end

$scope begin gen_non_implemented $end
$upscope $end
$upscope $end

$scope begin gen_mhpmevent[12] $end
$var parameter 32 TJ evt_gidx $end

$scope begin gen_non_implemented $end
$upscope $end
$upscope $end

$scope begin gen_mhpmevent[11] $end
$var parameter 32 UJ evt_gidx $end

$scope begin gen_non_implemented $end
$upscope $end
$upscope $end

$scope begin gen_mhpmevent[10] $end
$var parameter 32 VJ evt_gidx $end

$scope begin gen_non_implemented $end
$upscope $end
$upscope $end

$scope begin gen_mhpmevent[9] $end
$var parameter 32 WJ evt_gidx $end

$scope begin gen_non_implemented $end
$upscope $end
$upscope $end

$scope begin gen_mhpmevent[8] $end
$var parameter 32 XJ evt_gidx $end

$scope begin gen_non_implemented $end
$upscope $end
$upscope $end

$scope begin gen_mhpmevent[7] $end
$var parameter 32 YJ evt_gidx $end

$scope begin gen_non_implemented $end
$upscope $end
$upscope $end

$scope begin gen_mhpmevent[6] $end
$var parameter 32 ZJ evt_gidx $end

$scope begin gen_non_implemented $end
$upscope $end
$upscope $end

$scope begin gen_mhpmevent[5] $end
$var parameter 32 [J evt_gidx $end

$scope begin gen_non_implemented $end
$upscope $end
$upscope $end

$scope begin gen_mhpmevent[4] $end
$var parameter 32 \J evt_gidx $end

$scope begin gen_non_implemented $end
$upscope $end
$upscope $end

$scope begin gen_mhpmevent[3] $end
$var parameter 32 ]J evt_gidx $end

$scope begin gen_implemented $end

$scope begin gen_tie_off $end
$upscope $end
$upscope $end
$upscope $end

$scope begin gen_mhpmevent[2] $end
$var parameter 32 ^J evt_gidx $end

$scope begin gen_non_implemented $end
$upscope $end
$upscope $end

$scope begin gen_mhpmevent[1] $end
$var parameter 32 _J evt_gidx $end

$scope begin gen_non_implemented $end
$upscope $end
$upscope $end

$scope begin gen_mhpmevent[0] $end
$var parameter 32 `J evt_gidx $end

$scope begin gen_non_implemented $end
$upscope $end
$upscope $end

$scope begin gen_mhpmcounter[31] $end
$var parameter 32 aJ cnt_gidx $end

$scope begin gen_non_implemented $end
$upscope $end
$upscope $end

$scope begin gen_mhpmcounter[30] $end
$var parameter 32 bJ cnt_gidx $end

$scope begin gen_non_implemented $end
$upscope $end
$upscope $end

$scope begin gen_mhpmcounter[29] $end
$var parameter 32 cJ cnt_gidx $end

$scope begin gen_non_implemented $end
$upscope $end
$upscope $end

$scope begin gen_mhpmcounter[28] $end
$var parameter 32 dJ cnt_gidx $end

$scope begin gen_non_implemented $end
$upscope $end
$upscope $end

$scope begin gen_mhpmcounter[27] $end
$var parameter 32 eJ cnt_gidx $end

$scope begin gen_non_implemented $end
$upscope $end
$upscope $end

$scope begin gen_mhpmcounter[26] $end
$var parameter 32 fJ cnt_gidx $end

$scope begin gen_non_implemented $end
$upscope $end
$upscope $end

$scope begin gen_mhpmcounter[25] $end
$var parameter 32 gJ cnt_gidx $end

$scope begin gen_non_implemented $end
$upscope $end
$upscope $end

$scope begin gen_mhpmcounter[24] $end
$var parameter 32 hJ cnt_gidx $end

$scope begin gen_non_implemented $end
$upscope $end
$upscope $end

$scope begin gen_mhpmcounter[23] $end
$var parameter 32 iJ cnt_gidx $end

$scope begin gen_non_implemented $end
$upscope $end
$upscope $end

$scope begin gen_mhpmcounter[22] $end
$var parameter 32 jJ cnt_gidx $end

$scope begin gen_non_implemented $end
$upscope $end
$upscope $end

$scope begin gen_mhpmcounter[21] $end
$var parameter 32 kJ cnt_gidx $end

$scope begin gen_non_implemented $end
$upscope $end
$upscope $end

$scope begin gen_mhpmcounter[20] $end
$var parameter 32 lJ cnt_gidx $end

$scope begin gen_non_implemented $end
$upscope $end
$upscope $end

$scope begin gen_mhpmcounter[19] $end
$var parameter 32 mJ cnt_gidx $end

$scope begin gen_non_implemented $end
$upscope $end
$upscope $end

$scope begin gen_mhpmcounter[18] $end
$var parameter 32 nJ cnt_gidx $end

$scope begin gen_non_implemented $end
$upscope $end
$upscope $end

$scope begin gen_mhpmcounter[17] $end
$var parameter 32 oJ cnt_gidx $end

$scope begin gen_non_implemented $end
$upscope $end
$upscope $end

$scope begin gen_mhpmcounter[16] $end
$var parameter 32 pJ cnt_gidx $end

$scope begin gen_non_implemented $end
$upscope $end
$upscope $end

$scope begin gen_mhpmcounter[15] $end
$var parameter 32 qJ cnt_gidx $end

$scope begin gen_non_implemented $end
$upscope $end
$upscope $end

$scope begin gen_mhpmcounter[14] $end
$var parameter 32 rJ cnt_gidx $end

$scope begin gen_non_implemented $end
$upscope $end
$upscope $end

$scope begin gen_mhpmcounter[13] $end
$var parameter 32 sJ cnt_gidx $end

$scope begin gen_non_implemented $end
$upscope $end
$upscope $end

$scope begin gen_mhpmcounter[12] $end
$var parameter 32 tJ cnt_gidx $end

$scope begin gen_non_implemented $end
$upscope $end
$upscope $end

$scope begin gen_mhpmcounter[11] $end
$var parameter 32 uJ cnt_gidx $end

$scope begin gen_non_implemented $end
$upscope $end
$upscope $end

$scope begin gen_mhpmcounter[10] $end
$var parameter 32 vJ cnt_gidx $end

$scope begin gen_non_implemented $end
$upscope $end
$upscope $end

$scope begin gen_mhpmcounter[9] $end
$var parameter 32 wJ cnt_gidx $end

$scope begin gen_non_implemented $end
$upscope $end
$upscope $end

$scope begin gen_mhpmcounter[8] $end
$var parameter 32 xJ cnt_gidx $end

$scope begin gen_non_implemented $end
$upscope $end
$upscope $end

$scope begin gen_mhpmcounter[7] $end
$var parameter 32 yJ cnt_gidx $end

$scope begin gen_non_implemented $end
$upscope $end
$upscope $end

$scope begin gen_mhpmcounter[6] $end
$var parameter 32 zJ cnt_gidx $end

$scope begin gen_non_implemented $end
$upscope $end
$upscope $end

$scope begin gen_mhpmcounter[5] $end
$var parameter 32 {J cnt_gidx $end

$scope begin gen_non_implemented $end
$upscope $end
$upscope $end

$scope begin gen_mhpmcounter[4] $end
$var parameter 32 |J cnt_gidx $end

$scope begin gen_non_implemented $end
$upscope $end
$upscope $end

$scope begin gen_mhpmcounter[3] $end
$var parameter 32 }J cnt_gidx $end

$scope begin gen_implemented $end
$upscope $end
$upscope $end

$scope begin gen_mhpmcounter[2] $end
$var parameter 32 ~J cnt_gidx $end

$scope begin gen_implemented $end
$upscope $end
$upscope $end

$scope begin gen_mhpmcounter[1] $end
$var parameter 32 !K cnt_gidx $end

$scope begin gen_non_implemented $end
$upscope $end
$upscope $end

$scope begin gen_mhpmcounter[0] $end
$var parameter 32 "K cnt_gidx $end

$scope begin gen_implemented $end
$upscope $end
$upscope $end

$scope begin gen_mhpmcounter_write[31] $end
$var parameter 32 #K wcnt_gidx $end

$scope begin gen_no_pulp_perf_counters $end

$scope begin gen_mhpmcounter_not_implemented $end
$upscope $end
$upscope $end
$upscope $end

$scope begin gen_mhpmcounter_write[30] $end
$var parameter 32 $K wcnt_gidx $end

$scope begin gen_no_pulp_perf_counters $end

$scope begin gen_mhpmcounter_not_implemented $end
$upscope $end
$upscope $end
$upscope $end

$scope begin gen_mhpmcounter_write[29] $end
$var parameter 32 %K wcnt_gidx $end

$scope begin gen_no_pulp_perf_counters $end

$scope begin gen_mhpmcounter_not_implemented $end
$upscope $end
$upscope $end
$upscope $end

$scope begin gen_mhpmcounter_write[28] $end
$var parameter 32 &K wcnt_gidx $end

$scope begin gen_no_pulp_perf_counters $end

$scope begin gen_mhpmcounter_not_implemented $end
$upscope $end
$upscope $end
$upscope $end

$scope begin gen_mhpmcounter_write[27] $end
$var parameter 32 'K wcnt_gidx $end

$scope begin gen_no_pulp_perf_counters $end

$scope begin gen_mhpmcounter_not_implemented $end
$upscope $end
$upscope $end
$upscope $end

$scope begin gen_mhpmcounter_write[26] $end
$var parameter 32 (K wcnt_gidx $end

$scope begin gen_no_pulp_perf_counters $end

$scope begin gen_mhpmcounter_not_implemented $end
$upscope $end
$upscope $end
$upscope $end

$scope begin gen_mhpmcounter_write[25] $end
$var parameter 32 )K wcnt_gidx $end

$scope begin gen_no_pulp_perf_counters $end

$scope begin gen_mhpmcounter_not_implemented $end
$upscope $end
$upscope $end
$upscope $end

$scope begin gen_mhpmcounter_write[24] $end
$var parameter 32 *K wcnt_gidx $end

$scope begin gen_no_pulp_perf_counters $end

$scope begin gen_mhpmcounter_not_implemented $end
$upscope $end
$upscope $end
$upscope $end

$scope begin gen_mhpmcounter_write[23] $end
$var parameter 32 +K wcnt_gidx $end

$scope begin gen_no_pulp_perf_counters $end

$scope begin gen_mhpmcounter_not_implemented $end
$upscope $end
$upscope $end
$upscope $end

$scope begin gen_mhpmcounter_write[22] $end
$var parameter 32 ,K wcnt_gidx $end

$scope begin gen_no_pulp_perf_counters $end

$scope begin gen_mhpmcounter_not_implemented $end
$upscope $end
$upscope $end
$upscope $end

$scope begin gen_mhpmcounter_write[21] $end
$var parameter 32 -K wcnt_gidx $end

$scope begin gen_no_pulp_perf_counters $end

$scope begin gen_mhpmcounter_not_implemented $end
$upscope $end
$upscope $end
$upscope $end

$scope begin gen_mhpmcounter_write[20] $end
$var parameter 32 .K wcnt_gidx $end

$scope begin gen_no_pulp_perf_counters $end

$scope begin gen_mhpmcounter_not_implemented $end
$upscope $end
$upscope $end
$upscope $end

$scope begin gen_mhpmcounter_write[19] $end
$var parameter 32 /K wcnt_gidx $end

$scope begin gen_no_pulp_perf_counters $end

$scope begin gen_mhpmcounter_not_implemented $end
$upscope $end
$upscope $end
$upscope $end

$scope begin gen_mhpmcounter_write[18] $end
$var parameter 32 0K wcnt_gidx $end

$scope begin gen_no_pulp_perf_counters $end

$scope begin gen_mhpmcounter_not_implemented $end
$upscope $end
$upscope $end
$upscope $end

$scope begin gen_mhpmcounter_write[17] $end
$var parameter 32 1K wcnt_gidx $end

$scope begin gen_no_pulp_perf_counters $end

$scope begin gen_mhpmcounter_not_implemented $end
$upscope $end
$upscope $end
$upscope $end

$scope begin gen_mhpmcounter_write[16] $end
$var parameter 32 2K wcnt_gidx $end

$scope begin gen_no_pulp_perf_counters $end

$scope begin gen_mhpmcounter_not_implemented $end
$upscope $end
$upscope $end
$upscope $end

$scope begin gen_mhpmcounter_write[15] $end
$var parameter 32 3K wcnt_gidx $end

$scope begin gen_no_pulp_perf_counters $end

$scope begin gen_mhpmcounter_not_implemented $end
$upscope $end
$upscope $end
$upscope $end

$scope begin gen_mhpmcounter_write[14] $end
$var parameter 32 4K wcnt_gidx $end

$scope begin gen_no_pulp_perf_counters $end

$scope begin gen_mhpmcounter_not_implemented $end
$upscope $end
$upscope $end
$upscope $end

$scope begin gen_mhpmcounter_write[13] $end
$var parameter 32 5K wcnt_gidx $end

$scope begin gen_no_pulp_perf_counters $end

$scope begin gen_mhpmcounter_not_implemented $end
$upscope $end
$upscope $end
$upscope $end

$scope begin gen_mhpmcounter_write[12] $end
$var parameter 32 6K wcnt_gidx $end

$scope begin gen_no_pulp_perf_counters $end

$scope begin gen_mhpmcounter_not_implemented $end
$upscope $end
$upscope $end
$upscope $end

$scope begin gen_mhpmcounter_write[11] $end
$var parameter 32 7K wcnt_gidx $end

$scope begin gen_no_pulp_perf_counters $end

$scope begin gen_mhpmcounter_not_implemented $end
$upscope $end
$upscope $end
$upscope $end

$scope begin gen_mhpmcounter_write[10] $end
$var parameter 32 8K wcnt_gidx $end

$scope begin gen_no_pulp_perf_counters $end

$scope begin gen_mhpmcounter_not_implemented $end
$upscope $end
$upscope $end
$upscope $end

$scope begin gen_mhpmcounter_write[9] $end
$var parameter 32 9K wcnt_gidx $end

$scope begin gen_no_pulp_perf_counters $end

$scope begin gen_mhpmcounter_not_implemented $end
$upscope $end
$upscope $end
$upscope $end

$scope begin gen_mhpmcounter_write[8] $end
$var parameter 32 :K wcnt_gidx $end

$scope begin gen_no_pulp_perf_counters $end

$scope begin gen_mhpmcounter_not_implemented $end
$upscope $end
$upscope $end
$upscope $end

$scope begin gen_mhpmcounter_write[7] $end
$var parameter 32 ;K wcnt_gidx $end

$scope begin gen_no_pulp_perf_counters $end

$scope begin gen_mhpmcounter_not_implemented $end
$upscope $end
$upscope $end
$upscope $end

$scope begin gen_mhpmcounter_write[6] $end
$var parameter 32 <K wcnt_gidx $end

$scope begin gen_no_pulp_perf_counters $end

$scope begin gen_mhpmcounter_not_implemented $end
$upscope $end
$upscope $end
$upscope $end

$scope begin gen_mhpmcounter_write[5] $end
$var parameter 32 =K wcnt_gidx $end

$scope begin gen_no_pulp_perf_counters $end

$scope begin gen_mhpmcounter_not_implemented $end
$upscope $end
$upscope $end
$upscope $end

$scope begin gen_mhpmcounter_write[4] $end
$var parameter 32 >K wcnt_gidx $end

$scope begin gen_no_pulp_perf_counters $end

$scope begin gen_mhpmcounter_not_implemented $end
$upscope $end
$upscope $end
$upscope $end

$scope begin gen_mhpmcounter_write[3] $end
$var parameter 32 ?K wcnt_gidx $end

$scope begin gen_no_pulp_perf_counters $end

$scope begin gen_mhpmcounter $end
$upscope $end
$upscope $end
$upscope $end

$scope begin gen_mhpmcounter_write[2] $end
$var parameter 32 @K wcnt_gidx $end

$scope begin gen_no_pulp_perf_counters $end

$scope begin gen_mhpmcounter_minstret $end
$upscope $end
$upscope $end
$upscope $end

$scope begin gen_mhpmcounter_write[1] $end
$var parameter 32 AK wcnt_gidx $end

$scope begin gen_no_pulp_perf_counters $end

$scope begin gen_mhpmcounter_not_implemented $end
$upscope $end
$upscope $end
$upscope $end

$scope begin gen_mhpmcounter_write[0] $end
$var parameter 32 BK wcnt_gidx $end

$scope begin gen_no_pulp_perf_counters $end

$scope begin gen_mhpmcounter_mcycle $end
$upscope $end
$upscope $end
$upscope $end

$scope begin gen_mhpmcounter_increment[31] $end
$var parameter 32 CK incr_gidx $end
$upscope $end

$scope begin gen_mhpmcounter_increment[30] $end
$var parameter 32 DK incr_gidx $end
$upscope $end

$scope begin gen_mhpmcounter_increment[29] $end
$var parameter 32 EK incr_gidx $end
$upscope $end

$scope begin gen_mhpmcounter_increment[28] $end
$var parameter 32 FK incr_gidx $end
$upscope $end

$scope begin gen_mhpmcounter_increment[27] $end
$var parameter 32 GK incr_gidx $end
$upscope $end

$scope begin gen_mhpmcounter_increment[26] $end
$var parameter 32 HK incr_gidx $end
$upscope $end

$scope begin ge